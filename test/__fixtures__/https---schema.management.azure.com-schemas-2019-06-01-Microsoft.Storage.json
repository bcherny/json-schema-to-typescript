{
  "id": "https://schema.management.azure.com/schemas/2019-06-01/Microsoft.Storage.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.Storage",
  "description": "Microsoft Storage Resource Types",
  "resourceDefinitions": {
    "storageAccounts": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Identity for the resource."
        },
        "kind": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Storage",
                "StorageV2",
                "BlobStorage",
                "FileStorage",
                "BlockBlobStorage"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required. Indicates the type of storage account."
        },
        "location": {
          "type": "string",
          "description": "Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed."
        },
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageAccountPropertiesCreateParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The parameters used to create the storage account."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_managementPolicies_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_inventoryPolicies_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_privateEndpointConnections_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_objectReplicationPolicies_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_encryptionScopes_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_blobServices_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_fileServices_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_queueServices_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_tableServices_childResource"
              }
            ]
          }
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The SKU of the storage account."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts"
          ]
        }
      },
      "required": [
        "apiVersion",
        "kind",
        "location",
        "name",
        "sku",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts"
    },
    "storageAccounts_blobServices": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^.*/default$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the blob Service within the specified storage account. Blob Service Name must be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlobServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a storage accountâ€™s Blob service."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_blobServices_containers_childResource"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices"
    },
    "storageAccounts_blobServices_containers": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a container."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices/containers"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers"
    },
    "storageAccounts_blobServices_containers_immutabilityPolicies": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^.*/default$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ImmutabilityPolicyProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of an ImmutabilityPolicy of a blob container."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies"
    },
    "storageAccounts_encryptionScopes": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "description": "The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionScopeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the encryption scope."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/encryptionScopes"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/encryptionScopes"
    },
    "storageAccounts_fileServices": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^.*/default$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the file Service within the specified storage account. File Service Name must be \"default\""
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FileServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of File services in storage account."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_fileServices_shares_childResource"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/fileServices"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/fileServices"
    },
    "storageAccounts_fileServices_shares": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "description": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FileShareProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of the file share."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/fileServices/shares"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/fileServices/shares"
    },
    "storageAccounts_inventoryPolicies": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^.*/default$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the storage account blob inventory policy. It should always be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlobInventoryPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The storage account blob inventory policy properties."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/inventoryPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/inventoryPolicies"
    },
    "storageAccounts_managementPolicies": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^.*/default$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the Storage Account Management Policy. It should always be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Storage Account ManagementPolicy properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/managementPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/managementPolicies"
    },
    "storageAccounts_objectReplicationPolicies": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "The ID of object replication policy or 'default' if the policy ID is unknown."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ObjectReplicationPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Storage Account ObjectReplicationPolicy properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/objectReplicationPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/objectReplicationPolicies"
    },
    "storageAccounts_privateEndpointConnections": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the private endpoint connection associated with the Azure resource"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the PrivateEndpointConnectProperties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/privateEndpointConnections"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/privateEndpointConnections"
    },
    "storageAccounts_queueServices": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^.*/default$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the Queue Service within the specified storage account. Queue Service Name must be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/QueueServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a storage accountâ€™s Queue service."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_queueServices_queues_childResource"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/queueServices"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/queueServices"
    },
    "storageAccounts_queueServices_queues": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$",
              "minLength": 3,
              "maxLength": 63
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/QueueProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/queueServices/queues"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/queueServices/queues"
    },
    "storageAccounts_tableServices": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^.*/default$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the Table Service within the specified storage account. Table Service Name must be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TableServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a storage accountâ€™s Table service."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_tableServices_tables_childResource"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/tableServices"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/tableServices"
    },
    "storageAccounts_tableServices_tables": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z][A-Za-z0-9]{2,62}$",
              "minLength": 3,
              "maxLength": 63
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/tableServices/tables"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/tableServices/tables"
    }
  },
  "definitions": {
    "ActiveDirectoryProperties": {
      "type": "object",
      "properties": {
        "azureStorageSid": {
          "type": "string",
          "description": "Specifies the security identifier (SID) for Azure Storage."
        },
        "domainGuid": {
          "type": "string",
          "description": "Specifies the domain GUID."
        },
        "domainName": {
          "type": "string",
          "description": "Specifies the primary domain that the AD DNS server is authoritative for."
        },
        "domainSid": {
          "type": "string",
          "description": "Specifies the security identifier (SID)."
        },
        "forestName": {
          "type": "string",
          "description": "Specifies the Active Directory forest to get."
        },
        "netBiosDomainName": {
          "type": "string",
          "description": "Specifies the NetBIOS domain name."
        }
      },
      "required": [
        "azureStorageSid",
        "domainGuid",
        "domainName",
        "domainSid",
        "forestName",
        "netBiosDomainName"
      ],
      "description": "Settings properties for Active Directory (AD)."
    },
    "AzureFilesIdentityBasedAuthentication": {
      "type": "object",
      "properties": {
        "activeDirectoryProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ActiveDirectoryProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Settings properties for Active Directory (AD)."
        },
        "directoryServiceOptions": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "AADDS",
                "AD"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates the directory service used."
        }
      },
      "required": [
        "directoryServiceOptions"
      ],
      "description": "Settings for Azure Files identity based authentication."
    },
    "BlobInventoryPolicyDefinition": {
      "type": "object",
      "properties": {
        "filters": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlobInventoryPolicyFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An object that defines the blob inventory rule filter conditions."
        }
      },
      "required": [
        "filters"
      ],
      "description": "An object that defines the blob inventory rule. Each definition consists of a set of filters."
    },
    "BlobInventoryPolicyFilter": {
      "type": "object",
      "properties": {
        "blobTypes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs."
        },
        "includeBlobVersions": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Includes blob versions in blob inventory when value set to true."
        },
        "includeSnapshots": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Includes blob snapshots in blob inventory when value set to true."
        },
        "prefixMatch": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An array of strings for blob prefixes to be matched."
        }
      },
      "required": [
        "blobTypes"
      ],
      "description": "An object that defines the blob inventory rule filter conditions."
    },
    "BlobInventoryPolicyProperties": {
      "type": "object",
      "properties": {
        "policy": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlobInventoryPolicySchema"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The storage account blob inventory policy rules."
        }
      },
      "required": [
        "policy"
      ],
      "description": "The storage account blob inventory policy properties."
    },
    "BlobInventoryPolicyRule": {
      "type": "object",
      "properties": {
        "definition": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlobInventoryPolicyDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An object that defines the blob inventory rule. Each definition consists of a set of filters."
        },
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Rule is enabled when set to true."
        },
        "name": {
          "type": "string",
          "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy."
        }
      },
      "required": [
        "definition",
        "enabled",
        "name"
      ],
      "description": "An object that wraps the blob inventory rule. Each rule is uniquely defined by name."
    },
    "BlobInventoryPolicySchema": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "string",
          "description": "Container name where blob inventory files are stored. Must be pre-created."
        },
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Policy is enabled if set to true."
        },
        "rules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BlobInventoryPolicyRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The storage account blob inventory policy rules. The rule is applied when it is enabled."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Inventory"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The valid value is Inventory"
        }
      },
      "required": [
        "destination",
        "enabled",
        "rules",
        "type"
      ],
      "description": "The storage account blob inventory policy rules."
    },
    "BlobServicePropertiesProperties": {
      "type": "object",
      "properties": {
        "automaticSnapshotPolicyEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Deprecated in favor of isVersioningEnabled property."
        },
        "changeFeed": {
          "oneOf": [
            {
              "$ref": "#/definitions/ChangeFeed"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The blob service properties for change feed events."
        },
        "containerDeleteRetentionPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeleteRetentionPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The service properties for soft delete."
        },
        "cors": {
          "oneOf": [
            {
              "$ref": "#/definitions/CorsRules"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. "
        },
        "defaultServiceVersion": {
          "type": "string",
          "description": "DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming requestâ€™s version is not specified. Possible values include version 2008-10-27 and all more recent versions."
        },
        "deleteRetentionPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeleteRetentionPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The service properties for soft delete."
        },
        "isVersioningEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Versioning is enabled if set to true."
        },
        "lastAccessTimeTrackingPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/LastAccessTimeTrackingPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The blob service properties for Last access time based tracking policy."
        },
        "restorePolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/RestorePolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The blob service properties for blob restore policy"
        }
      },
      "description": "The properties of a storage accountâ€™s Blob service."
    },
    "ChangeFeed": {
      "type": "object",
      "properties": {
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether change feed event logging is enabled for the Blob service."
        },
        "retentionInDays": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 146000
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed."
        }
      },
      "description": "The blob service properties for change feed events."
    },
    "ContainerProperties": {
      "type": "object",
      "properties": {
        "defaultEncryptionScope": {
          "type": "string",
          "description": "Default the container to use specified encryption scope for all writes."
        },
        "denyEncryptionScopeOverride": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Block override of encryption scope from the container default."
        },
        "metadata": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A name-value pair to associate with the container as metadata."
        },
        "publicAccess": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Container",
                "Blob",
                "None"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies whether data in the container may be accessed publicly and the level of access."
        }
      },
      "description": "The properties of a container."
    },
    "CorsRule": {
      "type": "object",
      "properties": {
        "allowedHeaders": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request."
        },
        "allowedMethods": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DELETE",
                  "GET",
                  "HEAD",
                  "MERGE",
                  "POST",
                  "OPTIONS",
                  "PUT"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin."
        },
        "allowedOrigins": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains"
        },
        "exposedHeaders": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required if CorsRule element is present. A list of response headers to expose to CORS clients."
        },
        "maxAgeInSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response."
        }
      },
      "required": [
        "allowedHeaders",
        "allowedMethods",
        "allowedOrigins",
        "exposedHeaders",
        "maxAgeInSeconds"
      ],
      "description": "Specifies a CORS rule for the Blob service."
    },
    "CorsRules": {
      "type": "object",
      "properties": {
        "corsRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CorsRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The List of CORS rules. You can include up to five CorsRule elements in the request. "
        }
      },
      "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. "
    },
    "CustomDomain": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source."
        },
        "useSubDomainName": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates."
        }
      },
      "required": [
        "name"
      ],
      "description": "The custom domain assigned to this storage account. This can be set via Update."
    },
    "DateAfterCreation": {
      "type": "object",
      "properties": {
        "daysAfterCreationGreaterThan": {
          "oneOf": [
            {
              "type": "number",
              "multipleOf": 1,
              "minimum": 0
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Value indicating the age in days after creation"
        }
      },
      "required": [
        "daysAfterCreationGreaterThan"
      ],
      "description": "Object to define the number of days after creation."
    },
    "DateAfterModification": {
      "type": "object",
      "properties": {
        "daysAfterLastAccessTimeGreaterThan": {
          "oneOf": [
            {
              "type": "number",
              "multipleOf": 1,
              "minimum": 0
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy"
        },
        "daysAfterModificationGreaterThan": {
          "oneOf": [
            {
              "type": "number",
              "multipleOf": 1,
              "minimum": 0
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Value indicating the age in days after last modification"
        }
      },
      "description": "Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive."
    },
    "DeleteRetentionPolicy": {
      "type": "object",
      "properties": {
        "days": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 365
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365."
        },
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether DeleteRetentionPolicy is enabled."
        }
      },
      "description": "The service properties for soft delete."
    },
    "Encryption": {
      "type": "object",
      "properties": {
        "keySource": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Microsoft.Storage",
                "Microsoft.Keyvault"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault."
        },
        "keyvaultproperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of key vault."
        },
        "requireInfrastructureEncryption": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest."
        },
        "services": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionServices"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of services that support encryption."
        }
      },
      "required": [
        "keySource"
      ],
      "description": "The encryption settings on the storage account."
    },
    "EncryptionScopeKeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyUri": {
          "type": "string",
          "description": "The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope."
        }
      },
      "description": "The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'."
    },
    "EncryptionScopeProperties": {
      "type": "object",
      "properties": {
        "keyVaultProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionScopeKeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'."
        },
        "source": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Microsoft.Storage",
                "Microsoft.KeyVault"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault."
        },
        "state": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled."
        }
      },
      "description": "Properties of the encryption scope."
    },
    "EncryptionService": {
      "type": "object",
      "properties": {
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A boolean indicating whether or not the service encrypts the data as it is stored."
        },
        "keyType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Service",
                "Account"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used."
        }
      },
      "description": "A service that allows server-side encryption to be used."
    },
    "EncryptionServices": {
      "type": "object",
      "properties": {
        "blob": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A service that allows server-side encryption to be used."
        },
        "file": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A service that allows server-side encryption to be used."
        },
        "queue": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A service that allows server-side encryption to be used."
        },
        "table": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A service that allows server-side encryption to be used."
        }
      },
      "description": "A list of services that support encryption."
    },
    "FileServicePropertiesProperties": {
      "type": "object",
      "properties": {
        "cors": {
          "oneOf": [
            {
              "$ref": "#/definitions/CorsRules"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. "
        },
        "shareDeleteRetentionPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeleteRetentionPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The service properties for soft delete."
        }
      },
      "description": "The properties of File services in storage account."
    },
    "FileShareProperties": {
      "type": "object",
      "properties": {
        "accessTier": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "TransactionOptimized",
                "Hot",
                "Cool",
                "Premium"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium."
        },
        "enabledProtocols": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SMB",
                "NFS"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication protocol that is used for the file share. Can only be specified when creating a share."
        },
        "metadata": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A name-value pair to associate with the share as metadata."
        },
        "rootSquash": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "NoRootSquash",
                "RootSquash",
                "AllSquash"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The property is for NFS share only. The default is NoRootSquash."
        },
        "shareQuota": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 102400
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400."
        }
      },
      "description": "The properties of the file share."
    },
    "Identity": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SystemAssigned"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The identity type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Identity for the resource."
    },
    "ImmutabilityPolicyProperty": {
      "type": "object",
      "properties": {
        "allowProtectedAppendWrites": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API"
        },
        "immutabilityPeriodSinceCreationInDays": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The immutability period for the blobs in the container since the policy creation, in days."
        }
      },
      "description": "The properties of an ImmutabilityPolicy of a blob container."
    },
    "IPRule": {
      "type": "object",
      "properties": {
        "action": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Allow"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The action of IP ACL rule."
        },
        "value": {
          "type": "string",
          "description": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed."
        }
      },
      "required": [
        "value"
      ],
      "description": "IP rule with specific IP or IP range in CIDR format."
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyname": {
          "type": "string",
          "description": "The name of KeyVault key."
        },
        "keyvaulturi": {
          "type": "string",
          "description": "The Uri of KeyVault."
        },
        "keyversion": {
          "type": "string",
          "description": "The version of KeyVault key."
        }
      },
      "description": "Properties of key vault."
    },
    "LastAccessTimeTrackingPolicy": {
      "type": "object",
      "properties": {
        "blobType": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only"
        },
        "enable": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "When set to true last access time based tracking is enabled."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "AccessTimeTracking"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Name of the policy. The valid value is AccessTimeTracking. This field is currently read only."
        },
        "trackingGranularityInDays": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1"
        }
      },
      "required": [
        "enable"
      ],
      "description": "The blob service properties for Last access time based tracking policy."
    },
    "ManagementPolicyAction": {
      "type": "object",
      "properties": {
        "baseBlob": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyBaseBlob"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Management policy action for base blob."
        },
        "snapshot": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicySnapShot"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Management policy action for snapshot."
        },
        "version": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyVersion"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Management policy action for blob version."
        }
      },
      "description": "Actions are applied to the filtered blobs when the execution condition is met."
    },
    "ManagementPolicyBaseBlob": {
      "type": "object",
      "properties": {
        "delete": {
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterModification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive."
        },
        "enableAutoTierToHotFromCool": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan."
        },
        "tierToArchive": {
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterModification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive."
        },
        "tierToCool": {
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterModification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive."
        }
      },
      "description": "Management policy action for base blob."
    },
    "ManagementPolicyDefinition": {
      "type": "object",
      "properties": {
        "actions": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyAction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Actions are applied to the filtered blobs when the execution condition is met."
        },
        "filters": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. "
        }
      },
      "required": [
        "actions"
      ],
      "description": "An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set."
    },
    "ManagementPolicyFilter": {
      "type": "object",
      "properties": {
        "blobIndexMatch": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TagFilter"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An array of blob index tag based filters, there can be at most 10 tag filters"
        },
        "blobTypes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob."
        },
        "prefixMatch": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An array of strings for prefixes to be match."
        }
      },
      "required": [
        "blobTypes"
      ],
      "description": "Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. "
    },
    "ManagementPolicyProperties": {
      "type": "object",
      "properties": {
        "policy": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicySchema"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts."
        }
      },
      "required": [
        "policy"
      ],
      "description": "The Storage Account ManagementPolicy properties."
    },
    "ManagementPolicyRule": {
      "type": "object",
      "properties": {
        "definition": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set."
        },
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Rule is enabled if set to true."
        },
        "name": {
          "type": "string",
          "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Lifecycle"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The valid value is Lifecycle"
        }
      },
      "required": [
        "definition",
        "name",
        "type"
      ],
      "description": "An object that wraps the Lifecycle rule. Each rule is uniquely defined by name."
    },
    "ManagementPolicySchema": {
      "type": "object",
      "properties": {
        "rules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManagementPolicyRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts."
        }
      },
      "required": [
        "rules"
      ],
      "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts."
    },
    "ManagementPolicySnapShot": {
      "type": "object",
      "properties": {
        "delete": {
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Object to define the number of days after creation."
        },
        "tierToArchive": {
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Object to define the number of days after creation."
        },
        "tierToCool": {
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Object to define the number of days after creation."
        }
      },
      "description": "Management policy action for snapshot."
    },
    "ManagementPolicyVersion": {
      "type": "object",
      "properties": {
        "delete": {
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Object to define the number of days after creation."
        },
        "tierToArchive": {
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Object to define the number of days after creation."
        },
        "tierToCool": {
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Object to define the number of days after creation."
        }
      },
      "description": "Management policy action for blob version."
    },
    "NetworkRuleSet": {
      "type": "object",
      "properties": {
        "bypass": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Logging",
                "Metrics",
                "AzureServices"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics."
        },
        "defaultAction": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Allow",
                "Deny"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the default action of allow or deny when no other rules match."
        },
        "ipRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IPRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sets the IP ACL rules"
        },
        "virtualNetworkRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VirtualNetworkRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sets the virtual network rules"
        }
      },
      "required": [
        "defaultAction"
      ],
      "description": "Network rule set"
    },
    "ObjectReplicationPolicyFilter": {
      "type": "object",
      "properties": {
        "minCreationTime": {
          "type": "string",
          "description": "Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z"
        },
        "prefixMatch": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Optional. Filters the results to replicate only blobs whose names begin with the specified prefix."
        }
      },
      "description": "Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters."
    },
    "ObjectReplicationPolicyProperties": {
      "type": "object",
      "properties": {
        "destinationAccount": {
          "type": "string",
          "description": "Required. Destination account name."
        },
        "rules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ObjectReplicationPolicyRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The storage account object replication rules."
        },
        "sourceAccount": {
          "type": "string",
          "description": "Required. Source account name."
        }
      },
      "required": [
        "destinationAccount",
        "sourceAccount"
      ],
      "description": "The Storage Account ObjectReplicationPolicy properties."
    },
    "ObjectReplicationPolicyRule": {
      "type": "object",
      "properties": {
        "destinationContainer": {
          "type": "string",
          "description": "Required. Destination container name."
        },
        "filters": {
          "oneOf": [
            {
              "$ref": "#/definitions/ObjectReplicationPolicyFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters."
        },
        "ruleId": {
          "type": "string",
          "description": "Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account."
        },
        "sourceContainer": {
          "type": "string",
          "description": "Required. Source container name."
        }
      },
      "required": [
        "destinationContainer",
        "sourceContainer"
      ],
      "description": "The replication policy rule between two containers."
    },
    "PrivateEndpoint": {
      "type": "object",
      "properties": {},
      "description": "The Private Endpoint resource."
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Private Endpoint resource."
        },
        "privateLinkServiceConnectionState": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Succeeded",
                "Creating",
                "Deleting",
                "Failed"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The provisioning state of the private endpoint connection resource."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "description": "Properties of the PrivateEndpointConnectProperties."
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "actionRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "status": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Pending",
                "Approved",
                "Rejected"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        }
      },
      "description": "A collection of information about the state of the connection between service consumer and provider."
    },
    "QueueProperties": {
      "type": "object",
      "properties": {
        "metadata": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A name-value pair that represents queue metadata."
        }
      }
    },
    "QueueServicePropertiesProperties": {
      "type": "object",
      "properties": {
        "cors": {
          "oneOf": [
            {
              "$ref": "#/definitions/CorsRules"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. "
        }
      },
      "description": "The properties of a storage accountâ€™s Queue service."
    },
    "RestorePolicyProperties": {
      "type": "object",
      "properties": {
        "days": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 365
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days."
        },
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Blob restore is enabled if set to true."
        }
      },
      "required": [
        "enabled"
      ],
      "description": "The blob service properties for blob restore policy"
    },
    "RoutingPreference": {
      "type": "object",
      "properties": {
        "publishInternetEndpoints": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A boolean flag which indicates whether internet routing storage endpoints are to be published"
        },
        "publishMicrosoftEndpoints": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A boolean flag which indicates whether microsoft routing storage endpoints are to be published"
        },
        "routingChoice": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "MicrosoftRouting",
                "InternetRouting"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Routing Choice defines the kind of network routing opted by the user."
        }
      },
      "description": "Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing"
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GZRS",
                "Standard_RAGZRS"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tier": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Standard",
                "Premium"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "description": "The SKU of the storage account."
    },
    "StorageAccountPropertiesCreateParameters": {
      "type": "object",
      "properties": {
        "accessTier": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Hot",
                "Cool"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required for storage accounts where kind = BlobStorage. The access tier used for billing."
        },
        "allowBlobPublicAccess": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property."
        },
        "allowSharedKeyAccess": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true."
        },
        "azureFilesIdentityBasedAuthentication": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureFilesIdentityBasedAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Settings for Azure Files identity based authentication."
        },
        "customDomain": {
          "oneOf": [
            {
              "$ref": "#/definitions/CustomDomain"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The custom domain assigned to this storage account. This can be set via Update."
        },
        "encryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/Encryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The encryption settings on the storage account."
        },
        "isHnsEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Account HierarchicalNamespace enabled if sets to true."
        },
        "largeFileSharesState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Disabled",
                "Enabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled."
        },
        "minimumTlsVersion": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "TLS1_0",
                "TLS1_1",
                "TLS1_2"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property."
        },
        "networkAcls": {
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkRuleSet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Network rule set"
        },
        "routingPreference": {
          "oneOf": [
            {
              "$ref": "#/definitions/RoutingPreference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing"
        },
        "supportsHttpsTrafficOnly": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01."
        }
      },
      "description": "The parameters used to create the storage account."
    },
    "storageAccounts_blobServices_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "enum": [
            "default"
          ],
          "description": "The name of the blob Service within the specified storage account. Blob Service Name must be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlobServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a storage accountâ€™s Blob service."
        },
        "type": {
          "type": "string",
          "enum": [
            "blobServices"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices"
    },
    "storageAccounts_blobServices_containers_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a container."
        },
        "type": {
          "type": "string",
          "enum": [
            "containers"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers"
    },
    "storageAccounts_blobServices_containers_immutabilityPolicies_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "enum": [
            "default"
          ],
          "description": "The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ImmutabilityPolicyProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of an ImmutabilityPolicy of a blob container."
        },
        "type": {
          "type": "string",
          "enum": [
            "immutabilityPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies"
    },
    "storageAccounts_encryptionScopes_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "description": "The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionScopeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the encryption scope."
        },
        "type": {
          "type": "string",
          "enum": [
            "encryptionScopes"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/encryptionScopes"
    },
    "storageAccounts_fileServices_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "enum": [
            "default"
          ],
          "description": "The name of the file Service within the specified storage account. File Service Name must be \"default\""
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FileServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of File services in storage account."
        },
        "type": {
          "type": "string",
          "enum": [
            "fileServices"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/fileServices"
    },
    "storageAccounts_fileServices_shares_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "description": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FileShareProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of the file share."
        },
        "type": {
          "type": "string",
          "enum": [
            "shares"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/fileServices/shares"
    },
    "storageAccounts_inventoryPolicies_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "enum": [
            "default"
          ],
          "description": "The name of the storage account blob inventory policy. It should always be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlobInventoryPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The storage account blob inventory policy properties."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "inventoryPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/inventoryPolicies"
    },
    "storageAccounts_managementPolicies_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "enum": [
            "default"
          ],
          "description": "The name of the Storage Account Management Policy. It should always be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Storage Account ManagementPolicy properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "managementPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/managementPolicies"
    },
    "storageAccounts_objectReplicationPolicies_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "The ID of object replication policy or 'default' if the policy ID is unknown."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ObjectReplicationPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Storage Account ObjectReplicationPolicy properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "objectReplicationPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/objectReplicationPolicies"
    },
    "storageAccounts_privateEndpointConnections_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the private endpoint connection associated with the Azure resource"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the PrivateEndpointConnectProperties."
        },
        "type": {
          "type": "string",
          "enum": [
            "privateEndpointConnections"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/privateEndpointConnections"
    },
    "storageAccounts_queueServices_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "enum": [
            "default"
          ],
          "description": "The name of the Queue Service within the specified storage account. Queue Service Name must be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/QueueServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a storage accountâ€™s Queue service."
        },
        "type": {
          "type": "string",
          "enum": [
            "queueServices"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/queueServices"
    },
    "storageAccounts_queueServices_queues_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$",
              "minLength": 3,
              "maxLength": 63
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/QueueProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "queues"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/queueServices/queues"
    },
    "storageAccounts_tableServices_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "type": "string",
          "enum": [
            "default"
          ],
          "description": "The name of the Table Service within the specified storage account. Table Service Name must be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TableServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a storage accountâ€™s Table service."
        },
        "type": {
          "type": "string",
          "enum": [
            "tableServices"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/tableServices"
    },
    "storageAccounts_tableServices_tables_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z][A-Za-z0-9]{2,62}$",
              "minLength": 3,
              "maxLength": 63
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character."
        },
        "type": {
          "type": "string",
          "enum": [
            "tables"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/tableServices/tables"
    },
    "SystemData": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of identity that created the resource."
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of identity that last modified the resource."
        }
      },
      "description": "Metadata pertaining to creation and last modification of the resource."
    },
    "TableServicePropertiesProperties": {
      "type": "object",
      "properties": {
        "cors": {
          "oneOf": [
            {
              "$ref": "#/definitions/CorsRules"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. "
        }
      },
      "description": "The properties of a storage accountâ€™s Table service."
    },
    "TagFilter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "description": "This is the filter tag name, it can have 1 - 128 characters"
        },
        "op": {
          "type": "string",
          "description": "This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported"
        },
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 256,
          "description": "This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters"
        }
      },
      "required": [
        "name",
        "op",
        "value"
      ],
      "description": "Blob index tag based filtering for blob objects"
    },
    "VirtualNetworkRule": {
      "type": "object",
      "properties": {
        "action": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Allow"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The action of virtual network rule."
        },
        "id": {
          "type": "string",
          "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}."
        },
        "state": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "provisioning",
                "deprovisioning",
                "succeeded",
                "failed",
                "networkSourceDeleted"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets the state of virtual network rule."
        }
      },
      "required": [
        "id"
      ],
      "description": "Virtual Network rule."
    }
  }
}
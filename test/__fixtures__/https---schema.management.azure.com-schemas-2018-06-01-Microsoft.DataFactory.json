{
  "id": "https://schema.management.azure.com/schemas/2018-06-01/Microsoft.DataFactory.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.DataFactory",
  "description": "Microsoft DataFactory Resource Types",
  "resourceDefinitions": {
    "factories": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/FactoryIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Identity properties of the factory resource."
        },
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
              "minLength": 3,
              "maxLength": 63
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The factory name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FactoryProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Factory resource properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/factories_integrationRuntimes_childResource"
              },
              {
                "$ref": "#/definitions/factories_linkedservices_childResource"
              },
              {
                "$ref": "#/definitions/factories_datasets_childResource"
              },
              {
                "$ref": "#/definitions/factories_pipelines_childResource"
              },
              {
                "$ref": "#/definitions/factories_triggers_childResource"
              },
              {
                "$ref": "#/definitions/factories_dataflows_childResource"
              },
              {
                "$ref": "#/definitions/factories_managedVirtualNetworks_childResource"
              },
              {
                "$ref": "#/definitions/factories_privateEndpointConnections_childResource"
              },
              {
                "$ref": "#/definitions/factories_globalParameters_childResource"
              }
            ]
          }
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories"
    },
    "factories_dataflows": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
              "minLength": 1,
              "maxLength": 260
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The data flow name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataFlow"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory nested object which contains a flow with data movements and transformations."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories/dataflows"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/dataflows"
    },
    "factories_datasets": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
              "minLength": 1,
              "maxLength": 260
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The dataset name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Dataset"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Azure Data Factory nested object which identifies data within different data stores, such as tables, files, folders, and documents."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories/datasets"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/datasets"
    },
    "factories_globalParameters": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
              "minLength": 1,
              "maxLength": 260
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The global parameter name."
        },
        "properties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/GlobalParameterSpecification"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Global parameters associated with the Azure Data Factory"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories/globalParameters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/globalParameters"
    },
    "factories_integrationRuntimes": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
              "minLength": 3,
              "maxLength": 63
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The integration runtime name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntime"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory nested object which serves as a compute resource for activities."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories/integrationRuntimes"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/integrationRuntimes"
    },
    "factories_linkedservices": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
              "minLength": 1,
              "maxLength": 260
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The linked service name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The nested object which contains the information and credential which can be used to connect with related store or compute resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories/linkedservices"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/linkedservices"
    },
    "factories_managedVirtualNetworks": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
              "minLength": 1,
              "maxLength": 127
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Managed virtual network name"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedVirtualNetwork"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A managed Virtual Network associated with the Azure Data Factory"
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/factories_managedVirtualNetworks_managedPrivateEndpoints_childResource"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories/managedVirtualNetworks"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/managedVirtualNetworks"
    },
    "factories_managedVirtualNetworks_managedPrivateEndpoints": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
              "minLength": 1,
              "maxLength": 127
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Managed private endpoint name"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedPrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of a managed private endpoint"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints"
    },
    "factories_pipelines": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
              "minLength": 1,
              "maxLength": 260
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The pipeline name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Pipeline"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A data factory pipeline."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories/pipelines"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/pipelines"
    },
    "factories_privateEndpointConnections": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The private endpoint connection name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkConnectionApprovalRequest"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A request to approve or reject a private endpoint connection"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories/privateEndpointConnections"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/privateEndpointConnections"
    },
    "factories_triggers": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
              "minLength": 1,
              "maxLength": 260
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The trigger name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Trigger"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure data factory nested object which contains information about creating pipeline run"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories/triggers"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/triggers"
    }
  },
  "definitions": {
    "Activity": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        },
        {
          "$ref": "#/definitions/ExecutionActivity"
        },
        {
          "$ref": "#/definitions/ExecuteWranglingDataflowActivity"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "dependsOn": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityDependency"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Activity depends on condition."
        },
        "description": {
          "type": "string",
          "description": "Activity description."
        },
        "name": {
          "type": "string",
          "description": "Activity name."
        },
        "userProperties": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserProperty"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Activity user properties."
        }
      },
      "required": [
        "name"
      ],
      "description": "A pipeline activity."
    },
    "ActivityDependency": {
      "type": "object",
      "properties": {
        "activity": {
          "type": "string",
          "description": "Activity name."
        },
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "dependencyConditions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Succeeded",
                  "Failed",
                  "Skipped",
                  "Completed"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Match-Condition for the dependency."
        }
      },
      "required": [
        "activity",
        "dependencyConditions"
      ],
      "description": "Activity dependency information."
    },
    "ActivityPolicy": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "retry": {
          "type": "object",
          "properties": {},
          "description": "Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "retryIntervalInSeconds": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 30,
              "maximum": 86400
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Interval between each retry attempt (in seconds). The default is 30 sec."
        },
        "secureInput": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "When set to true, Input from activity is considered as secure and will not be logged to monitoring."
        },
        "secureOutput": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "When set to true, Output from activity is considered as secure and will not be logged to monitoring."
        },
        "timeout": {
          "type": "object",
          "properties": {},
          "description": "Specifies the timeout for the activity to run. The default timeout is 7 days. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      },
      "description": "Execution policy for an activity."
    },
    "AmazonMWSLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AmazonMWS"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmazonMWSLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Amazon Marketplace Web Service linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Amazon Marketplace Web Service linked service."
    },
    "AmazonMWSLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accessKeyId": {
          "type": "object",
          "properties": {},
          "description": "The access key id used to access data."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "endpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)"
        },
        "marketplaceID": {
          "type": "object",
          "properties": {},
          "description": "The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)"
        },
        "mwsAuthToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "secretKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "sellerID": {
          "type": "object",
          "properties": {},
          "description": "The Amazon seller ID."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        }
      },
      "required": [
        "accessKeyId",
        "endpoint",
        "marketplaceID",
        "sellerID"
      ],
      "description": "Amazon Marketplace Web Service linked service properties."
    },
    "AmazonMWSObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AmazonMWSObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Amazon Marketplace Web Service dataset."
    },
    "AmazonMWSSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AmazonMWSSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Amazon Marketplace Web Service source."
    },
    "AmazonRdsForLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "AmazonRdsForOracle database linked service properties."
    },
    "AmazonRdsForOracleLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AmazonRdsForOracle"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmazonRdsForLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "AmazonRdsForOracle database linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "AmazonRdsForOracle database."
    },
    "AmazonRdsForOraclePartitionSettings": {
      "type": "object",
      "properties": {
        "partitionColumnName": {
          "type": "object",
          "properties": {},
          "description": "The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionLowerBound": {
          "type": "object",
          "properties": {},
          "description": "The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionNames": {
          "type": "object",
          "properties": {},
          "description": "Names of the physical partitions of AmazonRdsForOracle table. "
        },
        "partitionUpperBound": {
          "type": "object",
          "properties": {},
          "description": "The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        }
      },
      "description": "The settings that will be leveraged for AmazonRdsForOracle source partitioning."
    },
    "AmazonRdsForOracleSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "oracleReaderQuery": {
          "type": "object",
          "properties": {},
          "description": "AmazonRdsForOracle reader query. Type: string (or Expression with resultType string)."
        },
        "partitionOption": {
          "type": "object",
          "properties": {},
          "description": "The partition mechanism that will be used for AmazonRdsForOracle read in parallel. Type: string (or Expression with resultType string)."
        },
        "partitionSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmazonRdsForOraclePartitionSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The settings that will be leveraged for AmazonRdsForOracle source partitioning."
        },
        "queryTimeout": {
          "type": "object",
          "properties": {},
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "type": {
          "type": "string",
          "enum": [
            "AmazonRdsForOracleSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity AmazonRdsForOracle source."
    },
    "AmazonRdsForOracleTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AmazonRdsForOracleTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmazonRdsForOracleTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "AmazonRdsForOracle dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The AmazonRdsForOracle database dataset."
    },
    "AmazonRdsForOracleTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the AmazonRdsForOracle database. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the AmazonRdsForOracle database. Type: string (or Expression with resultType string)."
        }
      },
      "description": "AmazonRdsForOracle dataset properties."
    },
    "AmazonRdsForSqlServerLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AmazonRdsForSqlServer"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmazonRdsForSqlServerLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Amazon Rds for SQL Server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Amazon RDS for SQL Server linked service."
    },
    "AmazonRdsForSqlServerLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "alwaysEncryptedSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlAlwaysEncryptedProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sql always encrypted properties."
        },
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "The on-premises Windows authentication user name. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "Amazon Rds for SQL Server linked service properties."
    },
    "AmazonRdsForSqlServerSource": {
      "type": "object",
      "properties": {
        "partitionOption": {
          "type": "object",
          "properties": {},
          "description": "The partition mechanism that will be used for Sql read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\"."
        },
        "partitionSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlPartitionSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The settings that will be leveraged for Sql source partitioning."
        },
        "produceAdditionalTypes": {
          "type": "object",
          "properties": {},
          "description": "Which additional types to produce."
        },
        "sqlReaderQuery": {
          "type": "object",
          "properties": {},
          "description": "SQL reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "properties": {},
          "description": "Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/StoredProcedureParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\"."
        },
        "type": {
          "type": "string",
          "enum": [
            "AmazonRdsForSqlServerSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Amazon RDS for SQL Server source."
    },
    "AmazonRdsForSqlServerTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AmazonRdsForSqlServerTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmazonRdsForSqlServerTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Amazon RDS for SQL Server dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Amazon RDS for SQL Server dataset."
    },
    "AmazonRdsForSqlServerTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the SQL Server dataset. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the SQL Server dataset. Type: string (or Expression with resultType string)."
        }
      },
      "description": "The Amazon RDS for SQL Server dataset properties."
    },
    "AmazonRedshiftLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AmazonRedshift"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmazonRedshiftLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Amazon Redshift linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Amazon Redshift."
    },
    "AmazonRedshiftLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "database": {
          "type": "object",
          "properties": {},
          "description": "The database name of the Amazon Redshift source. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer)."
        },
        "server": {
          "type": "object",
          "properties": {},
          "description": "The name of the Amazon Redshift server. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The username of the Amazon Redshift source. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "database",
        "server"
      ],
      "description": "Amazon Redshift linked service properties."
    },
    "AmazonRedshiftSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "redshiftUnloadSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/RedshiftUnloadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3."
        },
        "type": {
          "type": "string",
          "enum": [
            "AmazonRedshiftSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for Amazon Redshift Source."
    },
    "AmazonRedshiftTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AmazonRedshiftTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmazonRedshiftTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Amazon Redshift table dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Amazon Redshift table dataset."
    },
    "AmazonRedshiftTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The Amazon Redshift schema name. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The Amazon Redshift table name. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "Amazon Redshift table dataset properties."
    },
    "AmazonS3CompatibleLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AmazonS3Compatible"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmazonS3CompatibleLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Amazon S3 Compatible linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Amazon S3 Compatible."
    },
    "AmazonS3CompatibleLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accessKeyId": {
          "type": "object",
          "properties": {},
          "description": "The access key identifier of the Amazon S3 Compatible Identity and Access Management (IAM) user. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "forcePathStyle": {
          "type": "object",
          "properties": {},
          "description": "If true, use S3 path-style access instead of virtual hosted-style access. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "secretAccessKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "serviceUrl": {
          "type": "object",
          "properties": {},
          "description": "This value specifies the endpoint to access with the Amazon S3 Compatible Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Amazon S3 Compatible linked service properties."
    },
    "AmazonS3CompatibleLocation": {
      "type": "object",
      "properties": {
        "bucketName": {
          "type": "object",
          "properties": {},
          "description": "Specify the bucketName of Amazon S3 Compatible. Type: string (or Expression with resultType string)"
        },
        "type": {
          "type": "string",
          "enum": [
            "AmazonS3CompatibleLocation"
          ]
        },
        "version": {
          "type": "object",
          "properties": {},
          "description": "Specify the version of Amazon S3 Compatible. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "The location of Amazon S3 Compatible dataset."
    },
    "AmazonS3CompatibleReadSettings": {
      "type": "object",
      "properties": {
        "deleteFilesAfterCompletion": {
          "type": "object",
          "properties": {},
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "enablePartitionDiscovery": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether to enable partition discovery."
        },
        "fileListPath": {
          "type": "object",
          "properties": {},
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "properties": {},
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "properties": {},
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "partitionRootPath": {
          "type": "object",
          "properties": {},
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "prefix": {
          "type": "object",
          "properties": {},
          "description": "The prefix filter for the S3 Compatible object name. Type: string (or Expression with resultType string)."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AmazonS3CompatibleReadSettings"
          ]
        },
        "wildcardFileName": {
          "type": "object",
          "properties": {},
          "description": "Amazon S3 Compatible wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "properties": {},
          "description": "Amazon S3 Compatible wildcardFolderPath. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "Amazon S3 Compatible read settings."
    },
    "AmazonS3Dataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AmazonS3Object"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmazonS3DatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Amazon S3 dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "A single Amazon Simple Storage Service (S3) object or a set of S3 objects."
    },
    "AmazonS3DatasetTypeProperties": {
      "type": "object",
      "properties": {
        "bucketName": {
          "type": "object",
          "properties": {},
          "description": "The name of the Amazon S3 bucket. Type: string (or Expression with resultType string)."
        },
        "compression": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetCompression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression method used on a dataset."
        },
        "format": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetStorageFormat"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The format definition of a storage."
        },
        "key": {
          "type": "object",
          "properties": {},
          "description": "The key of the Amazon S3 object. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "properties": {},
          "description": "The end of S3 object's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "properties": {},
          "description": "The start of S3 object's modified datetime. Type: string (or Expression with resultType string)."
        },
        "prefix": {
          "type": "object",
          "properties": {},
          "description": "The prefix filter for the S3 object name. Type: string (or Expression with resultType string)."
        },
        "version": {
          "type": "object",
          "properties": {},
          "description": "The version for the S3 object. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "bucketName"
      ],
      "description": "Amazon S3 dataset properties."
    },
    "AmazonS3LinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AmazonS3"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmazonS3LinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Amazon S3 linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Amazon S3."
    },
    "AmazonS3LinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accessKeyId": {
          "type": "object",
          "properties": {},
          "description": "The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "type": "object",
          "properties": {},
          "description": "The authentication type of S3. Allowed value: AccessKey (default) or TemporarySecurityCredentials. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "secretAccessKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "serviceUrl": {
          "type": "object",
          "properties": {},
          "description": "This value specifies the endpoint to access with the S3 Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string)."
        },
        "sessionToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        }
      },
      "description": "Amazon S3 linked service properties."
    },
    "AmazonS3Location": {
      "type": "object",
      "properties": {
        "bucketName": {
          "type": "object",
          "properties": {},
          "description": "Specify the bucketName of amazon S3. Type: string (or Expression with resultType string)"
        },
        "type": {
          "type": "string",
          "enum": [
            "AmazonS3Location"
          ]
        },
        "version": {
          "type": "object",
          "properties": {},
          "description": "Specify the version of amazon S3. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "The location of amazon S3 dataset."
    },
    "AmazonS3ReadSettings": {
      "type": "object",
      "properties": {
        "deleteFilesAfterCompletion": {
          "type": "object",
          "properties": {},
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "enablePartitionDiscovery": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether to enable partition discovery."
        },
        "fileListPath": {
          "type": "object",
          "properties": {},
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "properties": {},
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "properties": {},
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "partitionRootPath": {
          "type": "object",
          "properties": {},
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "prefix": {
          "type": "object",
          "properties": {},
          "description": "The prefix filter for the S3 object name. Type: string (or Expression with resultType string)."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AmazonS3ReadSettings"
          ]
        },
        "wildcardFileName": {
          "type": "object",
          "properties": {},
          "description": "AmazonS3 wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "properties": {},
          "description": "AmazonS3 wildcardFolderPath. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "Amazon S3 read settings."
    },
    "AppendVariableActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AppendVariable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AppendVariableActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "AppendVariable activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Append value for a Variable of type Array."
    },
    "AppendVariableActivityTypeProperties": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "properties": {},
          "description": "Value to be appended. Could be a static value or Expression"
        },
        "variableName": {
          "type": "string",
          "description": "Name of the variable whose value needs to be appended to."
        }
      },
      "description": "AppendVariable activity properties."
    },
    "AppFiguresLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AppFigures"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AppFiguresLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "AppFigures linked service type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for AppFigures."
    },
    "AppFiguresLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clientKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "The username of the Appfigures source."
        }
      },
      "required": [
        "clientKey",
        "password",
        "userName"
      ],
      "description": "AppFigures linked service type properties."
    },
    "AsanaLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Asana"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AsanaLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Asana linked service type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Asana."
    },
    "AsanaLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "apiToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "apiToken"
      ],
      "description": "Asana linked service type properties."
    },
    "AvroDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Avro"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AvroDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Avro dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "Avro dataset."
    },
    "AvroDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "avroCompressionCodec": {
          "type": "object",
          "properties": {},
          "description": "The data avroCompressionCodec. Type: string (or Expression with resultType string)."
        },
        "avroCompressionLevel": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 9
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset location."
        }
      },
      "required": [
        "location"
      ],
      "description": "Avro dataset properties."
    },
    "AvroFormat": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AvroFormat"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The data stored in Avro format."
    },
    "AvroSink": {
      "type": "object",
      "properties": {
        "formatSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/AvroWriteSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Avro write settings."
        },
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreWriteSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector write settings."
        },
        "type": {
          "type": "string",
          "enum": [
            "AvroSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Avro sink."
    },
    "AvroSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector read setting."
        },
        "type": {
          "type": "string",
          "enum": [
            "AvroSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Avro source."
    },
    "AvroWriteSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "fileNamePrefix": {
          "type": "object",
          "properties": {},
          "description": "Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string)."
        },
        "maxRowsPerFile": {
          "type": "object",
          "properties": {},
          "description": "Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer)."
        },
        "recordName": {
          "type": "string",
          "description": "Top level record name in write result, which is required in AVRO spec."
        },
        "recordNamespace": {
          "type": "string",
          "description": "Record namespace in the write result."
        }
      },
      "description": "Avro write settings."
    },
    "AzPowerShellSetup": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzPowerShellSetup"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzPowerShellSetupTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Installation of Azure PowerShell type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The express custom setup of installing Azure PowerShell."
    },
    "AzPowerShellSetupTypeProperties": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "The required version of Azure PowerShell to install."
        }
      },
      "required": [
        "version"
      ],
      "description": "Installation of Azure PowerShell type properties."
    },
    "AzureBatchLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureBatch"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureBatchLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Batch linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure Batch linked service."
    },
    "AzureBatchLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accessKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "accountName": {
          "type": "object",
          "properties": {},
          "description": "The Azure Batch account name. Type: string (or Expression with resultType string)."
        },
        "batchUri": {
          "type": "object",
          "properties": {},
          "description": "The Azure Batch URI. Type: string (or Expression with resultType string)."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "poolName": {
          "type": "object",
          "properties": {},
          "description": "The Azure Batch pool name. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "accountName",
        "batchUri",
        "linkedServiceName",
        "poolName"
      ],
      "description": "Azure Batch linked service properties."
    },
    "AzureBlobDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureBlob"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureBlobDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Blob dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Azure Blob storage."
    },
    "AzureBlobDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "compression": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetCompression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression method used on a dataset."
        },
        "fileName": {
          "type": "object",
          "properties": {},
          "description": "The name of the Azure Blob. Type: string (or Expression with resultType string)."
        },
        "folderPath": {
          "type": "object",
          "properties": {},
          "description": "The path of the Azure Blob storage. Type: string (or Expression with resultType string)."
        },
        "format": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetStorageFormat"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The format definition of a storage."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "properties": {},
          "description": "The end of Azure Blob's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "properties": {},
          "description": "The start of Azure Blob's modified datetime. Type: string (or Expression with resultType string)."
        },
        "tableRootLocation": {
          "type": "object",
          "properties": {},
          "description": "The root of blob path. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Azure Blob dataset properties."
    },
    "AzureBlobFSDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureBlobFSFile"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureBlobFSDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Lake Storage Gen2 dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Azure Data Lake Storage Gen2 storage."
    },
    "AzureBlobFSDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "compression": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetCompression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression method used on a dataset."
        },
        "fileName": {
          "type": "object",
          "properties": {},
          "description": "The name of the Azure Data Lake Storage Gen2. Type: string (or Expression with resultType string)."
        },
        "folderPath": {
          "type": "object",
          "properties": {},
          "description": "The path of the Azure Data Lake Storage Gen2 storage. Type: string (or Expression with resultType string)."
        },
        "format": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetStorageFormat"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The format definition of a storage."
        }
      },
      "description": "Azure Data Lake Storage Gen2 dataset properties."
    },
    "AzureBlobFSLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureBlobFS"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureBlobFSLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Lake Storage Gen2 linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure Data Lake Storage Gen2 linked service."
    },
    "AzureBlobFSLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accountKey": {
          "type": "object",
          "properties": {},
          "description": "Account key for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string)."
        },
        "azureCloudType": {
          "type": "object",
          "properties": {},
          "description": "Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string)."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalCredential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "servicePrincipalCredentialType": {
          "type": "object",
          "properties": {},
          "description": "The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The ID of the application used to authenticate against the Azure Data Lake Storage Gen2 account. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "url": {
          "type": "object",
          "properties": {},
          "description": "Endpoint for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ],
      "description": "Azure Data Lake Storage Gen2 linked service properties."
    },
    "AzureBlobFSLocation": {
      "type": "object",
      "properties": {
        "fileSystem": {
          "type": "object",
          "properties": {},
          "description": "Specify the fileSystem of azure blobFS. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureBlobFSLocation"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The location of azure blobFS dataset."
    },
    "AzureBlobFSReadSettings": {
      "type": "object",
      "properties": {
        "deleteFilesAfterCompletion": {
          "type": "object",
          "properties": {},
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "enablePartitionDiscovery": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether to enable partition discovery."
        },
        "fileListPath": {
          "type": "object",
          "properties": {},
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "properties": {},
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "properties": {},
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "partitionRootPath": {
          "type": "object",
          "properties": {},
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureBlobFSReadSettings"
          ]
        },
        "wildcardFileName": {
          "type": "object",
          "properties": {},
          "description": "Azure blobFS wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "properties": {},
          "description": "Azure blobFS wildcardFolderPath. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "Azure blobFS read settings."
    },
    "AzureBlobFSSink": {
      "type": "object",
      "properties": {
        "copyBehavior": {
          "type": "object",
          "properties": {},
          "description": "The type of copy behavior for copy sink."
        },
        "metadata": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetadataItem"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specify the custom metadata to be added to sink data. Type: array of objects (or Expression with resultType array of objects)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureBlobFSSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Data Lake Storage Gen2 sink."
    },
    "AzureBlobFSSource": {
      "type": "object",
      "properties": {
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "skipHeaderLineCount": {
          "type": "object",
          "properties": {},
          "description": "Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer)."
        },
        "treatEmptyAsNull": {
          "type": "object",
          "properties": {},
          "description": "Treat empty as null. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureBlobFSSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure BlobFS source."
    },
    "AzureBlobFSWriteSettings": {
      "type": "object",
      "properties": {
        "blockSizeInMB": {
          "type": "object",
          "properties": {},
          "description": "Indicates the block size(MB) when writing data to blob. Type: integer (or Expression with resultType integer)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureBlobFSWriteSettings"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Azure blobFS write settings."
    },
    "AzureBlobStorageLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureBlobStorage"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureBlobStorageLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Blob Storage linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The azure blob storage linked service."
    },
    "AzureBlobStorageLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accountKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        },
        "accountKind": {
          "type": "string",
          "description": "Specify the kind of your storage account. Allowed values are: Storage (general purpose v1), StorageV2 (general purpose v2), BlobStorage, or BlockBlobStorage. Type: string (or Expression with resultType string)."
        },
        "azureCloudType": {
          "type": "object",
          "properties": {},
          "description": "Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string)."
        },
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. It is mutually exclusive with sasUri, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "encryptedCredential": {
          "type": "string",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "sasToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        },
        "sasUri": {
          "type": "object",
          "properties": {},
          "description": "SAS URI of the Azure Blob Storage resource. It is mutually exclusive with connectionString, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "serviceEndpoint": {
          "type": "string",
          "description": "Blob service endpoint of the Azure Blob Storage resource. It is mutually exclusive with connectionString, sasUri property."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Azure Blob Storage linked service properties."
    },
    "AzureBlobStorageLocation": {
      "type": "object",
      "properties": {
        "container": {
          "type": "object",
          "properties": {},
          "description": "Specify the container of azure blob. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureBlobStorageLocation"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The location of azure blob dataset."
    },
    "AzureBlobStorageReadSettings": {
      "type": "object",
      "properties": {
        "deleteFilesAfterCompletion": {
          "type": "object",
          "properties": {},
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "enablePartitionDiscovery": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether to enable partition discovery."
        },
        "fileListPath": {
          "type": "object",
          "properties": {},
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "properties": {},
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "properties": {},
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "partitionRootPath": {
          "type": "object",
          "properties": {},
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "prefix": {
          "type": "object",
          "properties": {},
          "description": "The prefix filter for the Azure Blob name. Type: string (or Expression with resultType string)."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureBlobStorageReadSettings"
          ]
        },
        "wildcardFileName": {
          "type": "object",
          "properties": {},
          "description": "Azure blob wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "properties": {},
          "description": "Azure blob wildcardFolderPath. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "Azure blob read settings."
    },
    "AzureBlobStorageWriteSettings": {
      "type": "object",
      "properties": {
        "blockSizeInMB": {
          "type": "object",
          "properties": {},
          "description": "Indicates the block size(MB) when writing data to blob. Type: integer (or Expression with resultType integer)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureBlobStorageWriteSettings"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Azure blob write settings."
    },
    "AzureDatabricksDeltaLakeDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureDatabricksDeltaLakeDataset"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDatabricksDeltaLakeDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Databricks Delta Lake Dataset Properties"
        }
      },
      "required": [
        "type"
      ],
      "description": "Azure Databricks Delta Lake dataset."
    },
    "AzureDatabricksDeltaLakeDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "database": {
          "type": "object",
          "properties": {},
          "description": "The database name of delta table. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The name of delta table. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Azure Databricks Delta Lake Dataset Properties"
    },
    "AzureDatabricksDeltaLakeExportCommand": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "dateFormat": {
          "type": "object",
          "properties": {},
          "description": "Specify the date format for the csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string)."
        },
        "timestampFormat": {
          "type": "object",
          "properties": {},
          "description": "Specify the timestamp format for the csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Azure Databricks Delta Lake export command settings."
    },
    "AzureDatabricksDeltaLakeImportCommand": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "dateFormat": {
          "type": "object",
          "properties": {},
          "description": "Specify the date format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string)."
        },
        "timestampFormat": {
          "type": "object",
          "properties": {},
          "description": "Specify the timestamp format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Azure Databricks Delta Lake import command settings."
    },
    "AzureDatabricksDeltaLakeLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureDatabricksDeltaLake"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDatabricksDetltaLakeLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Databricks Delta Lake linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure Databricks Delta Lake linked service."
    },
    "AzureDatabricksDeltaLakeSink": {
      "type": "object",
      "properties": {
        "importSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDatabricksDeltaLakeImportCommand"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Databricks Delta Lake import command settings."
        },
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureDatabricksDeltaLakeSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Databricks Delta Lake sink."
    },
    "AzureDatabricksDeltaLakeSource": {
      "type": "object",
      "properties": {
        "exportSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDatabricksDeltaLakeExportCommand"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Databricks Delta Lake export command settings."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "Azure Databricks Delta Lake Sql query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureDatabricksDeltaLakeSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Databricks Delta Lake source."
    },
    "AzureDatabricksDetltaLakeLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accessToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "clusterId": {
          "type": "object",
          "properties": {},
          "description": "The id of an existing interactive cluster that will be used for all runs of this job. Type: string (or Expression with resultType string)."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "domain": {
          "type": "object",
          "properties": {},
          "description": "<REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "workspaceResourceId": {
          "type": "object",
          "properties": {},
          "description": "Workspace resource id for databricks REST API. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "domain"
      ],
      "description": "Azure Databricks Delta Lake linked service properties."
    },
    "AzureDatabricksLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureDatabricks"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDatabricksLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Databricks linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure Databricks linked service."
    },
    "AzureDatabricksLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accessToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "authentication": {
          "type": "object",
          "properties": {},
          "description": "Required to specify MSI, if using Workspace resource id for databricks REST API. Type: string (or Expression with resultType string)."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "domain": {
          "type": "object",
          "properties": {},
          "description": "<REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "existingClusterId": {
          "type": "object",
          "properties": {},
          "description": "The id of an existing interactive cluster that will be used for all runs of this activity. Type: string (or Expression with resultType string)."
        },
        "instancePoolId": {
          "type": "object",
          "properties": {},
          "description": "The id of an existing instance pool that will be used for all runs of this activity. Type: string (or Expression with resultType string)."
        },
        "newClusterCustomTags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Additional tags for cluster resources. This property is ignored in instance pool configurations."
        },
        "newClusterDriverNodeType": {
          "type": "object",
          "properties": {},
          "description": "The driver node type for the new job cluster. This property is ignored in instance pool configurations. Type: string (or Expression with resultType string)."
        },
        "newClusterEnableElasticDisk": {
          "type": "object",
          "properties": {},
          "description": "Enable the elastic disk on the new cluster. This property is now ignored, and takes the default elastic disk behavior in Databricks (elastic disks are always enabled). Type: boolean (or Expression with resultType boolean)."
        },
        "newClusterInitScripts": {
          "type": "object",
          "properties": {},
          "description": "User-defined initialization scripts for the new cluster. Type: array of strings (or Expression with resultType array of strings)."
        },
        "newClusterLogDestination": {
          "type": "object",
          "properties": {},
          "description": "Specify a location to deliver Spark driver, worker, and event logs. Type: string (or Expression with resultType string)."
        },
        "newClusterNodeType": {
          "type": "object",
          "properties": {},
          "description": "The node type of the new job cluster. This property is required if newClusterVersion is specified and instancePoolId is not specified. If instancePoolId is specified, this property is ignored. Type: string (or Expression with resultType string)."
        },
        "newClusterNumOfWorker": {
          "type": "object",
          "properties": {},
          "description": "If not using an existing interactive cluster, this specifies the number of worker nodes to use for the new job cluster or instance pool. For new job clusters, this a string-formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 (min) to 10 (max). For instance pools, this is a string-formatted Int32, and can only specify a fixed number of worker nodes, such as '2'. Required if newClusterVersion is specified. Type: string (or Expression with resultType string)."
        },
        "newClusterSparkConf": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A set of optional, user-specified Spark configuration key-value pairs."
        },
        "newClusterSparkEnvVars": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A set of optional, user-specified Spark environment variables key-value pairs."
        },
        "newClusterVersion": {
          "type": "object",
          "properties": {},
          "description": "If not using an existing interactive cluster, this specifies the Spark version of a new job cluster or instance pool nodes created for each run of this activity. Required if instancePoolId is specified. Type: string (or Expression with resultType string)."
        },
        "policyId": {
          "type": "object",
          "properties": {},
          "description": "The policy id for limiting the ability to configure clusters based on a user defined set of rules. Type: string (or Expression with resultType string)."
        },
        "workspaceResourceId": {
          "type": "object",
          "properties": {},
          "description": "Workspace resource id for databricks REST API. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "domain"
      ],
      "description": "Azure Databricks linked service properties."
    },
    "AzureDataExplorerCommandActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureDataExplorerCommand"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDataExplorerCommandActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Explorer command activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure Data Explorer command activity."
    },
    "AzureDataExplorerCommandActivityTypeProperties": {
      "type": "object",
      "properties": {
        "command": {
          "type": "object",
          "properties": {},
          "description": "A control command, according to the Azure Data Explorer command syntax. Type: string (or Expression with resultType string)."
        },
        "commandTimeout": {
          "type": "object",
          "properties": {},
          "description": "Control command timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))..)"
        }
      },
      "required": [
        "command"
      ],
      "description": "Azure Data Explorer command activity properties."
    },
    "AzureDataExplorerDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Azure Data Explorer database. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Azure Data Explorer (Kusto) dataset properties."
    },
    "AzureDataExplorerLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureDataExplorer"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDataExplorerLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Explorer (Kusto) linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure Data Explorer (Kusto) linked service."
    },
    "AzureDataExplorerLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "database": {
          "type": "object",
          "properties": {},
          "description": "Database name for connection. Type: string (or Expression with resultType string)."
        },
        "endpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of Azure Data Explorer (the engine's endpoint). URL will be in the format https://<clusterName>.<regionName>.kusto.windows.net. Type: string (or Expression with resultType string)"
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The ID of the service principal used to authenticate against Azure Data Explorer. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "database",
        "endpoint"
      ],
      "description": "Azure Data Explorer (Kusto) linked service properties."
    },
    "AzureDataExplorerSink": {
      "type": "object",
      "properties": {
        "flushImmediately": {
          "type": "object",
          "properties": {},
          "description": "If set to true, any aggregation will be skipped. Default is false. Type: boolean."
        },
        "ingestionMappingAsJson": {
          "type": "object",
          "properties": {},
          "description": "An explicit column mapping description provided in a json format. Type: string."
        },
        "ingestionMappingName": {
          "type": "object",
          "properties": {},
          "description": "A name of a pre-created csv mapping that was defined on the target Kusto table. Type: string."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureDataExplorerSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Data Explorer sink."
    },
    "AzureDataExplorerSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "noTruncation": {
          "type": "object",
          "properties": {},
          "description": "The name of the Boolean option that controls whether truncation is applied to result-sets that go beyond a certain row-count limit."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Should be a Kusto Query Language (KQL) query. Type: string (or Expression with resultType string)."
        },
        "queryTimeout": {
          "type": "object",
          "properties": {},
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9])).."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureDataExplorerSource"
          ]
        }
      },
      "required": [
        "query",
        "type"
      ],
      "description": "A copy activity Azure Data Explorer (Kusto) source."
    },
    "AzureDataExplorerTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureDataExplorerTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDataExplorerDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Explorer (Kusto) dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The Azure Data Explorer (Kusto) dataset."
    },
    "AzureDataLakeAnalyticsLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureDataLakeAnalytics"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDataLakeAnalyticsLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Lake Analytics linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure Data Lake Analytics linked service."
    },
    "AzureDataLakeAnalyticsLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "object",
          "properties": {},
          "description": "The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string)."
        },
        "dataLakeAnalyticsUri": {
          "type": "object",
          "properties": {},
          "description": "Azure Data Lake Analytics URI Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "resourceGroupName": {
          "type": "object",
          "properties": {},
          "description": "Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "subscriptionId": {
          "type": "object",
          "properties": {},
          "description": "Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "accountName",
        "tenant"
      ],
      "description": "Azure Data Lake Analytics linked service properties."
    },
    "AzureDataLakeStoreDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureDataLakeStoreFile"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDataLakeStoreDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Lake Store dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "Azure Data Lake Store dataset."
    },
    "AzureDataLakeStoreDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "compression": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetCompression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression method used on a dataset."
        },
        "fileName": {
          "type": "object",
          "properties": {},
          "description": "The name of the file in the Azure Data Lake Store. Type: string (or Expression with resultType string)."
        },
        "folderPath": {
          "type": "object",
          "properties": {},
          "description": "Path to the folder in the Azure Data Lake Store. Type: string (or Expression with resultType string)."
        },
        "format": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetStorageFormat"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The format definition of a storage."
        }
      },
      "description": "Azure Data Lake Store dataset properties."
    },
    "AzureDataLakeStoreLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureDataLakeStore"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDataLakeStoreLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Lake Store linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure Data Lake Store linked service."
    },
    "AzureDataLakeStoreLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "object",
          "properties": {},
          "description": "Data Lake Store account name. Type: string (or Expression with resultType string)."
        },
        "azureCloudType": {
          "type": "object",
          "properties": {},
          "description": "Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string)."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "dataLakeStoreUri": {
          "type": "object",
          "properties": {},
          "description": "Data Lake Store service URI. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "resourceGroupName": {
          "type": "object",
          "properties": {},
          "description": "Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "subscriptionId": {
          "type": "object",
          "properties": {},
          "description": "Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "dataLakeStoreUri"
      ],
      "description": "Azure Data Lake Store linked service properties."
    },
    "AzureDataLakeStoreLocation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureDataLakeStoreLocation"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The location of azure data lake store dataset."
    },
    "AzureDataLakeStoreReadSettings": {
      "type": "object",
      "properties": {
        "deleteFilesAfterCompletion": {
          "type": "object",
          "properties": {},
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "enablePartitionDiscovery": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether to enable partition discovery."
        },
        "fileListPath": {
          "type": "object",
          "properties": {},
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "listAfter": {
          "type": "object",
          "properties": {},
          "description": "Lists files after the value (exclusive) based on file/folder names’ lexicographical order. Applies under the folderPath in data set, and filter files/sub-folders under the folderPath. Type: string (or Expression with resultType string)."
        },
        "listBefore": {
          "type": "object",
          "properties": {},
          "description": "Lists files before the value (inclusive) based on file/folder names’ lexicographical order. Applies under the folderPath in data set, and filter files/sub-folders under the folderPath. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "properties": {},
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "properties": {},
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "partitionRootPath": {
          "type": "object",
          "properties": {},
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureDataLakeStoreReadSettings"
          ]
        },
        "wildcardFileName": {
          "type": "object",
          "properties": {},
          "description": "ADLS wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "properties": {},
          "description": "ADLS wildcardFolderPath. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "Azure data lake store read settings."
    },
    "AzureDataLakeStoreSink": {
      "type": "object",
      "properties": {
        "copyBehavior": {
          "type": "object",
          "properties": {},
          "description": "The type of copy behavior for copy sink."
        },
        "enableAdlsSingleFileParallel": {
          "type": "object",
          "properties": {},
          "description": "Single File Parallel."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureDataLakeStoreSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Data Lake Store sink."
    },
    "AzureDataLakeStoreSource": {
      "type": "object",
      "properties": {
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureDataLakeStoreSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Data Lake source."
    },
    "AzureDataLakeStoreWriteSettings": {
      "type": "object",
      "properties": {
        "expiryDateTime": {
          "type": "object",
          "properties": {},
          "description": "Specifies the expiry time of the written files. The time is applied to the UTC time zone in the format of \"2018-12-01T05:00:00Z\". Default value is NULL. Type: integer (or Expression with resultType integer)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureDataLakeStoreWriteSettings"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Azure data lake store write settings."
    },
    "AzureFileStorageLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureFileStorage"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureFileStorageLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure File Storage linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure File Storage linked service."
    },
    "AzureFileStorageLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accountKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        },
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "fileShare": {
          "type": "object",
          "properties": {},
          "description": "The azure file share name. It is required when auth with accountKey/sasToken. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "Host name of the server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "sasToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        },
        "sasUri": {
          "type": "object",
          "properties": {},
          "description": "SAS URI of the Azure File resource. It is mutually exclusive with connectionString property. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "snapshot": {
          "type": "object",
          "properties": {},
          "description": "The azure file share snapshot version. Type: string (or Expression with resultType string)."
        },
        "userId": {
          "type": "object",
          "properties": {},
          "description": "User ID to logon the server. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Azure File Storage linked service properties."
    },
    "AzureFileStorageLocation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureFileStorageLocation"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The location of file server dataset."
    },
    "AzureFileStorageReadSettings": {
      "type": "object",
      "properties": {
        "deleteFilesAfterCompletion": {
          "type": "object",
          "properties": {},
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "enablePartitionDiscovery": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether to enable partition discovery."
        },
        "fileListPath": {
          "type": "object",
          "properties": {},
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "properties": {},
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "properties": {},
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "partitionRootPath": {
          "type": "object",
          "properties": {},
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "prefix": {
          "type": "object",
          "properties": {},
          "description": "The prefix filter for the Azure File name starting from root path. Type: string (or Expression with resultType string)."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureFileStorageReadSettings"
          ]
        },
        "wildcardFileName": {
          "type": "object",
          "properties": {},
          "description": "Azure File Storage wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "properties": {},
          "description": "Azure File Storage wildcardFolderPath. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "Azure File Storage read settings."
    },
    "AzureFileStorageWriteSettings": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureFileStorageWriteSettings"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Azure File Storage write settings."
    },
    "AzureFunctionActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureFunctionActivity"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureFunctionActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Function activity type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure Function activity."
    },
    "AzureFunctionActivityTypeProperties": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "properties": {},
          "description": "Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string)."
        },
        "functionName": {
          "type": "object",
          "properties": {},
          "description": "Name of the Function that the Azure Function Activity will call. Type: string (or Expression with resultType string)"
        },
        "headers": {
          "type": "object",
          "properties": {},
          "description": "Represents the headers that will be sent to the request. For example, to set the language and type on a request: \"headers\" : { \"Accept-Language\": \"en-us\", \"Content-Type\": \"application/json\" }. Type: string (or Expression with resultType string)."
        },
        "method": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "GET",
                "POST",
                "PUT",
                "DELETE",
                "OPTIONS",
                "HEAD",
                "TRACE"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Rest API method for target endpoint."
        }
      },
      "required": [
        "functionName",
        "method"
      ],
      "description": "Azure Function activity type properties."
    },
    "AzureFunctionLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureFunction"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureFunctionLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Function linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure Function linked service."
    },
    "AzureFunctionLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authentication": {
          "type": "object",
          "properties": {},
          "description": "Type of authentication (Required to specify MSI) used to connect to AzureFunction. Type: string (or Expression with resultType string)."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "functionAppUrl": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Azure Function App. URL will be in the format https://<accountName>.azurewebsites.net."
        },
        "functionKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "resourceId": {
          "type": "object",
          "properties": {},
          "description": "Allowed token audiences for azure function."
        }
      },
      "required": [
        "functionAppUrl"
      ],
      "description": "Azure Function linked service properties."
    },
    "AzureKeyVaultLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureKeyVault"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure Key Vault linked service."
    },
    "AzureKeyVaultLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "baseUrl": {
          "type": "object",
          "properties": {},
          "description": "The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with resultType string)."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        }
      },
      "required": [
        "baseUrl"
      ],
      "description": "Azure Key Vault linked service properties."
    },
    "AzureKeyVaultSecretReference": {
      "type": "object",
      "properties": {
        "secretName": {
          "type": "object",
          "properties": {},
          "description": "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string)."
        },
        "secretVersion": {
          "type": "object",
          "properties": {},
          "description": "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string)."
        },
        "store": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureKeyVaultSecret"
          ]
        }
      },
      "required": [
        "secretName",
        "store",
        "type"
      ],
      "description": "Azure Key Vault secret reference."
    },
    "AzureMariaDBLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureMariaDB"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureMariaDBLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Database for MariaDB linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure Database for MariaDB linked service."
    },
    "AzureMariaDBLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "pwd": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        }
      },
      "description": "Azure Database for MariaDB linked service properties."
    },
    "AzureMariaDBSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureMariaDBSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure MariaDB source."
    },
    "AzureMariaDBTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureMariaDBTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Azure Database for MariaDB dataset."
    },
    "AzureMLBatchExecutionActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureMLBatchExecution"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureMLBatchExecutionActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure ML Batch Execution activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure ML Batch Execution activity."
    },
    "AzureMLBatchExecutionActivityTypeProperties": {
      "type": "object",
      "properties": {
        "globalParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters property of the Azure ML batch execution request."
        },
        "webServiceInputs": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/AzureMLWebServiceFile"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the Azure ML batch execution request."
        },
        "webServiceOutputs": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/AzureMLWebServiceFile"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the Azure ML batch execution request."
        }
      },
      "description": "Azure ML Batch Execution activity properties."
    },
    "AzureMLExecutePipelineActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureMLExecutePipeline"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureMLExecutePipelineActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure ML Execute Pipeline activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure ML Execute Pipeline activity."
    },
    "AzureMLExecutePipelineActivityTypeProperties": {
      "type": "object",
      "properties": {
        "continueOnStepFailure": {
          "type": "object",
          "properties": {},
          "description": "Whether to continue execution of other steps in the PipelineRun if a step fails. This information will be passed in the continueOnStepFailure property of the published pipeline execution request. Type: boolean (or Expression with resultType boolean)."
        },
        "dataPathAssignments": {
          "type": "object",
          "properties": {},
          "description": "Dictionary used for changing data path assignments without retraining. Values will be passed in the dataPathAssignments property of the published pipeline execution request. Type: object with key value pairs (or Expression with resultType object)."
        },
        "experimentName": {
          "type": "object",
          "properties": {},
          "description": "Run history experiment name of the pipeline run. This information will be passed in the ExperimentName property of the published pipeline execution request. Type: string (or Expression with resultType string)."
        },
        "mlParentRunId": {
          "type": "object",
          "properties": {},
          "description": "The parent Azure ML Service pipeline run id. This information will be passed in the ParentRunId property of the published pipeline execution request. Type: string (or Expression with resultType string)."
        },
        "mlPipelineEndpointId": {
          "type": "object",
          "properties": {},
          "description": "ID of the published Azure ML pipeline endpoint. Type: string (or Expression with resultType string)."
        },
        "mlPipelineId": {
          "type": "object",
          "properties": {},
          "description": "ID of the published Azure ML pipeline. Type: string (or Expression with resultType string)."
        },
        "mlPipelineParameters": {
          "type": "object",
          "properties": {},
          "description": "Key,Value pairs to be passed to the published Azure ML pipeline endpoint. Keys must match the names of pipeline parameters defined in the published pipeline. Values will be passed in the ParameterAssignments property of the published pipeline execution request. Type: object with key value pairs (or Expression with resultType object)."
        },
        "version": {
          "type": "object",
          "properties": {},
          "description": "Version of the published Azure ML pipeline endpoint. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Azure ML Execute Pipeline activity properties."
    },
    "AzureMLLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureML"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureMLLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure ML Studio Web Service linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure ML Studio Web Service linked service."
    },
    "AzureMLLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "apiKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "authentication": {
          "type": "object",
          "properties": {},
          "description": "Type of authentication (Required to specify MSI) used to connect to AzureML. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "mlEndpoint": {
          "type": "object",
          "properties": {},
          "description": "The Batch Execution REST URL for an Azure ML Studio Web Service endpoint. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The ID of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML Studio web service. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "updateResourceEndpoint": {
          "type": "object",
          "properties": {},
          "description": "The Update Resource REST URL for an Azure ML Studio Web Service endpoint. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "apiKey",
        "mlEndpoint"
      ],
      "description": "Azure ML Studio Web Service linked service properties."
    },
    "AzureMLServiceLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureMLService"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureMLServiceLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure ML Service linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure ML Service linked service."
    },
    "AzureMLServiceLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "mlWorkspaceName": {
          "type": "object",
          "properties": {},
          "description": "Azure ML Service workspace name. Type: string (or Expression with resultType string)."
        },
        "resourceGroupName": {
          "type": "object",
          "properties": {},
          "description": "Azure ML Service workspace resource group name. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The ID of the service principal used to authenticate against the endpoint of a published Azure ML Service pipeline. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "subscriptionId": {
          "type": "object",
          "properties": {},
          "description": "Azure ML Service workspace subscription ID. Type: string (or Expression with resultType string)."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "mlWorkspaceName",
        "resourceGroupName",
        "subscriptionId"
      ],
      "description": "Azure ML Service linked service properties."
    },
    "AzureMLUpdateResourceActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureMLUpdateResource"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureMLUpdateResourceActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure ML Update Resource activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure ML Update Resource management activity."
    },
    "AzureMLUpdateResourceActivityTypeProperties": {
      "type": "object",
      "properties": {
        "trainedModelFilePath": {
          "type": "object",
          "properties": {},
          "description": "The relative file path in trainedModelLinkedService to represent the .ilearner file that will be uploaded by the update operation.  Type: string (or Expression with resultType string)."
        },
        "trainedModelLinkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "trainedModelName": {
          "type": "object",
          "properties": {},
          "description": "Name of the Trained Model module in the Web Service experiment to be updated. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "trainedModelFilePath",
        "trainedModelLinkedServiceName",
        "trainedModelName"
      ],
      "description": "Azure ML Update Resource activity properties."
    },
    "AzureMLWebServiceFile": {
      "type": "object",
      "properties": {
        "filePath": {
          "type": "object",
          "properties": {},
          "description": "The relative file path, including container name, in the Azure Blob Storage specified by the LinkedService. Type: string (or Expression with resultType string)."
        },
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        }
      },
      "required": [
        "filePath",
        "linkedServiceName"
      ],
      "description": "Azure ML WebService Input/Output file"
    },
    "AzureMySqlLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureMySql"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureMySqlLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure MySQL database linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure MySQL database linked service."
    },
    "AzureMySqlLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "Azure MySQL database linked service properties."
    },
    "AzureMySqlSink": {
      "type": "object",
      "properties": {
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "A query to execute before starting the copy. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureMySqlSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure MySql sink."
    },
    "AzureMySqlSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureMySqlSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure MySQL source."
    },
    "AzureMySqlTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureMySqlTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureMySqlTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure MySQL database dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The Azure MySQL database dataset."
    },
    "AzureMySqlTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "table": {
          "type": "object",
          "properties": {},
          "description": "The name of Azure MySQL database table. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The Azure MySQL database table name. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Azure MySQL database dataset properties."
    },
    "AzurePostgreSqlLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzurePostgreSql"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzurePostgreSqlLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure PostgreSQL linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure PostgreSQL linked service."
    },
    "AzurePostgreSqlLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        }
      },
      "description": "Azure PostgreSQL linked service properties."
    },
    "AzurePostgreSqlSink": {
      "type": "object",
      "properties": {
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "A query to execute before starting the copy. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzurePostgreSqlSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure PostgreSQL sink."
    },
    "AzurePostgreSqlSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzurePostgreSqlSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure PostgreSQL source."
    },
    "AzurePostgreSqlTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzurePostgreSqlTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzurePostgreSqlTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure PostgreSQL dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "Azure PostgreSQL dataset."
    },
    "AzurePostgreSqlTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the Azure PostgreSQL database. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Azure PostgreSQL database. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Azure PostgreSQL database which includes both schema and table. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Azure PostgreSQL dataset properties."
    },
    "AzureQueueSink": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureQueueSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Queue sink."
    },
    "AzureSearchIndexDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureSearchIndex"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureSearchIndexDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The Azure Search Index."
    },
    "AzureSearchIndexDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "indexName": {
          "type": "object",
          "properties": {},
          "description": "The name of the Azure Search Index. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "indexName"
      ],
      "description": "Properties specific to this dataset type."
    },
    "AzureSearchIndexSink": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureSearchIndexSink"
          ]
        },
        "writeBehavior": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Merge",
                "Upload"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specify the write behavior when upserting documents into Azure Search Index."
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Search Index sink."
    },
    "AzureSearchLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureSearch"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureSearchLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Windows Azure Search Service linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Windows Azure Search Service."
    },
    "AzureSearchLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "key": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "url": {
          "type": "object",
          "properties": {},
          "description": "URL for Azure Search service. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ],
      "description": "Windows Azure Search Service linked service properties."
    },
    "AzureSqlDatabaseLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureSqlDatabase"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureSqlDatabaseLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure SQL Database linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Microsoft Azure SQL Database linked service."
    },
    "AzureSqlDatabaseLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "alwaysEncryptedSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlAlwaysEncryptedProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sql always encrypted properties."
        },
        "azureCloudType": {
          "type": "object",
          "properties": {},
          "description": "Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string)."
        },
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The ID of the service principal used to authenticate against Azure SQL Database. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "Azure SQL Database linked service properties."
    },
    "AzureSqlDWLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureSqlDW"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureSqlDWLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure SQL Data Warehouse linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure SQL Data Warehouse linked service."
    },
    "AzureSqlDWLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "azureCloudType": {
          "type": "object",
          "properties": {},
          "description": "Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string)."
        },
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "Azure SQL Data Warehouse linked service properties."
    },
    "AzureSqlDWTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureSqlDWTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureSqlDWTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure SQL Data Warehouse dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Azure SQL Data Warehouse dataset."
    },
    "AzureSqlDWTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "Azure SQL Data Warehouse dataset properties."
    },
    "AzureSqlMILinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureSqlMI"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureSqlMILinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure SQL Managed Instance linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Azure SQL Managed Instance linked service."
    },
    "AzureSqlMILinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "alwaysEncryptedSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlAlwaysEncryptedProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sql always encrypted properties."
        },
        "azureCloudType": {
          "type": "object",
          "properties": {},
          "description": "Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string)."
        },
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The ID of the service principal used to authenticate against Azure SQL Managed Instance. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "Azure SQL Managed Instance linked service properties."
    },
    "AzureSqlMITableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureSqlMITable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureSqlMITableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure SQL Managed Instance dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Azure SQL Managed Instance dataset."
    },
    "AzureSqlMITableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the Azure SQL Managed Instance. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Azure SQL Managed Instance dataset. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "Azure SQL Managed Instance dataset properties."
    },
    "AzureSqlSink": {
      "type": "object",
      "properties": {
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "sqlWriterStoredProcedureName": {
          "type": "object",
          "properties": {},
          "description": "SQL writer stored procedure name. Type: string (or Expression with resultType string)."
        },
        "sqlWriterTableType": {
          "type": "object",
          "properties": {},
          "description": "SQL writer table type. Type: string (or Expression with resultType string)."
        },
        "sqlWriterUseTableLock": {
          "type": "object",
          "properties": {},
          "description": "Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean)."
        },
        "storedProcedureParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/StoredProcedureParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SQL stored procedure parameters."
        },
        "storedProcedureTableTypeParameterName": {
          "type": "object",
          "properties": {},
          "description": "The stored procedure parameter name of the table type. Type: string (or Expression with resultType string)."
        },
        "tableOption": {
          "type": "object",
          "properties": {},
          "description": "The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureSqlSink"
          ]
        },
        "upsertSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlUpsertSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sql upsert option settings"
        },
        "writeBehavior": {
          "type": "object",
          "properties": {},
          "description": "Write behavior when copying data into Azure SQL. Type: SqlWriteBehaviorEnum (or Expression with resultType SqlWriteBehaviorEnum)"
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure SQL sink."
    },
    "AzureSqlSource": {
      "type": "object",
      "properties": {
        "partitionOption": {
          "type": "object",
          "properties": {},
          "description": "The partition mechanism that will be used for Sql read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\"."
        },
        "partitionSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlPartitionSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The settings that will be leveraged for Sql source partitioning."
        },
        "produceAdditionalTypes": {
          "type": "object",
          "properties": {},
          "description": "Which additional types to produce."
        },
        "sqlReaderQuery": {
          "type": "object",
          "properties": {},
          "description": "SQL reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "properties": {},
          "description": "Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/StoredProcedureParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\"."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureSqlSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure SQL source."
    },
    "AzureSqlTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureSqlTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureSqlTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure SQL dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Azure SQL Server database dataset."
    },
    "AzureSqlTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the Azure SQL database. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Azure SQL database. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "Azure SQL dataset properties."
    },
    "AzureStorageLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureStorage"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureStorageLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Storage linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The storage account linked service."
    },
    "AzureStorageLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accountKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        },
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "string",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "sasToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        },
        "sasUri": {
          "type": "object",
          "properties": {},
          "description": "SAS URI of the Azure Storage resource. It is mutually exclusive with connectionString property. Type: string, SecureString or AzureKeyVaultSecretReference."
        }
      },
      "description": "Azure Storage linked service properties."
    },
    "AzureTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Table dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The Azure Table storage dataset."
    },
    "AzureTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Azure Table storage. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "tableName"
      ],
      "description": "Azure Table dataset properties."
    },
    "AzureTableSink": {
      "type": "object",
      "properties": {
        "azureTableDefaultPartitionKeyValue": {
          "type": "object",
          "properties": {},
          "description": "Azure Table default partition key value. Type: string (or Expression with resultType string)."
        },
        "azureTableInsertType": {
          "type": "object",
          "properties": {},
          "description": "Azure Table insert type. Type: string (or Expression with resultType string)."
        },
        "azureTablePartitionKeyName": {
          "type": "object",
          "properties": {},
          "description": "Azure Table partition key name. Type: string (or Expression with resultType string)."
        },
        "azureTableRowKeyName": {
          "type": "object",
          "properties": {},
          "description": "Azure Table row key name. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureTableSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Table sink."
    },
    "AzureTableSource": {
      "type": "object",
      "properties": {
        "azureTableSourceIgnoreTableNotFound": {
          "type": "object",
          "properties": {},
          "description": "Azure Table source ignore table not found. Type: boolean (or Expression with resultType boolean)."
        },
        "azureTableSourceQuery": {
          "type": "object",
          "properties": {},
          "description": "Azure Table source query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureTableSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Table source."
    },
    "AzureTableStorageLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureTableStorage"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureStorageLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Storage linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The azure table storage linked service."
    },
    "BinaryDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Binary"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/BinaryDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Binary dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "Binary dataset."
    },
    "BinaryDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "compression": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetCompression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression method used on a dataset."
        },
        "location": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset location."
        }
      },
      "required": [
        "location"
      ],
      "description": "Binary dataset properties."
    },
    "BinaryReadSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "compressionProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CompressionReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Compression read settings."
        },
        "type": {
          "type": "string",
          "enum": [
            "BinaryReadSettings"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Binary read settings."
    },
    "BinarySink": {
      "type": "object",
      "properties": {
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreWriteSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector write settings."
        },
        "type": {
          "type": "string",
          "enum": [
            "BinarySink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Binary sink."
    },
    "BinarySource": {
      "type": "object",
      "properties": {
        "formatSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/BinaryReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Binary read settings."
        },
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector read setting."
        },
        "type": {
          "type": "string",
          "enum": [
            "BinarySource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Binary source."
    },
    "BlobEventsTrigger": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "BlobEventsTrigger"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlobEventsTriggerTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Blob Events Trigger properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Trigger that runs every time a Blob event occurs."
    },
    "BlobEventsTriggerTypeProperties": {
      "type": "object",
      "properties": {
        "blobPathBeginsWith": {
          "type": "string",
          "description": "The blob path must begin with the pattern provided for trigger to fire. For example, '/records/blobs/december/' will only fire the trigger for blobs in the december folder under the records container. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith."
        },
        "blobPathEndsWith": {
          "type": "string",
          "description": "The blob path must end with the pattern provided for trigger to fire. For example, 'december/boxes.csv' will only fire the trigger for blobs named boxes in a december folder. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith."
        },
        "events": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Microsoft.Storage.BlobCreated",
                  "Microsoft.Storage.BlobDeleted"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Blob event types."
        },
        "ignoreEmptyBlobs": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "If set to true, blobs with zero bytes will be ignored."
        },
        "scope": {
          "type": "string",
          "description": "The ARM resource ID of the Storage Account."
        }
      },
      "required": [
        "events",
        "scope"
      ],
      "description": "Blob Events Trigger properties."
    },
    "BlobSink": {
      "type": "object",
      "properties": {
        "blobWriterAddHeader": {
          "type": "object",
          "properties": {},
          "description": "Blob writer add header. Type: boolean (or Expression with resultType boolean)."
        },
        "blobWriterDateTimeFormat": {
          "type": "object",
          "properties": {},
          "description": "Blob writer date time format. Type: string (or Expression with resultType string)."
        },
        "blobWriterOverwriteFiles": {
          "type": "object",
          "properties": {},
          "description": "Blob writer overwrite files. Type: boolean (or Expression with resultType boolean)."
        },
        "copyBehavior": {
          "type": "object",
          "properties": {},
          "description": "The type of copy behavior for copy sink."
        },
        "metadata": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetadataItem"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specify the custom metadata to be added to sink data. Type: array of objects (or Expression with resultType array of objects)."
        },
        "type": {
          "type": "string",
          "enum": [
            "BlobSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Blob sink."
    },
    "BlobSource": {
      "type": "object",
      "properties": {
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "skipHeaderLineCount": {
          "type": "object",
          "properties": {},
          "description": "Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer)."
        },
        "treatEmptyAsNull": {
          "type": "object",
          "properties": {},
          "description": "Treat empty as null. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "BlobSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Blob source."
    },
    "BlobTrigger": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "BlobTrigger"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlobTriggerTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Blob Trigger properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Trigger that runs every time the selected Blob container changes."
    },
    "BlobTriggerTypeProperties": {
      "type": "object",
      "properties": {
        "folderPath": {
          "type": "string",
          "description": "The path of the container/folder that will trigger the pipeline."
        },
        "linkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "maxConcurrency": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The max number of parallel files to handle when it is triggered."
        }
      },
      "required": [
        "folderPath",
        "linkedService",
        "maxConcurrency"
      ],
      "description": "Blob Trigger properties."
    },
    "CassandraLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Cassandra"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Cassandra linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Cassandra data source."
    },
    "CassandraLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "type": "object",
          "properties": {},
          "description": "AuthenticationType to be used for connection. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "Host name for connection. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The port for the connection. Type: integer (or Expression with resultType integer)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ],
      "description": "Cassandra linked service properties."
    },
    "CassandraSource": {
      "type": "object",
      "properties": {
        "consistencyLevel": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "ALL",
                "EACH_QUORUM",
                "QUORUM",
                "LOCAL_QUORUM",
                "ONE",
                "TWO",
                "THREE",
                "LOCAL_ONE",
                "SERIAL",
                "LOCAL_SERIAL"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application. Cassandra checks the specified number of Cassandra servers for data to satisfy the read request. Must be one of cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is case-insensitive."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Should be a SQL-92 query expression or Cassandra Query Language (CQL) command. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "CassandraSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for a Cassandra database."
    },
    "CassandraTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CassandraTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Cassandra dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Cassandra database dataset."
    },
    "CassandraTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "keyspace": {
          "type": "object",
          "properties": {},
          "description": "The keyspace of the Cassandra database. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Cassandra database. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Cassandra dataset properties."
    },
    "ChainingTrigger": {
      "type": "object",
      "properties": {
        "pipeline": {
          "oneOf": [
            {
              "$ref": "#/definitions/TriggerPipelineReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Pipeline that needs to be triggered with the given parameters."
        },
        "type": {
          "type": "string",
          "enum": [
            "ChainingTrigger"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ChainingTriggerTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Chaining Trigger properties."
        }
      },
      "required": [
        "pipeline",
        "type",
        "typeProperties"
      ],
      "description": "Trigger that allows the referenced pipeline to depend on other pipeline runs based on runDimension Name/Value pairs. Upstream pipelines should declare the same runDimension Name and their runs should have the values for those runDimensions. The referenced pipeline run would be triggered if the values for the runDimension match for all upstream pipeline runs."
    },
    "ChainingTriggerTypeProperties": {
      "type": "object",
      "properties": {
        "dependsOn": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PipelineReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Upstream Pipelines."
        },
        "runDimension": {
          "type": "string",
          "description": "Run Dimension property that needs to be emitted by upstream pipelines."
        }
      },
      "required": [
        "dependsOn",
        "runDimension"
      ],
      "description": "Chaining Trigger properties."
    },
    "CmdkeySetup": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CmdkeySetup"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CmdkeySetupTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Cmdkey command custom setup type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The custom setup of running cmdkey commands."
    },
    "CmdkeySetupTypeProperties": {
      "type": "object",
      "properties": {
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "targetName": {
          "type": "object",
          "properties": {},
          "description": "The server name of data source access."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "The user name of data source access."
        }
      },
      "required": [
        "password",
        "targetName",
        "userName"
      ],
      "description": "Cmdkey command custom setup type properties."
    },
    "CMKIdentityDefinition": {
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "The resource id of the user assigned identity to authenticate to customer's key vault."
        }
      },
      "description": "Managed Identity used for CMK."
    },
    "CommonDataServiceForAppsEntityDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CommonDataServiceForAppsEntity"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CommonDataServiceForAppsEntityDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Common Data Service for Apps entity dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Common Data Service for Apps entity dataset."
    },
    "CommonDataServiceForAppsEntityDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "entityName": {
          "type": "object",
          "properties": {},
          "description": "The logical name of the entity. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Common Data Service for Apps entity dataset properties."
    },
    "CommonDataServiceForAppsLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CommonDataServiceForApps"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CommonDataServiceForAppsLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Common Data Service for Apps linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Common Data Service for Apps linked service."
    },
    "CommonDataServiceForAppsLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "type": "object",
          "properties": {},
          "description": "The authentication type to connect to Common Data Service for Apps server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario. 'AADServicePrincipal' for Server-To-Server authentication in online scenario. Type: string (or Expression with resultType string)."
        },
        "deploymentType": {
          "type": "object",
          "properties": {},
          "description": "The deployment type of the Common Data Service for Apps instance. 'Online' for Common Data Service for Apps Online and 'OnPremisesWithIfd' for Common Data Service for Apps on-premises with Ifd. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "hostName": {
          "type": "object",
          "properties": {},
          "description": "The host name of the on-premises Common Data Service for Apps server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string)."
        },
        "organizationName": {
          "type": "object",
          "properties": {},
          "description": "The organization name of the Common Data Service for Apps instance. The property is required for on-prem and required for online when there are more than one Common Data Service for Apps instances associated with the user. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The port of on-premises Common Data Service for Apps server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "servicePrincipalCredential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "servicePrincipalCredentialType": {
          "type": "object",
          "properties": {},
          "description": "The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string)."
        },
        "serviceUri": {
          "type": "object",
          "properties": {},
          "description": "The URL to the Microsoft Common Data Service for Apps server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "User name to access the Common Data Service for Apps instance. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "authenticationType",
        "deploymentType"
      ],
      "description": "Common Data Service for Apps linked service properties."
    },
    "CommonDataServiceForAppsSink": {
      "type": "object",
      "properties": {
        "alternateKeyName": {
          "type": "object",
          "properties": {},
          "description": "The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string)."
        },
        "ignoreNullValues": {
          "type": "object",
          "properties": {},
          "description": "The flag indicating whether to ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "CommonDataServiceForAppsSink"
          ]
        },
        "writeBehavior": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Upsert"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The write behavior for the operation."
        }
      },
      "required": [
        "type",
        "writeBehavior"
      ],
      "description": "A copy activity Common Data Service for Apps sink."
    },
    "CommonDataServiceForAppsSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "FetchXML is a proprietary query language that is used in Microsoft Common Data Service for Apps (online & on-premises). Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "CommonDataServiceForAppsSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Common Data Service for Apps source."
    },
    "ComponentSetup": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ComponentSetup"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LicensedComponentSetupTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Installation of licensed component setup type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The custom setup of installing 3rd party components."
    },
    "CompressionReadSettings": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ZipDeflateReadSettings"
        },
        {
          "$ref": "#/definitions/TarReadSettings"
        },
        {
          "$ref": "#/definitions/TarGZipReadSettings"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        }
      },
      "description": "Compression read settings."
    },
    "ConcurLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Concur"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ConcurLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Concur Service linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Concur Service linked service."
    },
    "ConcurLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "Application client_id supplied by Concur App Management."
        },
        "connectionProperties": {
          "type": "object",
          "properties": {},
          "description": "Properties used to connect to Concur. It is mutually exclusive with any other properties in the linked service. Type: object."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name that you use to access Concur Service."
        }
      },
      "required": [
        "clientId",
        "username"
      ],
      "description": "Concur Service linked service properties."
    },
    "ConcurObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ConcurObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Concur Service dataset."
    },
    "ConcurSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "ConcurSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Concur Service source."
    },
    "ConnectionStateProperties": {
      "type": "object",
      "properties": {},
      "description": "The connection state of a managed private endpoint"
    },
    "ControlActivity": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ExecutePipelineActivity"
        },
        {
          "$ref": "#/definitions/IfConditionActivity"
        },
        {
          "$ref": "#/definitions/SwitchActivity"
        },
        {
          "$ref": "#/definitions/ForEachActivity"
        },
        {
          "$ref": "#/definitions/WaitActivity"
        },
        {
          "$ref": "#/definitions/FailActivity"
        },
        {
          "$ref": "#/definitions/UntilActivity"
        },
        {
          "$ref": "#/definitions/ValidationActivity"
        },
        {
          "$ref": "#/definitions/FilterActivity"
        },
        {
          "$ref": "#/definitions/SetVariableActivity"
        },
        {
          "$ref": "#/definitions/AppendVariableActivity"
        },
        {
          "$ref": "#/definitions/WebHookActivity"
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Container"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Base class for all control activities like IfCondition, ForEach , Until."
    },
    "CopyActivity": {
      "type": "object",
      "properties": {
        "inputs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatasetReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of inputs for the activity."
        },
        "outputs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatasetReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of outputs for the activity."
        },
        "type": {
          "type": "string",
          "enum": [
            "Copy"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CopyActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Copy activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Copy activity."
    },
    "CopyActivityLogSettings": {
      "type": "object",
      "properties": {
        "enableReliableLogging": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to enable reliable logging. Type: boolean (or Expression with resultType boolean)."
        },
        "logLevel": {
          "type": "object",
          "properties": {},
          "description": "Gets or sets the log level, support: Info, Warning. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Settings for copy activity log."
    },
    "CopyActivityTypeProperties": {
      "type": "object",
      "properties": {
        "dataIntegrationUnits": {
          "type": "object",
          "properties": {},
          "description": "Maximum number of data integration units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "enableSkipIncompatibleRow": {
          "type": "object",
          "properties": {},
          "description": "Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "enableStaging": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "logSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/LogSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Log settings."
        },
        "logStorageSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/LogStorageSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "(Deprecated. Please use LogSettings) Log storage settings."
        },
        "parallelCopies": {
          "type": "object",
          "properties": {},
          "description": "Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "preserve": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Preserve rules."
        },
        "preserveRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Preserve Rules."
        },
        "redirectIncompatibleRowSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/RedirectIncompatibleRowSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Redirect incompatible row settings"
        },
        "sink": {
          "oneOf": [
            {
              "$ref": "#/definitions/CopySink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A copy activity sink."
        },
        "skipErrorFile": {
          "oneOf": [
            {
              "$ref": "#/definitions/SkipErrorFile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Skip error file."
        },
        "source": {
          "oneOf": [
            {
              "$ref": "#/definitions/CopySource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A copy activity source."
        },
        "stagingSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StagingSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Staging settings."
        },
        "translator": {
          "type": "object",
          "properties": {},
          "description": "Copy activity translator. If not specified, tabular translator is used."
        },
        "validateDataConsistency": {
          "type": "object",
          "properties": {},
          "description": "Whether to enable Data Consistency validation. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "sink",
        "source"
      ],
      "description": "Copy activity properties."
    },
    "CopySink": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/DelimitedTextSink"
        },
        {
          "$ref": "#/definitions/JsonSink"
        },
        {
          "$ref": "#/definitions/OrcSink"
        },
        {
          "$ref": "#/definitions/RestSink"
        },
        {
          "$ref": "#/definitions/AzurePostgreSqlSink"
        },
        {
          "$ref": "#/definitions/AzureMySqlSink"
        },
        {
          "$ref": "#/definitions/AzureDatabricksDeltaLakeSink"
        },
        {
          "$ref": "#/definitions/SapCloudForCustomerSink"
        },
        {
          "$ref": "#/definitions/AzureQueueSink"
        },
        {
          "$ref": "#/definitions/AzureTableSink"
        },
        {
          "$ref": "#/definitions/AvroSink"
        },
        {
          "$ref": "#/definitions/ParquetSink"
        },
        {
          "$ref": "#/definitions/BinarySink"
        },
        {
          "$ref": "#/definitions/BlobSink"
        },
        {
          "$ref": "#/definitions/FileSystemSink"
        },
        {
          "$ref": "#/definitions/DocumentDbCollectionSink"
        },
        {
          "$ref": "#/definitions/CosmosDbSqlApiSink"
        },
        {
          "$ref": "#/definitions/SqlSink"
        },
        {
          "$ref": "#/definitions/SqlServerSink"
        },
        {
          "$ref": "#/definitions/AzureSqlSink"
        },
        {
          "$ref": "#/definitions/SqlMISink"
        },
        {
          "$ref": "#/definitions/SqlDWSink"
        },
        {
          "$ref": "#/definitions/SnowflakeSink"
        },
        {
          "$ref": "#/definitions/OracleSink"
        },
        {
          "$ref": "#/definitions/AzureDataLakeStoreSink"
        },
        {
          "$ref": "#/definitions/AzureBlobFSSink"
        },
        {
          "$ref": "#/definitions/AzureSearchIndexSink"
        },
        {
          "$ref": "#/definitions/OdbcSink"
        },
        {
          "$ref": "#/definitions/InformixSink"
        },
        {
          "$ref": "#/definitions/MicrosoftAccessSink"
        },
        {
          "$ref": "#/definitions/DynamicsSink"
        },
        {
          "$ref": "#/definitions/DynamicsCrmSink"
        },
        {
          "$ref": "#/definitions/CommonDataServiceForAppsSink"
        },
        {
          "$ref": "#/definitions/AzureDataExplorerSink"
        },
        {
          "$ref": "#/definitions/SalesforceSink"
        },
        {
          "$ref": "#/definitions/SalesforceServiceCloudSink"
        },
        {
          "$ref": "#/definitions/MongoDbAtlasSink"
        },
        {
          "$ref": "#/definitions/MongoDbV2Sink"
        },
        {
          "$ref": "#/definitions/CosmosDbMongoDbApiSink"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "disableMetricsCollection": {
          "type": "object",
          "properties": {},
          "description": "If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "maxConcurrentConnections": {
          "type": "object",
          "properties": {},
          "description": "The maximum concurrent connection count for the sink data store. Type: integer (or Expression with resultType integer)."
        },
        "sinkRetryCount": {
          "type": "object",
          "properties": {},
          "description": "Sink retry count. Type: integer (or Expression with resultType integer)."
        },
        "sinkRetryWait": {
          "type": "object",
          "properties": {},
          "description": "Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "writeBatchSize": {
          "type": "object",
          "properties": {},
          "description": "Write batch size. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "writeBatchTimeout": {
          "type": "object",
          "properties": {},
          "description": "Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      },
      "description": "A copy activity sink."
    },
    "CopySource": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/AvroSource"
        },
        {
          "$ref": "#/definitions/ExcelSource"
        },
        {
          "$ref": "#/definitions/ParquetSource"
        },
        {
          "$ref": "#/definitions/DelimitedTextSource"
        },
        {
          "$ref": "#/definitions/JsonSource"
        },
        {
          "$ref": "#/definitions/XmlSource"
        },
        {
          "$ref": "#/definitions/OrcSource"
        },
        {
          "$ref": "#/definitions/BinarySource"
        },
        {
          "$ref": "#/definitions/TabularSource"
        },
        {
          "$ref": "#/definitions/BlobSource"
        },
        {
          "$ref": "#/definitions/DocumentDbCollectionSource"
        },
        {
          "$ref": "#/definitions/CosmosDbSqlApiSource"
        },
        {
          "$ref": "#/definitions/DynamicsSource"
        },
        {
          "$ref": "#/definitions/DynamicsCrmSource"
        },
        {
          "$ref": "#/definitions/CommonDataServiceForAppsSource"
        },
        {
          "$ref": "#/definitions/RelationalSource"
        },
        {
          "$ref": "#/definitions/MicrosoftAccessSource"
        },
        {
          "$ref": "#/definitions/ODataSource"
        },
        {
          "$ref": "#/definitions/SalesforceServiceCloudSource"
        },
        {
          "$ref": "#/definitions/RestSource"
        },
        {
          "$ref": "#/definitions/FileSystemSource"
        },
        {
          "$ref": "#/definitions/HdfsSource"
        },
        {
          "$ref": "#/definitions/AzureDataExplorerSource"
        },
        {
          "$ref": "#/definitions/OracleSource"
        },
        {
          "$ref": "#/definitions/AmazonRdsForOracleSource"
        },
        {
          "$ref": "#/definitions/WebSource"
        },
        {
          "$ref": "#/definitions/MongoDbSource"
        },
        {
          "$ref": "#/definitions/MongoDbAtlasSource"
        },
        {
          "$ref": "#/definitions/MongoDbV2Source"
        },
        {
          "$ref": "#/definitions/CosmosDbMongoDbApiSource"
        },
        {
          "$ref": "#/definitions/Office365Source"
        },
        {
          "$ref": "#/definitions/AzureDataLakeStoreSource"
        },
        {
          "$ref": "#/definitions/AzureBlobFSSource"
        },
        {
          "$ref": "#/definitions/HttpSource"
        },
        {
          "$ref": "#/definitions/SnowflakeSource"
        },
        {
          "$ref": "#/definitions/AzureDatabricksDeltaLakeSource"
        },
        {
          "$ref": "#/definitions/SharePointOnlineListSource"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "disableMetricsCollection": {
          "type": "object",
          "properties": {},
          "description": "If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "maxConcurrentConnections": {
          "type": "object",
          "properties": {},
          "description": "The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer)."
        },
        "sourceRetryCount": {
          "type": "object",
          "properties": {},
          "description": "Source retry count. Type: integer (or Expression with resultType integer)."
        },
        "sourceRetryWait": {
          "type": "object",
          "properties": {},
          "description": "Source retry wait. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      },
      "description": "A copy activity source."
    },
    "CosmosDbLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CosmosDb"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CosmosDbLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "CosmosDB linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Microsoft Azure Cosmos Database (CosmosDB) linked service."
    },
    "CosmosDbLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accountEndpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Azure CosmosDB account. Type: string (or Expression with resultType string)"
        },
        "accountKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "azureCloudType": {
          "type": "object",
          "properties": {},
          "description": "Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string)."
        },
        "connectionMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Gateway",
                "Direct"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The connection mode used to access CosmosDB account. Type: string (or Expression with resultType string)."
        },
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "database": {
          "type": "object",
          "properties": {},
          "description": "The name of the database. Type: string (or Expression with resultType string)"
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalCredential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "servicePrincipalCredentialType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "ServicePrincipalKey",
                "ServicePrincipalCert"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string)."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        }
      },
      "description": "CosmosDB linked service properties."
    },
    "CosmosDbMongoDbApiCollectionDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CosmosDbMongoDbApiCollection"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CosmosDbMongoDbApiCollectionDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "CosmosDB (MongoDB API) database dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The CosmosDB (MongoDB API) database dataset."
    },
    "CosmosDbMongoDbApiCollectionDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "collection": {
          "type": "object",
          "properties": {},
          "description": "The collection name of the CosmosDB (MongoDB API) database. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "collection"
      ],
      "description": "CosmosDB (MongoDB API) database dataset properties."
    },
    "CosmosDbMongoDbApiLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CosmosDbMongoDbApi"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CosmosDbMongoDbApiLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "CosmosDB (MongoDB API) linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for CosmosDB (MongoDB API) data source."
    },
    "CosmosDbMongoDbApiLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The CosmosDB (MongoDB API) connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "database": {
          "type": "object",
          "properties": {},
          "description": "The name of the CosmosDB (MongoDB API) database that you want to access. Type: string (or Expression with resultType string)."
        },
        "isServerVersionAbove32": {
          "type": "object",
          "properties": {},
          "description": "Whether the CosmosDB (MongoDB API) server version is higher than 3.2. The default value is false. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "connectionString",
        "database"
      ],
      "description": "CosmosDB (MongoDB API) linked service properties."
    },
    "CosmosDbMongoDbApiSink": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CosmosDbMongoDbApiSink"
          ]
        },
        "writeBehavior": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the document with same key to be overwritten (upsert) rather than throw exception (insert). The default value is \"insert\". Type: string (or Expression with resultType string). Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity sink for a CosmosDB (MongoDB API) database."
    },
    "CosmosDbMongoDbApiSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "batchSize": {
          "type": "object",
          "properties": {},
          "description": "Specifies the number of documents to return in each batch of the response from MongoDB instance. In most cases, modifying the batch size will not affect the user or the application. This property's main purpose is to avoid hit the limitation of response size. Type: integer (or Expression with resultType integer)."
        },
        "cursorMethods": {
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDbCursorMethodsProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Cursor methods for Mongodb query"
        },
        "filter": {
          "type": "object",
          "properties": {},
          "description": "Specifies selection filter using query operators. To return all documents in a collection, omit this parameter or pass an empty document ({}). Type: string (or Expression with resultType string)."
        },
        "queryTimeout": {
          "type": "object",
          "properties": {},
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "type": {
          "type": "string",
          "enum": [
            "CosmosDbMongoDbApiSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for a CosmosDB (MongoDB API) database."
    },
    "CosmosDbSqlApiCollectionDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CosmosDbSqlApiCollection"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CosmosDbSqlApiCollectionDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "CosmosDB (SQL API) Collection dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Microsoft Azure CosmosDB (SQL API) Collection dataset."
    },
    "CosmosDbSqlApiCollectionDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "collectionName": {
          "type": "object",
          "properties": {},
          "description": "CosmosDB (SQL API) collection name. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "collectionName"
      ],
      "description": "CosmosDB (SQL API) Collection dataset properties."
    },
    "CosmosDbSqlApiSink": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CosmosDbSqlApiSink"
          ]
        },
        "writeBehavior": {
          "type": "object",
          "properties": {},
          "description": "Describes how to write data to Azure Cosmos DB. Type: string (or Expression with resultType string). Allowed values: insert and upsert."
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure CosmosDB (SQL API) Collection sink."
    },
    "CosmosDbSqlApiSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "detectDatetime": {
          "type": "object",
          "properties": {},
          "description": "Whether detect primitive values as datetime values. Type: boolean (or Expression with resultType boolean)."
        },
        "pageSize": {
          "type": "object",
          "properties": {},
          "description": "Page size of the result. Type: integer (or Expression with resultType integer)."
        },
        "preferredRegions": {
          "type": "object",
          "properties": {},
          "description": "Preferred regions. Type: array of strings (or Expression with resultType array of strings)."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "SQL API query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "CosmosDbSqlApiSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure CosmosDB (SQL API) Collection source."
    },
    "CouchbaseLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Couchbase"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CouchbaseLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Couchbase server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Couchbase server linked service."
    },
    "CouchbaseLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "credString": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Couchbase server linked service properties."
    },
    "CouchbaseSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "CouchbaseSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Couchbase server source."
    },
    "CouchbaseTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CouchbaseTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Couchbase server dataset."
    },
    "CredentialReference": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "referenceName": {
          "type": "string",
          "description": "Reference credential name."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "CredentialReference"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        }
      },
      "required": [
        "referenceName",
        "type"
      ],
      "description": "Credential reference type."
    },
    "CustomActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Custom"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CustomActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Custom activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Custom activity type."
    },
    "CustomActivityReferenceObject": {
      "type": "object",
      "properties": {
        "datasets": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatasetReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset references."
        },
        "linkedServices": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedServiceReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service references."
        }
      },
      "description": "Reference objects for custom activity"
    },
    "CustomActivityTypeProperties": {
      "type": "object",
      "properties": {
        "autoUserSpecification": {
          "type": "object",
          "properties": {},
          "description": "Elevation level and scope for the user, default is nonadmin task. Type: string (or Expression with resultType double)."
        },
        "command": {
          "type": "object",
          "properties": {},
          "description": "Command for custom activity Type: string (or Expression with resultType string)."
        },
        "extendedProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined."
        },
        "folderPath": {
          "type": "object",
          "properties": {},
          "description": "Folder path for resource files Type: string (or Expression with resultType string)."
        },
        "referenceObjects": {
          "oneOf": [
            {
              "$ref": "#/definitions/CustomActivityReferenceObject"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Reference objects for custom activity"
        },
        "resourceLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "retentionTimeInDays": {
          "type": "object",
          "properties": {},
          "description": "The retention time for the files submitted for custom activity. Type: double (or Expression with resultType double)."
        }
      },
      "required": [
        "command"
      ],
      "description": "Custom activity properties."
    },
    "CustomDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CustomDataset"
          ]
        },
        "typeProperties": {
          "type": "object",
          "properties": {},
          "description": "Custom dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The custom dataset."
    },
    "CustomDataSourceLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CustomDataSource"
          ]
        },
        "typeProperties": {
          "type": "object",
          "properties": {},
          "description": "Custom linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Custom linked service."
    },
    "CustomEventsTrigger": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CustomEventsTrigger"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CustomEventsTriggerTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Custom Events Trigger properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Trigger that runs every time a custom event is received."
    },
    "CustomEventsTriggerTypeProperties": {
      "type": "object",
      "properties": {
        "events": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of event types that cause this trigger to fire."
        },
        "scope": {
          "type": "string",
          "description": "The ARM resource ID of the Azure Event Grid Topic."
        },
        "subjectBeginsWith": {
          "type": "string",
          "description": "The event subject must begin with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith."
        },
        "subjectEndsWith": {
          "type": "string",
          "description": "The event subject must end with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith."
        }
      },
      "required": [
        "events",
        "scope"
      ],
      "description": "Custom Events Trigger properties."
    },
    "CustomSetupBase": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/CmdkeySetup"
        },
        {
          "$ref": "#/definitions/EnvironmentVariableSetup"
        },
        {
          "$ref": "#/definitions/ComponentSetup"
        },
        {
          "$ref": "#/definitions/AzPowerShellSetup"
        }
      ],
      "properties": {},
      "description": "The base definition of the custom setup."
    },
    "DatabricksNotebookActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DatabricksNotebook"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatabricksNotebookActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Databricks Notebook activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "DatabricksNotebook activity."
    },
    "DatabricksNotebookActivityTypeProperties": {
      "type": "object",
      "properties": {
        "baseParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base parameters to be used for each run of this job.If the notebook takes a parameter that is not specified, the default value from the notebook will be used."
        },
        "libraries": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {}
                },
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of libraries to be installed on the cluster that will execute the job."
        },
        "notebookPath": {
          "type": "object",
          "properties": {},
          "description": "The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "notebookPath"
      ],
      "description": "Databricks Notebook activity properties."
    },
    "DatabricksSparkJarActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DatabricksSparkJar"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatabricksSparkJarActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Databricks SparkJar activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "DatabricksSparkJar activity."
    },
    "DatabricksSparkJarActivityTypeProperties": {
      "type": "object",
      "properties": {
        "libraries": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {}
                },
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of libraries to be installed on the cluster that will execute the job."
        },
        "mainClassName": {
          "type": "object",
          "properties": {},
          "description": "The full name of the class containing the main method to be executed. This class must be contained in a JAR provided as a library. Type: string (or Expression with resultType string)."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Parameters that will be passed to the main method."
        }
      },
      "required": [
        "mainClassName"
      ],
      "description": "Databricks SparkJar activity properties."
    },
    "DatabricksSparkPythonActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DatabricksSparkPython"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatabricksSparkPythonActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Databricks SparkPython activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "DatabricksSparkPython activity."
    },
    "DatabricksSparkPythonActivityTypeProperties": {
      "type": "object",
      "properties": {
        "libraries": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {}
                },
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of libraries to be installed on the cluster that will execute the job."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Command line parameters that will be passed to the Python file."
        },
        "pythonFile": {
          "type": "object",
          "properties": {},
          "description": "The URI of the Python file to be executed. DBFS paths are supported. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "pythonFile"
      ],
      "description": "Databricks SparkPython activity properties."
    },
    "DataFlow": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/MappingDataFlow"
        },
        {
          "$ref": "#/definitions/Flowlet"
        },
        {
          "$ref": "#/definitions/WranglingDataFlow"
        }
      ],
      "properties": {
        "annotations": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of tags that can be used for describing the data flow."
        },
        "description": {
          "type": "string",
          "description": "The description of the data flow."
        },
        "folder": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataFlowFolder"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The folder that this data flow is in. If not specified, Data flow will appear at the root level."
        }
      },
      "description": "Azure Data Factory nested object which contains a flow with data movements and transformations."
    },
    "DataFlowFolder": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the folder that this data flow is in."
        }
      },
      "description": "The folder that this data flow is in. If not specified, Data flow will appear at the root level."
    },
    "DataFlowReference": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "datasetParameters": {
          "type": "object",
          "properties": {},
          "description": "Reference data flow parameters from dataset."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An object mapping parameter names to argument values."
        },
        "referenceName": {
          "type": "string",
          "description": "Reference data flow name."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "DataFlowReference"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Data flow reference type."
        }
      },
      "required": [
        "referenceName",
        "type"
      ],
      "description": "Data flow reference type."
    },
    "DataFlowSink": {
      "type": "object",
      "properties": {
        "dataset": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset reference type."
        },
        "description": {
          "type": "string",
          "description": "Transformation description."
        },
        "flowlet": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataFlowReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Data flow reference type."
        },
        "linkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "name": {
          "type": "string",
          "description": "Transformation name."
        },
        "rejectedDataLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "schemaLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        }
      },
      "required": [
        "name"
      ],
      "description": "Transformation for data flow sink."
    },
    "DataFlowSource": {
      "type": "object",
      "properties": {
        "dataset": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset reference type."
        },
        "description": {
          "type": "string",
          "description": "Transformation description."
        },
        "flowlet": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataFlowReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Data flow reference type."
        },
        "linkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "name": {
          "type": "string",
          "description": "Transformation name."
        },
        "schemaLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        }
      },
      "required": [
        "name"
      ],
      "description": "Transformation for data flow source."
    },
    "DataFlowStagingInfo": {
      "type": "object",
      "properties": {
        "folderPath": {
          "type": "object",
          "properties": {},
          "description": "Folder path for staging blob. Type: string (or Expression with resultType string)"
        },
        "linkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        }
      },
      "description": "Staging info for execute data flow activity."
    },
    "DataLakeAnalyticsUSQLActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DataLakeAnalyticsU-SQL"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataLakeAnalyticsUSQLActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "DataLakeAnalyticsU-SQL activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Data Lake Analytics U-SQL activity."
    },
    "DataLakeAnalyticsUSQLActivityTypeProperties": {
      "type": "object",
      "properties": {
        "compilationMode": {
          "type": "object",
          "properties": {},
          "description": "Compilation mode of U-SQL. Must be one of these values : Semantic, Full and SingleBox. Type: string (or Expression with resultType string)."
        },
        "degreeOfParallelism": {
          "type": "object",
          "properties": {},
          "description": "The maximum number of nodes simultaneously used to run the job. Default value is 1. Type: integer (or Expression with resultType integer), minimum: 1."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Parameters for U-SQL job request."
        },
        "priority": {
          "type": "object",
          "properties": {},
          "description": "Determines which jobs out of all that are queued should be selected to run first. The lower the number, the higher the priority. Default value is 1000. Type: integer (or Expression with resultType integer), minimum: 1."
        },
        "runtimeVersion": {
          "type": "object",
          "properties": {},
          "description": "Runtime version of the U-SQL engine to use. Type: string (or Expression with resultType string)."
        },
        "scriptLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "scriptPath": {
          "type": "object",
          "properties": {},
          "description": "Case-sensitive path to folder that contains the U-SQL script. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "scriptLinkedService",
        "scriptPath"
      ],
      "description": "DataLakeAnalyticsU-SQL activity properties."
    },
    "Dataset": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/AmazonS3Dataset"
        },
        {
          "$ref": "#/definitions/AvroDataset"
        },
        {
          "$ref": "#/definitions/ExcelDataset"
        },
        {
          "$ref": "#/definitions/ParquetDataset"
        },
        {
          "$ref": "#/definitions/DelimitedTextDataset"
        },
        {
          "$ref": "#/definitions/JsonDataset"
        },
        {
          "$ref": "#/definitions/XmlDataset"
        },
        {
          "$ref": "#/definitions/OrcDataset"
        },
        {
          "$ref": "#/definitions/BinaryDataset"
        },
        {
          "$ref": "#/definitions/AzureBlobDataset"
        },
        {
          "$ref": "#/definitions/AzureTableDataset"
        },
        {
          "$ref": "#/definitions/AzureSqlTableDataset"
        },
        {
          "$ref": "#/definitions/AzureSqlMITableDataset"
        },
        {
          "$ref": "#/definitions/AzureSqlDWTableDataset"
        },
        {
          "$ref": "#/definitions/CassandraTableDataset"
        },
        {
          "$ref": "#/definitions/CustomDataset"
        },
        {
          "$ref": "#/definitions/CosmosDbSqlApiCollectionDataset"
        },
        {
          "$ref": "#/definitions/DocumentDbCollectionDataset"
        },
        {
          "$ref": "#/definitions/DynamicsEntityDataset"
        },
        {
          "$ref": "#/definitions/DynamicsCrmEntityDataset"
        },
        {
          "$ref": "#/definitions/CommonDataServiceForAppsEntityDataset"
        },
        {
          "$ref": "#/definitions/AzureDataLakeStoreDataset"
        },
        {
          "$ref": "#/definitions/AzureBlobFSDataset"
        },
        {
          "$ref": "#/definitions/Office365Dataset"
        },
        {
          "$ref": "#/definitions/FileShareDataset"
        },
        {
          "$ref": "#/definitions/MongoDbCollectionDataset"
        },
        {
          "$ref": "#/definitions/MongoDbAtlasCollectionDataset"
        },
        {
          "$ref": "#/definitions/MongoDbV2CollectionDataset"
        },
        {
          "$ref": "#/definitions/CosmosDbMongoDbApiCollectionDataset"
        },
        {
          "$ref": "#/definitions/ODataResourceDataset"
        },
        {
          "$ref": "#/definitions/OracleTableDataset"
        },
        {
          "$ref": "#/definitions/AmazonRdsForOracleTableDataset"
        },
        {
          "$ref": "#/definitions/TeradataTableDataset"
        },
        {
          "$ref": "#/definitions/AzureMySqlTableDataset"
        },
        {
          "$ref": "#/definitions/AmazonRedshiftTableDataset"
        },
        {
          "$ref": "#/definitions/Db2TableDataset"
        },
        {
          "$ref": "#/definitions/RelationalTableDataset"
        },
        {
          "$ref": "#/definitions/InformixTableDataset"
        },
        {
          "$ref": "#/definitions/OdbcTableDataset"
        },
        {
          "$ref": "#/definitions/MySqlTableDataset"
        },
        {
          "$ref": "#/definitions/PostgreSqlTableDataset"
        },
        {
          "$ref": "#/definitions/MicrosoftAccessTableDataset"
        },
        {
          "$ref": "#/definitions/SalesforceObjectDataset"
        },
        {
          "$ref": "#/definitions/SalesforceServiceCloudObjectDataset"
        },
        {
          "$ref": "#/definitions/SybaseTableDataset"
        },
        {
          "$ref": "#/definitions/SapBwCubeDataset"
        },
        {
          "$ref": "#/definitions/SapCloudForCustomerResourceDataset"
        },
        {
          "$ref": "#/definitions/SapEccResourceDataset"
        },
        {
          "$ref": "#/definitions/SapHanaTableDataset"
        },
        {
          "$ref": "#/definitions/SapOpenHubTableDataset"
        },
        {
          "$ref": "#/definitions/SqlServerTableDataset"
        },
        {
          "$ref": "#/definitions/AmazonRdsForSqlServerTableDataset"
        },
        {
          "$ref": "#/definitions/RestResourceDataset"
        },
        {
          "$ref": "#/definitions/SapTableResourceDataset"
        },
        {
          "$ref": "#/definitions/SapOdpResourceDataset"
        },
        {
          "$ref": "#/definitions/WebTableDataset"
        },
        {
          "$ref": "#/definitions/AzureSearchIndexDataset"
        },
        {
          "$ref": "#/definitions/HttpDataset"
        },
        {
          "$ref": "#/definitions/AmazonMWSObjectDataset"
        },
        {
          "$ref": "#/definitions/AzurePostgreSqlTableDataset"
        },
        {
          "$ref": "#/definitions/ConcurObjectDataset"
        },
        {
          "$ref": "#/definitions/CouchbaseTableDataset"
        },
        {
          "$ref": "#/definitions/DrillTableDataset"
        },
        {
          "$ref": "#/definitions/EloquaObjectDataset"
        },
        {
          "$ref": "#/definitions/GoogleBigQueryObjectDataset"
        },
        {
          "$ref": "#/definitions/GreenplumTableDataset"
        },
        {
          "$ref": "#/definitions/HBaseObjectDataset"
        },
        {
          "$ref": "#/definitions/HiveObjectDataset"
        },
        {
          "$ref": "#/definitions/HubspotObjectDataset"
        },
        {
          "$ref": "#/definitions/ImpalaObjectDataset"
        },
        {
          "$ref": "#/definitions/JiraObjectDataset"
        },
        {
          "$ref": "#/definitions/MagentoObjectDataset"
        },
        {
          "$ref": "#/definitions/MariaDBTableDataset"
        },
        {
          "$ref": "#/definitions/AzureMariaDBTableDataset"
        },
        {
          "$ref": "#/definitions/MarketoObjectDataset"
        },
        {
          "$ref": "#/definitions/PaypalObjectDataset"
        },
        {
          "$ref": "#/definitions/PhoenixObjectDataset"
        },
        {
          "$ref": "#/definitions/PrestoObjectDataset"
        },
        {
          "$ref": "#/definitions/QuickBooksObjectDataset"
        },
        {
          "$ref": "#/definitions/ServiceNowObjectDataset"
        },
        {
          "$ref": "#/definitions/ShopifyObjectDataset"
        },
        {
          "$ref": "#/definitions/SparkObjectDataset"
        },
        {
          "$ref": "#/definitions/SquareObjectDataset"
        },
        {
          "$ref": "#/definitions/XeroObjectDataset"
        },
        {
          "$ref": "#/definitions/ZohoObjectDataset"
        },
        {
          "$ref": "#/definitions/NetezzaTableDataset"
        },
        {
          "$ref": "#/definitions/VerticaTableDataset"
        },
        {
          "$ref": "#/definitions/SalesforceMarketingCloudObjectDataset"
        },
        {
          "$ref": "#/definitions/ResponsysObjectDataset"
        },
        {
          "$ref": "#/definitions/DynamicsAXResourceDataset"
        },
        {
          "$ref": "#/definitions/OracleServiceCloudObjectDataset"
        },
        {
          "$ref": "#/definitions/AzureDataExplorerTableDataset"
        },
        {
          "$ref": "#/definitions/GoogleAdWordsObjectDataset"
        },
        {
          "$ref": "#/definitions/SnowflakeDataset"
        },
        {
          "$ref": "#/definitions/SharePointOnlineListResourceDataset"
        },
        {
          "$ref": "#/definitions/AzureDatabricksDeltaLakeDataset"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "annotations": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of tags that can be used for describing the Dataset."
        },
        "description": {
          "type": "string",
          "description": "Dataset description."
        },
        "folder": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetFolder"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The folder that this Dataset is in. If not specified, Dataset will appear at the root level."
        },
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ParameterSpecification"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Definition of all parameters for an entity."
        },
        "schema": {
          "type": "object",
          "properties": {},
          "description": "Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement."
        },
        "structure": {
          "type": "object",
          "properties": {},
          "description": "Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement."
        }
      },
      "required": [
        "linkedServiceName"
      ],
      "description": "The Azure Data Factory nested object which identifies data within different data stores, such as tables, files, folders, and documents."
    },
    "DatasetCompression": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "level": {
          "type": "object",
          "properties": {},
          "description": "The dataset compression level. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "object",
          "properties": {},
          "description": "Type of dataset compression. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "The compression method used on a dataset."
    },
    "DatasetFolder": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the folder that this Dataset is in."
        }
      },
      "description": "The folder that this Dataset is in. If not specified, Dataset will appear at the root level."
    },
    "DatasetLocation": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/AzureBlobStorageLocation"
        },
        {
          "$ref": "#/definitions/AzureBlobFSLocation"
        },
        {
          "$ref": "#/definitions/AzureDataLakeStoreLocation"
        },
        {
          "$ref": "#/definitions/AmazonS3Location"
        },
        {
          "$ref": "#/definitions/FileServerLocation"
        },
        {
          "$ref": "#/definitions/AzureFileStorageLocation"
        },
        {
          "$ref": "#/definitions/AmazonS3CompatibleLocation"
        },
        {
          "$ref": "#/definitions/OracleCloudStorageLocation"
        },
        {
          "$ref": "#/definitions/GoogleCloudStorageLocation"
        },
        {
          "$ref": "#/definitions/FtpServerLocation"
        },
        {
          "$ref": "#/definitions/SftpLocation"
        },
        {
          "$ref": "#/definitions/HttpServerLocation"
        },
        {
          "$ref": "#/definitions/HdfsLocation"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "fileName": {
          "type": "object",
          "properties": {},
          "description": "Specify the file name of dataset. Type: string (or Expression with resultType string)."
        },
        "folderPath": {
          "type": "object",
          "properties": {},
          "description": "Specify the folder path of dataset. Type: string (or Expression with resultType string)"
        }
      },
      "description": "Dataset location."
    },
    "DatasetReference": {
      "type": "object",
      "properties": {
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An object mapping parameter names to argument values."
        },
        "referenceName": {
          "type": "string",
          "description": "Reference dataset name."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "DatasetReference"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset reference type."
        }
      },
      "required": [
        "referenceName",
        "type"
      ],
      "description": "Dataset reference type."
    },
    "DatasetStorageFormat": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/TextFormat"
        },
        {
          "$ref": "#/definitions/JsonFormat"
        },
        {
          "$ref": "#/definitions/AvroFormat"
        },
        {
          "$ref": "#/definitions/OrcFormat"
        },
        {
          "$ref": "#/definitions/ParquetFormat"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "deserializer": {
          "type": "object",
          "properties": {},
          "description": "Deserializer. Type: string (or Expression with resultType string)."
        },
        "serializer": {
          "type": "object",
          "properties": {},
          "description": "Serializer. Type: string (or Expression with resultType string)."
        }
      },
      "description": "The format definition of a storage."
    },
    "DataworldLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Dataworld"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataworldLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataworld linked service type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Dataworld."
    },
    "DataworldLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "apiToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "apiToken"
      ],
      "description": "Dataworld linked service type properties."
    },
    "Db2LinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Db2"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Db2LinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "DB2 linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for DB2 data source."
    },
    "Db2LinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "AuthenticationType to be used for connection. It is mutually exclusive with connectionString property."
        },
        "certificateCommonName": {
          "type": "object",
          "properties": {},
          "description": "Certificate Common Name when TLS is enabled. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
        },
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. It is mutually exclusive with server, database, authenticationType, userName, packageCollection and certificateCommonName property. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "database": {
          "type": "object",
          "properties": {},
          "description": "Database name for connection. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
        },
        "packageCollection": {
          "type": "object",
          "properties": {},
          "description": "Under where packages are created when querying database. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "server": {
          "type": "object",
          "properties": {},
          "description": "Server name for connection. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "Username for authentication. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
        }
      },
      "description": "DB2 linked service properties."
    },
    "Db2Source": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "Db2Source"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for Db2 databases."
    },
    "Db2TableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Db2Table"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Db2TableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Db2 table dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Db2 table dataset."
    },
    "Db2TableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The Db2 schema name. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The Db2 table name. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "Db2 table dataset properties."
    },
    "DeleteActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Delete"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeleteActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Delete activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Delete activity."
    },
    "DeleteActivityTypeProperties": {
      "type": "object",
      "properties": {
        "dataset": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset reference type."
        },
        "enableLogging": {
          "type": "object",
          "properties": {},
          "description": "Whether to record detailed logs of delete-activity execution. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "logStorageSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/LogStorageSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "(Deprecated. Please use LogSettings) Log storage settings."
        },
        "maxConcurrentConnections": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The max concurrent connections to connect data source at the same time."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files or sub-folders under current folder path will be deleted recursively. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector read setting."
        }
      },
      "required": [
        "dataset"
      ],
      "description": "Delete activity properties."
    },
    "DelimitedTextDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DelimitedText"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DelimitedTextDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "DelimitedText dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "Delimited text dataset."
    },
    "DelimitedTextDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "columnDelimiter": {
          "type": "object",
          "properties": {},
          "description": "The column delimiter. Type: string (or Expression with resultType string)."
        },
        "compressionCodec": {
          "type": "object",
          "properties": {},
          "description": "The data compressionCodec. Type: string (or Expression with resultType string)."
        },
        "compressionLevel": {
          "type": "object",
          "properties": {},
          "description": "The data compression method used for DelimitedText."
        },
        "encodingName": {
          "type": "object",
          "properties": {},
          "description": "The code page name of the preferred encoding. If miss, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string)."
        },
        "escapeChar": {
          "type": "object",
          "properties": {},
          "description": "The escape character. Type: string (or Expression with resultType string)."
        },
        "firstRowAsHeader": {
          "type": "object",
          "properties": {},
          "description": "When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "location": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset location."
        },
        "nullValue": {
          "type": "object",
          "properties": {},
          "description": "The null value string. Type: string (or Expression with resultType string)."
        },
        "quoteChar": {
          "type": "object",
          "properties": {},
          "description": "The quote character. Type: string (or Expression with resultType string)."
        },
        "rowDelimiter": {
          "type": "object",
          "properties": {},
          "description": "The row delimiter. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "location"
      ],
      "description": "DelimitedText dataset properties."
    },
    "DelimitedTextReadSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "compressionProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CompressionReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Compression read settings."
        },
        "skipLineCount": {
          "type": "object",
          "properties": {},
          "description": "Indicates the number of non-empty rows to skip when reading data from input files. Type: integer (or Expression with resultType integer)."
        },
        "type": {
          "type": "string",
          "enum": [
            "DelimitedTextReadSettings"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Delimited text read settings."
    },
    "DelimitedTextSink": {
      "type": "object",
      "properties": {
        "formatSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/DelimitedTextWriteSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Delimited text write settings."
        },
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreWriteSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector write settings."
        },
        "type": {
          "type": "string",
          "enum": [
            "DelimitedTextSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity DelimitedText sink."
    },
    "DelimitedTextSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "formatSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/DelimitedTextReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Delimited text read settings."
        },
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector read setting."
        },
        "type": {
          "type": "string",
          "enum": [
            "DelimitedTextSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity DelimitedText source."
    },
    "DelimitedTextWriteSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "fileExtension": {
          "type": "object",
          "properties": {},
          "description": "The file extension used to create the files. Type: string (or Expression with resultType string)."
        },
        "fileNamePrefix": {
          "type": "object",
          "properties": {},
          "description": "Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string)."
        },
        "maxRowsPerFile": {
          "type": "object",
          "properties": {},
          "description": "Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer)."
        },
        "quoteAllText": {
          "type": "object",
          "properties": {},
          "description": "Indicates whether string values should always be enclosed with quotes. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "fileExtension"
      ],
      "description": "Delimited text write settings."
    },
    "DependencyReference": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/TriggerDependencyReference"
        },
        {
          "$ref": "#/definitions/SelfDependencyTumblingWindowTriggerReference"
        }
      ],
      "properties": {},
      "description": "Referenced dependency."
    },
    "DistcpSettings": {
      "type": "object",
      "properties": {
        "distcpOptions": {
          "type": "object",
          "properties": {},
          "description": "Specifies the Distcp options. Type: string (or Expression with resultType string)."
        },
        "resourceManagerEndpoint": {
          "type": "object",
          "properties": {},
          "description": "Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string)."
        },
        "tempScriptPath": {
          "type": "object",
          "properties": {},
          "description": "Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "resourceManagerEndpoint",
        "tempScriptPath"
      ],
      "description": "Distcp settings."
    },
    "DocumentDbCollectionDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DocumentDbCollection"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DocumentDbCollectionDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "DocumentDB Collection dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Microsoft Azure Document Database Collection dataset."
    },
    "DocumentDbCollectionDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "collectionName": {
          "type": "object",
          "properties": {},
          "description": "Document Database collection name. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "collectionName"
      ],
      "description": "DocumentDB Collection dataset properties."
    },
    "DocumentDbCollectionSink": {
      "type": "object",
      "properties": {
        "nestingSeparator": {
          "type": "object",
          "properties": {},
          "description": "Nested properties separator. Default is . (dot). Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "DocumentDbCollectionSink"
          ]
        },
        "writeBehavior": {
          "type": "object",
          "properties": {},
          "description": "Describes how to write data to Azure Cosmos DB. Type: string (or Expression with resultType string). Allowed values: insert and upsert."
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Document Database Collection sink."
    },
    "DocumentDbCollectionSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "nestingSeparator": {
          "type": "object",
          "properties": {},
          "description": "Nested properties separator. Type: string (or Expression with resultType string)."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "Documents query. Type: string (or Expression with resultType string)."
        },
        "queryTimeout": {
          "type": "object",
          "properties": {},
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "type": {
          "type": "string",
          "enum": [
            "DocumentDbCollectionSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Document Database Collection source."
    },
    "DrillDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the Drill. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Drill. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "Drill Dataset Properties"
    },
    "DrillLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Drill"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DrillLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Drill server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Drill server linked service."
    },
    "DrillLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "pwd": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        }
      },
      "description": "Drill server linked service properties."
    },
    "DrillSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "DrillSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Drill server source."
    },
    "DrillTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DrillTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DrillDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Drill Dataset Properties"
        }
      },
      "required": [
        "type"
      ],
      "description": "Drill server dataset."
    },
    "DWCopyCommandDefaultValue": {
      "type": "object",
      "properties": {
        "columnName": {
          "type": "object",
          "properties": {},
          "description": "Column name. Type: object (or Expression with resultType string)."
        },
        "defaultValue": {
          "type": "object",
          "properties": {},
          "description": "The default value of the column. Type: object (or Expression with resultType string)."
        }
      },
      "description": "Default value."
    },
    "DWCopyCommandSettings": {
      "type": "object",
      "properties": {
        "additionalOptions": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Additional options directly passed to SQL DW in Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: \"additionalOptions\": { \"MAXERRORS\": \"1000\", \"DATEFORMAT\": \"'ymd'\" }"
        },
        "defaultValues": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DWCopyCommandDefaultValue"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the default values for each target column in SQL DW. The default values in the property overwrite the DEFAULT constraint set in the DB, and identity column cannot have a default value. Type: array of objects (or Expression with resultType array of objects)."
        }
      },
      "description": "DW Copy Command settings."
    },
    "DynamicsAXLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DynamicsAX"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DynamicsAXLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dynamics AX linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Dynamics AX linked service."
    },
    "DynamicsAXLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "aadResourceId": {
          "type": "object",
          "properties": {},
          "description": "Specify the resource you are requesting authorization. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "Specify the application's client ID. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "Specify the tenant information (domain name or tenant ID) under which your application resides. Retrieve it by hovering the mouse in the top-right corner of the Azure portal. Type: string (or Expression with resultType string)."
        },
        "url": {
          "type": "object",
          "properties": {},
          "description": "The Dynamics AX (or Dynamics 365 Finance and Operations) instance OData endpoint."
        }
      },
      "required": [
        "aadResourceId",
        "servicePrincipalId",
        "servicePrincipalKey",
        "tenant",
        "url"
      ],
      "description": "Dynamics AX linked service properties."
    },
    "DynamicsAXResourceDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DynamicsAXResource"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DynamicsAXResourceDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dynamics AX OData resource dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The path of the Dynamics AX OData entity."
    },
    "DynamicsAXResourceDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {},
          "description": "The path of the Dynamics AX OData entity. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "path"
      ],
      "description": "Dynamics AX OData resource dataset properties."
    },
    "DynamicsAXSource": {
      "type": "object",
      "properties": {
        "httpRequestTimeout": {
          "type": "object",
          "properties": {},
          "description": "The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "DynamicsAXSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Dynamics AX source."
    },
    "DynamicsCrmEntityDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DynamicsCrmEntity"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DynamicsCrmEntityDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dynamics CRM entity dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Dynamics CRM entity dataset."
    },
    "DynamicsCrmEntityDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "entityName": {
          "type": "object",
          "properties": {},
          "description": "The logical name of the entity. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Dynamics CRM entity dataset properties."
    },
    "DynamicsCrmLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DynamicsCrm"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DynamicsCrmLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dynamics CRM linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Dynamics CRM linked service."
    },
    "DynamicsCrmLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "type": "object",
          "properties": {},
          "description": "The authentication type to connect to Dynamics CRM server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario, 'AADServicePrincipal' for Server-To-Server authentication in online scenario. Type: string (or Expression with resultType string)."
        },
        "deploymentType": {
          "type": "object",
          "properties": {},
          "description": "The deployment type of the Dynamics CRM instance. 'Online' for Dynamics CRM Online and 'OnPremisesWithIfd' for Dynamics CRM on-premises with Ifd. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "hostName": {
          "type": "object",
          "properties": {},
          "description": "The host name of the on-premises Dynamics CRM server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string)."
        },
        "organizationName": {
          "type": "object",
          "properties": {},
          "description": "The organization name of the Dynamics CRM instance. The property is required for on-prem and required for online when there are more than one Dynamics CRM instances associated with the user. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The port of on-premises Dynamics CRM server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "servicePrincipalCredential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "servicePrincipalCredentialType": {
          "type": "object",
          "properties": {},
          "description": "The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string)."
        },
        "serviceUri": {
          "type": "object",
          "properties": {},
          "description": "The URL to the Microsoft Dynamics CRM server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "User name to access the Dynamics CRM instance. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "authenticationType",
        "deploymentType"
      ],
      "description": "Dynamics CRM linked service properties."
    },
    "DynamicsCrmSink": {
      "type": "object",
      "properties": {
        "alternateKeyName": {
          "type": "object",
          "properties": {},
          "description": "The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string)."
        },
        "ignoreNullValues": {
          "type": "object",
          "properties": {},
          "description": "The flag indicating whether to ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "DynamicsCrmSink"
          ]
        },
        "writeBehavior": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Upsert"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The write behavior for the operation."
        }
      },
      "required": [
        "type",
        "writeBehavior"
      ],
      "description": "A copy activity Dynamics CRM sink."
    },
    "DynamicsCrmSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "FetchXML is a proprietary query language that is used in Microsoft Dynamics CRM (online & on-premises). Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "DynamicsCrmSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Dynamics CRM source."
    },
    "DynamicsEntityDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DynamicsEntity"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DynamicsEntityDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dynamics entity dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Dynamics entity dataset."
    },
    "DynamicsEntityDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "entityName": {
          "type": "object",
          "properties": {},
          "description": "The logical name of the entity. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Dynamics entity dataset properties."
    },
    "DynamicsLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Dynamics"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DynamicsLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dynamics linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Dynamics linked service."
    },
    "DynamicsLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "type": "object",
          "properties": {},
          "description": "The authentication type to connect to Dynamics server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario, 'AADServicePrincipal' for Server-To-Server authentication in online scenario. Type: string (or Expression with resultType string)."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "deploymentType": {
          "type": "object",
          "properties": {},
          "description": "The deployment type of the Dynamics instance. 'Online' for Dynamics Online and 'OnPremisesWithIfd' for Dynamics on-premises with Ifd. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "hostName": {
          "type": "object",
          "properties": {},
          "description": "The host name of the on-premises Dynamics server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string)."
        },
        "organizationName": {
          "type": "object",
          "properties": {},
          "description": "The organization name of the Dynamics instance. The property is required for on-prem and required for online when there are more than one Dynamics instances associated with the user. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The port of on-premises Dynamics server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "servicePrincipalCredential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "servicePrincipalCredentialType": {
          "type": "object",
          "properties": {},
          "description": "The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string)."
        },
        "serviceUri": {
          "type": "object",
          "properties": {},
          "description": "The URL to the Microsoft Dynamics server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "User name to access the Dynamics instance. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "authenticationType",
        "deploymentType"
      ],
      "description": "Dynamics linked service properties."
    },
    "DynamicsSink": {
      "type": "object",
      "properties": {
        "alternateKeyName": {
          "type": "object",
          "properties": {},
          "description": "The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string)."
        },
        "ignoreNullValues": {
          "type": "object",
          "properties": {},
          "description": "The flag indicating whether ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "DynamicsSink"
          ]
        },
        "writeBehavior": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Upsert"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The write behavior for the operation."
        }
      },
      "required": [
        "type",
        "writeBehavior"
      ],
      "description": "A copy activity Dynamics sink."
    },
    "DynamicsSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "FetchXML is a proprietary query language that is used in Microsoft Dynamics (online & on-premises). Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "DynamicsSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Dynamics source."
    },
    "EloquaLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Eloqua"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EloquaLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Eloqua server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Eloqua server linked service."
    },
    "EloquaLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "endpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Eloqua server. (i.e. eloqua.example.com)"
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)"
        }
      },
      "required": [
        "endpoint",
        "username"
      ],
      "description": "Eloqua server linked service properties."
    },
    "EloquaObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "EloquaObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Eloqua server dataset."
    },
    "EloquaSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "EloquaSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Eloqua server source."
    },
    "EncryptionConfiguration": {
      "type": "object",
      "properties": {
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/CMKIdentityDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Managed Identity used for CMK."
        },
        "keyName": {
          "type": "string",
          "description": "The name of the key in Azure Key Vault to use as Customer Managed Key."
        },
        "keyVersion": {
          "type": "string",
          "description": "The version of the key used for CMK. If not provided, latest version will be used."
        },
        "vaultBaseUrl": {
          "type": "string",
          "description": "The url of the Azure Key Vault used for CMK."
        }
      },
      "required": [
        "keyName",
        "vaultBaseUrl"
      ],
      "description": "Definition of CMK for the factory."
    },
    "EntityReference": {
      "type": "object",
      "properties": {
        "referenceName": {
          "type": "string",
          "description": "The name of this referenced entity."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "IntegrationRuntimeReference",
                "LinkedServiceReference"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of this referenced entity."
        }
      },
      "description": "The entity reference."
    },
    "EnvironmentVariableSetup": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "EnvironmentVariableSetup"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnvironmentVariableSetupTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Environment variable custom setup type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The custom setup of setting environment variable."
    },
    "EnvironmentVariableSetupTypeProperties": {
      "type": "object",
      "properties": {
        "variableName": {
          "type": "string",
          "description": "The name of the environment variable."
        },
        "variableValue": {
          "type": "string",
          "description": "The value of the environment variable."
        }
      },
      "required": [
        "variableName",
        "variableValue"
      ],
      "description": "Environment variable custom setup type properties."
    },
    "ExcelDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Excel"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExcelDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Excel dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "Excel dataset."
    },
    "ExcelDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "compression": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetCompression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression method used on a dataset."
        },
        "firstRowAsHeader": {
          "type": "object",
          "properties": {},
          "description": "When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "location": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset location."
        },
        "nullValue": {
          "type": "object",
          "properties": {},
          "description": "The null value string. Type: string (or Expression with resultType string)."
        },
        "range": {
          "type": "object",
          "properties": {},
          "description": "The partial data of one sheet. Type: string (or Expression with resultType string)."
        },
        "sheetIndex": {
          "type": "object",
          "properties": {},
          "description": "The sheet index of excel file and default value is 0. Type: integer (or Expression with resultType integer)"
        },
        "sheetName": {
          "type": "object",
          "properties": {},
          "description": "The sheet name of excel file. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "location"
      ],
      "description": "Excel dataset properties."
    },
    "ExcelSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector read setting."
        },
        "type": {
          "type": "string",
          "enum": [
            "ExcelSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity excel source."
    },
    "ExecuteDataFlowActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ExecuteDataFlow"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExecuteDataFlowActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Execute data flow activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Execute data flow activity."
    },
    "ExecuteDataFlowActivityTypeProperties": {
      "type": "object",
      "properties": {
        "compute": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExecuteDataFlowActivityTypePropertiesCompute"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Compute properties for data flow activity."
        },
        "continueOnError": {
          "type": "object",
          "properties": {},
          "description": "Continue on error setting used for data flow execution. Enables processing to continue if a sink fails. Type: boolean (or Expression with resultType boolean)"
        },
        "dataFlow": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataFlowReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Data flow reference type."
        },
        "integrationRuntime": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Integration runtime reference type."
        },
        "runConcurrently": {
          "type": "object",
          "properties": {},
          "description": "Concurrent run setting used for data flow execution. Allows sinks with the same save order to be processed concurrently. Type: boolean (or Expression with resultType boolean)"
        },
        "sourceStagingConcurrency": {
          "type": "object",
          "properties": {},
          "description": "Specify number of parallel staging for sources applicable to the sink. Type: integer (or Expression with resultType integer)"
        },
        "staging": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataFlowStagingInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Staging info for execute data flow activity."
        },
        "traceLevel": {
          "type": "object",
          "properties": {},
          "description": "Trace level setting used for data flow monitoring output. Supported values are: 'coarse', 'fine', and 'none'. Type: string (or Expression with resultType string)"
        }
      },
      "required": [
        "dataFlow"
      ],
      "description": "Execute data flow activity properties."
    },
    "ExecuteDataFlowActivityTypePropertiesCompute": {
      "type": "object",
      "properties": {
        "computeType": {
          "type": "object",
          "properties": {},
          "description": "Compute type of the cluster which will execute data flow job. Possible values include: 'General', 'MemoryOptimized', 'ComputeOptimized'. Type: string (or Expression with resultType string)"
        },
        "coreCount": {
          "type": "object",
          "properties": {},
          "description": "Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272. Type: integer (or Expression with resultType integer)"
        }
      },
      "description": "Compute properties for data flow activity."
    },
    "ExecutePipelineActivity": {
      "type": "object",
      "properties": {
        "policy": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExecutePipelineActivityPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Execution policy for an execute pipeline activity."
        },
        "type": {
          "type": "string",
          "enum": [
            "ExecutePipeline"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExecutePipelineActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Execute pipeline activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Execute pipeline activity."
    },
    "ExecutePipelineActivityPolicy": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "secureInput": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "When set to true, Input from activity is considered as secure and will not be logged to monitoring."
        }
      },
      "description": "Execution policy for an execute pipeline activity."
    },
    "ExecutePipelineActivityTypeProperties": {
      "type": "object",
      "properties": {
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An object mapping parameter names to argument values."
        },
        "pipeline": {
          "oneOf": [
            {
              "$ref": "#/definitions/PipelineReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Pipeline reference type."
        },
        "waitOnCompletion": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Defines whether activity execution will wait for the dependent pipeline execution to finish. Default is false."
        }
      },
      "required": [
        "pipeline"
      ],
      "description": "Execute pipeline activity properties."
    },
    "ExecutePowerQueryActivityTypeProperties": {
      "type": "object",
      "properties": {
        "compute": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExecuteDataFlowActivityTypePropertiesCompute"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Compute properties for data flow activity."
        },
        "continueOnError": {
          "type": "object",
          "properties": {},
          "description": "Continue on error setting used for data flow execution. Enables processing to continue if a sink fails. Type: boolean (or Expression with resultType boolean)"
        },
        "dataFlow": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataFlowReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Data flow reference type."
        },
        "integrationRuntime": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Integration runtime reference type."
        },
        "queries": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PowerQuerySinkMapping"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of mapping for Power Query mashup query to sink dataset(s)."
        },
        "runConcurrently": {
          "type": "object",
          "properties": {},
          "description": "Concurrent run setting used for data flow execution. Allows sinks with the same save order to be processed concurrently. Type: boolean (or Expression with resultType boolean)"
        },
        "sinks": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/PowerQuerySink"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "(Deprecated. Please use Queries). List of Power Query activity sinks mapped to a queryName."
        },
        "sourceStagingConcurrency": {
          "type": "object",
          "properties": {},
          "description": "Specify number of parallel staging for sources applicable to the sink. Type: integer (or Expression with resultType integer)"
        },
        "staging": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataFlowStagingInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Staging info for execute data flow activity."
        },
        "traceLevel": {
          "type": "object",
          "properties": {},
          "description": "Trace level setting used for data flow monitoring output. Supported values are: 'coarse', 'fine', and 'none'. Type: string (or Expression with resultType string)"
        }
      },
      "required": [
        "dataFlow"
      ],
      "description": "Execute power query data flow activity properties."
    },
    "ExecuteSSISPackageActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ExecuteSSISPackage"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExecuteSSISPackageActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Execute SSIS package activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Execute SSIS package activity."
    },
    "ExecuteSSISPackageActivityTypeProperties": {
      "type": "object",
      "properties": {
        "connectVia": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Integration runtime reference type."
        },
        "environmentPath": {
          "type": "object",
          "properties": {},
          "description": "The environment path to execute the SSIS package. Type: string (or Expression with resultType string)."
        },
        "executionCredential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SSISExecutionCredential"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS package execution credential."
        },
        "loggingLevel": {
          "type": "object",
          "properties": {},
          "description": "The logging level of SSIS package execution. Type: string (or Expression with resultType string)."
        },
        "logLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/SSISLogLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS package execution log location"
        },
        "packageConnectionManagers": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/SSISExecutionParameter"
                },
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The package level connection managers to execute the SSIS package."
        },
        "packageLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/SSISPackageLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS package location."
        },
        "packageParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/SSISExecutionParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The package level parameters to execute the SSIS package."
        },
        "projectConnectionManagers": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/SSISExecutionParameter"
                },
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The project level connection managers to execute the SSIS package."
        },
        "projectParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/SSISExecutionParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The project level parameters to execute the SSIS package."
        },
        "propertyOverrides": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/SSISPropertyOverride"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The property overrides to execute the SSIS package."
        },
        "runtime": {
          "type": "object",
          "properties": {},
          "description": "Specifies the runtime to execute SSIS package. The value should be \"x86\" or \"x64\". Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectVia",
        "packageLocation"
      ],
      "description": "Execute SSIS package activity properties."
    },
    "ExecuteWranglingDataflowActivity": {
      "type": "object",
      "properties": {
        "policy": {
          "oneOf": [
            {
              "$ref": "#/definitions/ActivityPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Execution policy for an activity."
        },
        "type": {
          "type": "string",
          "enum": [
            "ExecuteWranglingDataflow"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExecutePowerQueryActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Execute power query data flow activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Execute power query activity."
    },
    "ExecutionActivity": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/CopyActivity"
        },
        {
          "$ref": "#/definitions/HDInsightHiveActivity"
        },
        {
          "$ref": "#/definitions/HDInsightPigActivity"
        },
        {
          "$ref": "#/definitions/HDInsightMapReduceActivity"
        },
        {
          "$ref": "#/definitions/HDInsightStreamingActivity"
        },
        {
          "$ref": "#/definitions/HDInsightSparkActivity"
        },
        {
          "$ref": "#/definitions/ExecuteSSISPackageActivity"
        },
        {
          "$ref": "#/definitions/CustomActivity"
        },
        {
          "$ref": "#/definitions/SqlServerStoredProcedureActivity"
        },
        {
          "$ref": "#/definitions/DeleteActivity"
        },
        {
          "$ref": "#/definitions/AzureDataExplorerCommandActivity"
        },
        {
          "$ref": "#/definitions/LookupActivity"
        },
        {
          "$ref": "#/definitions/WebActivity"
        },
        {
          "$ref": "#/definitions/GetMetadataActivity"
        },
        {
          "$ref": "#/definitions/AzureMLBatchExecutionActivity"
        },
        {
          "$ref": "#/definitions/AzureMLUpdateResourceActivity"
        },
        {
          "$ref": "#/definitions/AzureMLExecutePipelineActivity"
        },
        {
          "$ref": "#/definitions/DataLakeAnalyticsUSQLActivity"
        },
        {
          "$ref": "#/definitions/DatabricksNotebookActivity"
        },
        {
          "$ref": "#/definitions/DatabricksSparkJarActivity"
        },
        {
          "$ref": "#/definitions/DatabricksSparkPythonActivity"
        },
        {
          "$ref": "#/definitions/AzureFunctionActivity"
        },
        {
          "$ref": "#/definitions/ExecuteDataFlowActivity"
        },
        {
          "$ref": "#/definitions/ScriptActivity"
        }
      ],
      "properties": {
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "policy": {
          "oneOf": [
            {
              "$ref": "#/definitions/ActivityPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Execution policy for an activity."
        },
        "type": {
          "type": "string",
          "enum": [
            "Execution"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Base class for all execution activities."
    },
    "Expression": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Expression"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Expression type."
        },
        "value": {
          "type": "string",
          "description": "Expression value."
        }
      },
      "required": [
        "type",
        "value"
      ],
      "description": "Azure Data Factory expression definition."
    },
    "factories_dataflows_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
              "minLength": 1,
              "maxLength": 260
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The data flow name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataFlow"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory nested object which contains a flow with data movements and transformations."
        },
        "type": {
          "type": "string",
          "enum": [
            "dataflows"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/dataflows"
    },
    "factories_datasets_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
              "minLength": 1,
              "maxLength": 260
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The dataset name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Dataset"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Azure Data Factory nested object which identifies data within different data stores, such as tables, files, folders, and documents."
        },
        "type": {
          "type": "string",
          "enum": [
            "datasets"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/datasets"
    },
    "factories_globalParameters_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
              "minLength": 1,
              "maxLength": 260
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The global parameter name."
        },
        "properties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/GlobalParameterSpecification"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Global parameters associated with the Azure Data Factory"
        },
        "type": {
          "type": "string",
          "enum": [
            "globalParameters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/globalParameters"
    },
    "factories_integrationRuntimes_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
              "minLength": 3,
              "maxLength": 63
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The integration runtime name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntime"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory nested object which serves as a compute resource for activities."
        },
        "type": {
          "type": "string",
          "enum": [
            "integrationRuntimes"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/integrationRuntimes"
    },
    "factories_linkedservices_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
              "minLength": 1,
              "maxLength": 260
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The linked service name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The nested object which contains the information and credential which can be used to connect with related store or compute resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "linkedservices"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/linkedservices"
    },
    "factories_managedVirtualNetworks_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
              "minLength": 1,
              "maxLength": 127
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Managed virtual network name"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedVirtualNetwork"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A managed Virtual Network associated with the Azure Data Factory"
        },
        "type": {
          "type": "string",
          "enum": [
            "managedVirtualNetworks"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/managedVirtualNetworks"
    },
    "factories_managedVirtualNetworks_managedPrivateEndpoints_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
              "minLength": 1,
              "maxLength": 127
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Managed private endpoint name"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedPrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of a managed private endpoint"
        },
        "type": {
          "type": "string",
          "enum": [
            "managedPrivateEndpoints"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints"
    },
    "factories_pipelines_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
              "minLength": 1,
              "maxLength": 260
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The pipeline name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Pipeline"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A data factory pipeline."
        },
        "type": {
          "type": "string",
          "enum": [
            "pipelines"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/pipelines"
    },
    "factories_privateEndpointConnections_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The private endpoint connection name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkConnectionApprovalRequest"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A request to approve or reject a private endpoint connection"
        },
        "type": {
          "type": "string",
          "enum": [
            "privateEndpointConnections"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/privateEndpointConnections"
    },
    "factories_triggers_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
              "minLength": 1,
              "maxLength": 260
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The trigger name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Trigger"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure data factory nested object which contains information about creating pipeline run"
        },
        "type": {
          "type": "string",
          "enum": [
            "triggers"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DataFactory/factories/triggers"
    },
    "FactoryGitHubConfiguration": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "GitHub bring your own app client id."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/GitHubClientSecret"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Client secret information for factory's bring your own app repository configuration."
        },
        "hostName": {
          "type": "string",
          "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`"
        },
        "type": {
          "type": "string",
          "enum": [
            "FactoryGitHubConfiguration"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Factory's GitHub repo information."
    },
    "FactoryIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The identity type."
        },
        "userAssignedIdentities": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Definition of all user assigned identities for a factory."
        }
      },
      "required": [
        "type"
      ],
      "description": "Identity properties of the factory resource."
    },
    "FactoryProperties": {
      "type": "object",
      "properties": {
        "encryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Definition of CMK for the factory."
        },
        "globalParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/GlobalParameterSpecification"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Definition of all parameters for an entity."
        },
        "publicNetworkAccess": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether or not public network access is allowed for the data factory."
        },
        "purviewConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/PurviewConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Purview configuration."
        },
        "repoConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/FactoryRepoConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Factory's git repo information."
        }
      },
      "description": "Factory resource properties."
    },
    "FactoryRepoConfiguration": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/FactoryVSTSConfiguration"
        },
        {
          "$ref": "#/definitions/FactoryGitHubConfiguration"
        }
      ],
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Account name."
        },
        "collaborationBranch": {
          "type": "string",
          "description": "Collaboration branch."
        },
        "lastCommitId": {
          "type": "string",
          "description": "Last commit id."
        },
        "repositoryName": {
          "type": "string",
          "description": "Repository name."
        },
        "rootFolder": {
          "type": "string",
          "description": "Root folder."
        }
      },
      "required": [
        "accountName",
        "collaborationBranch",
        "repositoryName",
        "rootFolder"
      ],
      "description": "Factory's git repo information."
    },
    "FactoryVSTSConfiguration": {
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string",
          "description": "VSTS project name."
        },
        "tenantId": {
          "type": "string",
          "description": "VSTS tenant id."
        },
        "type": {
          "type": "string",
          "enum": [
            "FactoryVSTSConfiguration"
          ]
        }
      },
      "required": [
        "projectName",
        "type"
      ],
      "description": "Factory's VSTS repo information."
    },
    "FailActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Fail"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FailActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Fail activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "This activity will fail within its own scope and output a custom error message and error code. The error message and code can provided either as a string literal or as an expression that can be evaluated to a string at runtime. The activity scope can be the whole pipeline or a control activity (e.g. foreach, switch, until), if the fail activity is contained in it."
    },
    "FailActivityTypeProperties": {
      "type": "object",
      "properties": {
        "errorCode": {
          "type": "object",
          "properties": {},
          "description": "The error code that categorizes the error type of the Fail activity. It can be dynamic content that's evaluated to a non empty/blank string at runtime. Type: string (or Expression with resultType string)."
        },
        "message": {
          "type": "object",
          "properties": {},
          "description": "The error message that surfaced in the Fail activity. It can be dynamic content that's evaluated to a non empty/blank string at runtime. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "errorCode",
        "message"
      ],
      "description": "Fail activity properties."
    },
    "FileServerLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "FileServer"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FileServerLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "File system linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "File system linked service."
    },
    "FileServerLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "Host name of the server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "userId": {
          "type": "object",
          "properties": {},
          "description": "User ID to logon the server. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ],
      "description": "File system linked service properties."
    },
    "FileServerLocation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "FileServerLocation"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The location of file server dataset."
    },
    "FileServerReadSettings": {
      "type": "object",
      "properties": {
        "deleteFilesAfterCompletion": {
          "type": "object",
          "properties": {},
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "enablePartitionDiscovery": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether to enable partition discovery."
        },
        "fileFilter": {
          "type": "object",
          "properties": {},
          "description": "Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string)."
        },
        "fileListPath": {
          "type": "object",
          "properties": {},
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "properties": {},
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "properties": {},
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "partitionRootPath": {
          "type": "object",
          "properties": {},
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "FileServerReadSettings"
          ]
        },
        "wildcardFileName": {
          "type": "object",
          "properties": {},
          "description": "FileServer wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "properties": {},
          "description": "FileServer wildcardFolderPath. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "File server read settings."
    },
    "FileServerWriteSettings": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "FileServerWriteSettings"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "File server write settings."
    },
    "FileShareDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "FileShare"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FileShareDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "On-premises file system dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "An on-premises file system dataset."
    },
    "FileShareDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "compression": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetCompression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression method used on a dataset."
        },
        "fileFilter": {
          "type": "object",
          "properties": {},
          "description": "Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string)."
        },
        "fileName": {
          "type": "object",
          "properties": {},
          "description": "The name of the on-premises file system. Type: string (or Expression with resultType string)."
        },
        "folderPath": {
          "type": "object",
          "properties": {},
          "description": "The path of the on-premises file system. Type: string (or Expression with resultType string)."
        },
        "format": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetStorageFormat"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The format definition of a storage."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "properties": {},
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "properties": {},
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        }
      },
      "description": "On-premises file system dataset properties."
    },
    "FileSystemSink": {
      "type": "object",
      "properties": {
        "copyBehavior": {
          "type": "object",
          "properties": {},
          "description": "The type of copy behavior for copy sink."
        },
        "type": {
          "type": "string",
          "enum": [
            "FileSystemSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity file system sink."
    },
    "FileSystemSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "FileSystemSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity file system source."
    },
    "FilterActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Filter"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FilterActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Filter activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Filter and return results from input array based on the conditions."
    },
    "FilterActivityTypeProperties": {
      "type": "object",
      "properties": {
        "condition": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory expression definition."
        },
        "items": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory expression definition."
        }
      },
      "required": [
        "condition",
        "items"
      ],
      "description": "Filter activity properties."
    },
    "Flowlet": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Flowlet"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FlowletTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Flowlet type properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "Data flow flowlet"
    },
    "FlowletTypeProperties": {
      "type": "object",
      "properties": {
        "script": {
          "type": "string",
          "description": "Flowlet script."
        },
        "scriptLines": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Flowlet script lines."
        },
        "sinks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataFlowSink"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of sinks in Flowlet."
        },
        "sources": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataFlowSource"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of sources in Flowlet."
        },
        "transformations": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transformation"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of transformations in Flowlet."
        }
      },
      "description": "Flowlet type properties."
    },
    "ForEachActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ForEach"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ForEachActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "ForEach activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "This activity is used for iterating over a collection and execute given activities."
    },
    "ForEachActivityTypeProperties": {
      "type": "object",
      "properties": {
        "activities": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Activity"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of activities to execute ."
        },
        "batchCount": {
          "oneOf": [
            {
              "type": "integer",
              "maximum": 50
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Batch count to be used for controlling the number of parallel execution (when isSequential is set to false)."
        },
        "isSequential": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Should the loop be executed in sequence or in parallel (max 50)"
        },
        "items": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory expression definition."
        }
      },
      "required": [
        "activities",
        "items"
      ],
      "description": "ForEach activity properties."
    },
    "FormatReadSettings": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/DelimitedTextReadSettings"
        },
        {
          "$ref": "#/definitions/JsonReadSettings"
        },
        {
          "$ref": "#/definitions/XmlReadSettings"
        },
        {
          "$ref": "#/definitions/BinaryReadSettings"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        }
      },
      "description": "Format read settings."
    },
    "FtpReadSettings": {
      "type": "object",
      "properties": {
        "deleteFilesAfterCompletion": {
          "type": "object",
          "properties": {},
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "disableChunking": {
          "type": "object",
          "properties": {},
          "description": "If true, disable parallel reading within each file. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "enablePartitionDiscovery": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether to enable partition discovery."
        },
        "fileListPath": {
          "type": "object",
          "properties": {},
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "partitionRootPath": {
          "type": "object",
          "properties": {},
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "FtpReadSettings"
          ]
        },
        "useBinaryTransfer": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specify whether to use binary transfer mode for FTP stores."
        },
        "wildcardFileName": {
          "type": "object",
          "properties": {},
          "description": "Ftp wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "properties": {},
          "description": "Ftp wildcardFolderPath. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "Ftp read settings."
    },
    "FtpServerLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "FtpServer"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FtpServerLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this linked service type."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "A FTP server Linked Service."
    },
    "FtpServerLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Anonymous"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to be used to connect to the FTP server."
        },
        "enableServerCertificateValidation": {
          "type": "object",
          "properties": {},
          "description": "If true, validate the FTP server SSL certificate when connect over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "If true, connect to the FTP server over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "Host name of the FTP server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port number that the FTP server uses to listen for client connections. Default value is 21. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "Username to logon the FTP server. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ],
      "description": "Properties specific to this linked service type."
    },
    "FtpServerLocation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "FtpServerLocation"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The location of ftp server dataset."
    },
    "GenericDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The table name. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Properties specific to this dataset type."
    },
    "GetMetadataActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "GetMetadata"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GetMetadataActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "GetMetadata activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Activity to get metadata of dataset"
    },
    "GetMetadataActivityTypeProperties": {
      "type": "object",
      "properties": {
        "dataset": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset reference type."
        },
        "fieldList": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Fields of metadata to get from dataset."
        },
        "formatSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/FormatReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Format read settings."
        },
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector read setting."
        }
      },
      "required": [
        "dataset"
      ],
      "description": "GetMetadata activity properties."
    },
    "GitHubClientSecret": {
      "type": "object",
      "properties": {
        "byoaSecretAkvUrl": {
          "type": "string",
          "description": "Bring your own app client secret AKV URL."
        },
        "byoaSecretName": {
          "type": "string",
          "description": "Bring your own app client secret name in AKV."
        }
      },
      "description": "Client secret information for factory's bring your own app repository configuration."
    },
    "GlobalParameterSpecification": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Object",
                "String",
                "Int",
                "Float",
                "Bool",
                "Array"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Global Parameter type."
        },
        "value": {
          "type": "object",
          "properties": {},
          "description": "Value of parameter."
        }
      },
      "required": [
        "type",
        "value"
      ],
      "description": "Definition of a single parameter for an entity."
    },
    "GoogleAdWordsLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "GoogleAdWords"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GoogleAdWordsLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Google AdWords service linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Google AdWords service linked service."
    },
    "GoogleAdWordsLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "ServiceAuthentication",
                "UserAuthentication"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR."
        },
        "clientCustomerID": {
          "type": "object",
          "properties": {},
          "description": "The Client customer ID of the AdWords account that you want to fetch report data for."
        },
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string)."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "connectionProperties": {
          "type": "object",
          "properties": {},
          "description": "Properties used to connect to GoogleAds. It is mutually exclusive with any other properties in the linked service. Type: object."
        },
        "developerToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "email": {
          "type": "object",
          "properties": {},
          "description": "The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "keyFilePath": {
          "type": "object",
          "properties": {},
          "description": "The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR."
        },
        "refreshToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "trustedCertPath": {
          "type": "object",
          "properties": {},
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
        },
        "useSystemTrustStore": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
        }
      },
      "description": "Google AdWords service linked service properties."
    },
    "GoogleAdWordsObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "GoogleAdWordsObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Google AdWords service dataset."
    },
    "GoogleAdWordsSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "GoogleAdWordsSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Google AdWords service source."
    },
    "GoogleBigQueryDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "dataset": {
          "type": "object",
          "properties": {},
          "description": "The database name of the Google BigQuery. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Google BigQuery. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using database + table properties instead."
        }
      },
      "description": "Google BigQuery Dataset Properties"
    },
    "GoogleBigQueryLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "GoogleBigQuery"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GoogleBigQueryLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Google BigQuery service linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Google BigQuery service linked service."
    },
    "GoogleBigQueryLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "additionalProjects": {
          "type": "object",
          "properties": {},
          "description": "A comma-separated list of public BigQuery projects to access."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "ServiceAuthentication",
                "UserAuthentication"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR."
        },
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string)."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "email": {
          "type": "object",
          "properties": {},
          "description": "The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "keyFilePath": {
          "type": "object",
          "properties": {},
          "description": "The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR."
        },
        "project": {
          "type": "object",
          "properties": {},
          "description": "The default BigQuery project to query against."
        },
        "refreshToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "requestGoogleDriveScope": {
          "type": "object",
          "properties": {},
          "description": "Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false."
        },
        "trustedCertPath": {
          "type": "object",
          "properties": {},
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
        },
        "useSystemTrustStore": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
        }
      },
      "required": [
        "authenticationType",
        "project"
      ],
      "description": "Google BigQuery service linked service properties."
    },
    "GoogleBigQueryObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "GoogleBigQueryObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GoogleBigQueryDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Google BigQuery Dataset Properties"
        }
      },
      "required": [
        "type"
      ],
      "description": "Google BigQuery service dataset."
    },
    "GoogleBigQuerySource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "GoogleBigQuerySource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Google BigQuery service source."
    },
    "GoogleCloudStorageLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "GoogleCloudStorage"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GoogleCloudStorageLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Google Cloud Storage linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Google Cloud Storage."
    },
    "GoogleCloudStorageLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accessKeyId": {
          "type": "object",
          "properties": {},
          "description": "The access key identifier of the Google Cloud Storage Identity and Access Management (IAM) user. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "secretAccessKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "serviceUrl": {
          "type": "object",
          "properties": {},
          "description": "This value specifies the endpoint to access with the Google Cloud Storage Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Google Cloud Storage linked service properties."
    },
    "GoogleCloudStorageLocation": {
      "type": "object",
      "properties": {
        "bucketName": {
          "type": "object",
          "properties": {},
          "description": "Specify the bucketName of Google Cloud Storage. Type: string (or Expression with resultType string)"
        },
        "type": {
          "type": "string",
          "enum": [
            "GoogleCloudStorageLocation"
          ]
        },
        "version": {
          "type": "object",
          "properties": {},
          "description": "Specify the version of Google Cloud Storage. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "The location of Google Cloud Storage dataset."
    },
    "GoogleCloudStorageReadSettings": {
      "type": "object",
      "properties": {
        "deleteFilesAfterCompletion": {
          "type": "object",
          "properties": {},
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "enablePartitionDiscovery": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether to enable partition discovery."
        },
        "fileListPath": {
          "type": "object",
          "properties": {},
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "properties": {},
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "properties": {},
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "partitionRootPath": {
          "type": "object",
          "properties": {},
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "prefix": {
          "type": "object",
          "properties": {},
          "description": "The prefix filter for the Google Cloud Storage object name. Type: string (or Expression with resultType string)."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "GoogleCloudStorageReadSettings"
          ]
        },
        "wildcardFileName": {
          "type": "object",
          "properties": {},
          "description": "Google Cloud Storage wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "properties": {},
          "description": "Google Cloud Storage wildcardFolderPath. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "Google Cloud Storage read settings."
    },
    "GreenplumDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of Greenplum. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of Greenplum. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "Greenplum Dataset Properties"
    },
    "GreenplumLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Greenplum"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GreenplumLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Greenplum Database linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Greenplum Database linked service."
    },
    "GreenplumLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "pwd": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        }
      },
      "description": "Greenplum Database linked service properties."
    },
    "GreenplumSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "GreenplumSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Greenplum Database source."
    },
    "GreenplumTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "GreenplumTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GreenplumDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Greenplum Dataset Properties"
        }
      },
      "required": [
        "type"
      ],
      "description": "Greenplum Database dataset."
    },
    "HBaseLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HBase"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HBaseLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HBase server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "HBase server linked service."
    },
    "HBaseLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "allowHostNameCNMismatch": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
        },
        "allowSelfSignedServerCert": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Anonymous",
                "Basic"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication mechanism to use to connect to the HBase server."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "The IP address or host name of the HBase server. (i.e. 192.168.222.160)"
        },
        "httpPath": {
          "type": "object",
          "properties": {},
          "description": "The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)"
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port that the HBase instance uses to listen for client connections. The default value is 9090."
        },
        "trustedCertPath": {
          "type": "object",
          "properties": {},
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name used to connect to the HBase instance."
        }
      },
      "required": [
        "authenticationType",
        "host"
      ],
      "description": "HBase server linked service properties."
    },
    "HBaseObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HBaseObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "HBase server dataset."
    },
    "HBaseSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "HBaseSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity HBase server source."
    },
    "HdfsLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Hdfs"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HdfsLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDFS linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Hadoop Distributed File System (HDFS) linked service."
    },
    "HdfsLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "type": "object",
          "properties": {},
          "description": "Type of authentication used to connect to the HDFS. Possible values are: Anonymous and Windows. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "url": {
          "type": "object",
          "properties": {},
          "description": "The URL of the HDFS service endpoint, e.g. http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "User name for Windows authentication. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ],
      "description": "HDFS linked service properties."
    },
    "HdfsLocation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HdfsLocation"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The location of HDFS."
    },
    "HdfsReadSettings": {
      "type": "object",
      "properties": {
        "deleteFilesAfterCompletion": {
          "type": "object",
          "properties": {},
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "distcpSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/DistcpSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Distcp settings."
        },
        "enablePartitionDiscovery": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether to enable partition discovery."
        },
        "fileListPath": {
          "type": "object",
          "properties": {},
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "properties": {},
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "properties": {},
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "partitionRootPath": {
          "type": "object",
          "properties": {},
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "HdfsReadSettings"
          ]
        },
        "wildcardFileName": {
          "type": "object",
          "properties": {},
          "description": "HDFS wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "properties": {},
          "description": "HDFS wildcardFolderPath. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "HDFS read settings."
    },
    "HdfsSource": {
      "type": "object",
      "properties": {
        "distcpSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/DistcpSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Distcp settings."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "HdfsSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity HDFS source."
    },
    "HDInsightHiveActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HDInsightHive"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HDInsightHiveActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDInsight Hive activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "HDInsight Hive activity type."
    },
    "HDInsightHiveActivityTypeProperties": {
      "type": "object",
      "properties": {
        "arguments": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "User specified arguments to HDInsightActivity."
        },
        "defines": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allows user to specify defines for Hive job request."
        },
        "getDebugInfo": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Always",
                "Failure"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Debug info option."
        },
        "queryTimeout": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Query timeout value (in minutes).  Effective when the HDInsight cluster is with ESP (Enterprise Security Package)"
        },
        "scriptLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "scriptPath": {
          "type": "object",
          "properties": {},
          "description": "Script path. Type: string (or Expression with resultType string)."
        },
        "storageLinkedServices": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedServiceReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Storage linked service references."
        },
        "variables": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "User specified arguments under hivevar namespace."
        }
      },
      "description": "HDInsight Hive activity properties."
    },
    "HDInsightLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HDInsight"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HDInsightLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDInsight linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "HDInsight linked service."
    },
    "HDInsightLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clusterUri": {
          "type": "object",
          "properties": {},
          "description": "HDInsight cluster URI. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "fileSystem": {
          "type": "object",
          "properties": {},
          "description": "Specify the FileSystem if the main storage for the HDInsight is ADLS Gen2. Type: string (or Expression with resultType string)."
        },
        "hcatalogLinkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "isEspEnabled": {
          "type": "object",
          "properties": {},
          "description": "Specify if the HDInsight is created with ESP (Enterprise Security Package). Type: Boolean."
        },
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "HDInsight cluster user name. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "clusterUri"
      ],
      "description": "HDInsight linked service properties."
    },
    "HDInsightMapReduceActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HDInsightMapReduce"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HDInsightMapReduceActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDInsight MapReduce activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "HDInsight MapReduce activity type."
    },
    "HDInsightMapReduceActivityTypeProperties": {
      "type": "object",
      "properties": {
        "arguments": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "User specified arguments to HDInsightActivity."
        },
        "className": {
          "type": "object",
          "properties": {},
          "description": "Class name. Type: string (or Expression with resultType string)."
        },
        "defines": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allows user to specify defines for the MapReduce job request."
        },
        "getDebugInfo": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Always",
                "Failure"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Debug info option."
        },
        "jarFilePath": {
          "type": "object",
          "properties": {},
          "description": "Jar path. Type: string (or Expression with resultType string)."
        },
        "jarLibs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Jar libs."
        },
        "jarLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "storageLinkedServices": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedServiceReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Storage linked service references."
        }
      },
      "required": [
        "className",
        "jarFilePath"
      ],
      "description": "HDInsight MapReduce activity properties."
    },
    "HDInsightOnDemandLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HDInsightOnDemand"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HDInsightOnDemandLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDInsight ondemand linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "HDInsight ondemand linked service."
    },
    "HDInsightOnDemandLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "additionalLinkedServiceNames": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedServiceReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf."
        },
        "clusterNamePrefix": {
          "type": "object",
          "properties": {},
          "description": "The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string)."
        },
        "clusterPassword": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "clusterResourceGroup": {
          "type": "object",
          "properties": {},
          "description": "The resource group where the cluster belongs. Type: string (or Expression with resultType string)."
        },
        "clusterSize": {
          "type": "object",
          "properties": {},
          "description": "Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string)."
        },
        "clusterSshPassword": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "clusterSshUserName": {
          "type": "object",
          "properties": {},
          "description": "The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string)."
        },
        "clusterType": {
          "type": "object",
          "properties": {},
          "description": "The cluster type. Type: string (or Expression with resultType string)."
        },
        "clusterUserName": {
          "type": "object",
          "properties": {},
          "description": "The username to access the cluster. Type: string (or Expression with resultType string)."
        },
        "coreConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "dataNodeSize": {
          "type": "object",
          "properties": {},
          "description": "Specifies the size of the data node for the HDInsight cluster."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "hBaseConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster."
        },
        "hcatalogLinkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "hdfsConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster."
        },
        "headNodeSize": {
          "type": "object",
          "properties": {},
          "description": "Specifies the size of the head node for the HDInsight cluster."
        },
        "hiveConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster."
        },
        "hostSubscriptionId": {
          "type": "object",
          "properties": {},
          "description": "The customer’s subscription to host the cluster. Type: string (or Expression with resultType string)."
        },
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "mapReduceConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster."
        },
        "oozieConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster."
        },
        "scriptActions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScriptAction"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Custom script actions to run on HDI ondemand cluster once it's up. Please refer to https://docs.microsoft.com/en-us/azure/hdinsight/hdinsight-hadoop-customize-cluster-linux?toc=%2Fen-us%2Fazure%2Fhdinsight%2Fr-server%2FTOC.json&bc=%2Fen-us%2Fazure%2Fbread%2Ftoc.json#understanding-script-actions."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "sparkVersion": {
          "type": "object",
          "properties": {},
          "description": "The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string)."
        },
        "stormConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster."
        },
        "subnetName": {
          "type": "object",
          "properties": {},
          "description": "The ARM resource ID for the subnet in the vNet. If virtualNetworkId was specified, then this property is required. Type: string (or Expression with resultType string)."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "timeToLive": {
          "type": "object",
          "properties": {},
          "description": "The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string)."
        },
        "version": {
          "type": "object",
          "properties": {},
          "description": "Version of the HDInsight cluster.  Type: string (or Expression with resultType string)."
        },
        "virtualNetworkId": {
          "type": "object",
          "properties": {},
          "description": "The ARM resource ID for the vNet to which the cluster should be joined after creation. Type: string (or Expression with resultType string)."
        },
        "yarnConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster."
        },
        "zookeeperNodeSize": {
          "type": "object",
          "properties": {},
          "description": "Specifies the size of the Zoo Keeper node for the HDInsight cluster."
        }
      },
      "required": [
        "clusterResourceGroup",
        "clusterSize",
        "hostSubscriptionId",
        "linkedServiceName",
        "tenant",
        "timeToLive",
        "version"
      ],
      "description": "HDInsight ondemand linked service properties."
    },
    "HDInsightPigActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HDInsightPig"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HDInsightPigActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDInsight Pig activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "HDInsight Pig activity type."
    },
    "HDInsightPigActivityTypeProperties": {
      "type": "object",
      "properties": {
        "arguments": {
          "type": "object",
          "properties": {},
          "description": "User specified arguments to HDInsightActivity. Type: array (or Expression with resultType array)."
        },
        "defines": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allows user to specify defines for Pig job request."
        },
        "getDebugInfo": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Always",
                "Failure"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Debug info option."
        },
        "scriptLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "scriptPath": {
          "type": "object",
          "properties": {},
          "description": "Script path. Type: string (or Expression with resultType string)."
        },
        "storageLinkedServices": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedServiceReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Storage linked service references."
        }
      },
      "description": "HDInsight Pig activity properties."
    },
    "HDInsightSparkActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HDInsightSpark"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HDInsightSparkActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDInsight spark activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "HDInsight Spark activity."
    },
    "HDInsightSparkActivityTypeProperties": {
      "type": "object",
      "properties": {
        "arguments": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The user-specified arguments to HDInsightSparkActivity."
        },
        "className": {
          "type": "string",
          "description": "The application's Java/Spark main class."
        },
        "entryFilePath": {
          "type": "object",
          "properties": {},
          "description": "The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string)."
        },
        "getDebugInfo": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Always",
                "Failure"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Debug info option."
        },
        "proxyUser": {
          "type": "object",
          "properties": {},
          "description": "The user to impersonate that will execute the job. Type: string (or Expression with resultType string)."
        },
        "rootPath": {
          "type": "object",
          "properties": {},
          "description": "The root path in 'sparkJobLinkedService' for all the job’s files. Type: string (or Expression with resultType string)."
        },
        "sparkConfig": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Spark configuration property."
        },
        "sparkJobLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        }
      },
      "required": [
        "entryFilePath",
        "rootPath"
      ],
      "description": "HDInsight spark activity properties."
    },
    "HDInsightStreamingActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HDInsightStreaming"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HDInsightStreamingActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDInsight streaming activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "HDInsight streaming activity type."
    },
    "HDInsightStreamingActivityTypeProperties": {
      "type": "object",
      "properties": {
        "arguments": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "User specified arguments to HDInsightActivity."
        },
        "combiner": {
          "type": "object",
          "properties": {},
          "description": "Combiner executable name. Type: string (or Expression with resultType string)."
        },
        "commandEnvironment": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Command line environment values."
        },
        "defines": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allows user to specify defines for streaming job request."
        },
        "fileLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "filePaths": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Paths to streaming job files. Can be directories."
        },
        "getDebugInfo": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Always",
                "Failure"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Debug info option."
        },
        "input": {
          "type": "object",
          "properties": {},
          "description": "Input blob path. Type: string (or Expression with resultType string)."
        },
        "mapper": {
          "type": "object",
          "properties": {},
          "description": "Mapper executable name. Type: string (or Expression with resultType string)."
        },
        "output": {
          "type": "object",
          "properties": {},
          "description": "Output blob path. Type: string (or Expression with resultType string)."
        },
        "reducer": {
          "type": "object",
          "properties": {},
          "description": "Reducer executable name. Type: string (or Expression with resultType string)."
        },
        "storageLinkedServices": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedServiceReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Storage linked service references."
        }
      },
      "required": [
        "filePaths",
        "input",
        "mapper",
        "output",
        "reducer"
      ],
      "description": "HDInsight streaming activity properties."
    },
    "HiveDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the Hive. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Hive. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "Hive Properties"
    },
    "HiveLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Hive"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HiveLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Hive Server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Hive Server linked service."
    },
    "HiveLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "allowHostNameCNMismatch": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
        },
        "allowSelfSignedServerCert": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Anonymous",
                "Username",
                "UsernameAndPassword",
                "WindowsAzureHDInsightService"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication method used to access the Hive server."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable)."
        },
        "httpPath": {
          "type": "object",
          "properties": {},
          "description": "The partial URL corresponding to the Hive server."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port that the Hive server uses to listen for client connections."
        },
        "serverType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "HiveServer1",
                "HiveServer2",
                "HiveThriftServer"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of Hive server."
        },
        "serviceDiscoveryMode": {
          "type": "object",
          "properties": {},
          "description": "true to indicate using the ZooKeeper service, false not."
        },
        "thriftTransportProtocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Binary",
                "SASL",
                "HTTP "
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The transport protocol to use in the Thrift layer."
        },
        "trustedCertPath": {
          "type": "object",
          "properties": {},
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
        },
        "useNativeQuery": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name that you use to access Hive Server."
        },
        "useSystemTrustStore": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
        },
        "zooKeeperNameSpace": {
          "type": "object",
          "properties": {},
          "description": "The namespace on ZooKeeper under which Hive Server 2 nodes are added."
        }
      },
      "required": [
        "authenticationType",
        "host"
      ],
      "description": "Hive Server linked service properties."
    },
    "HiveObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HiveObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HiveDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Hive Properties"
        }
      },
      "required": [
        "type"
      ],
      "description": "Hive Server dataset."
    },
    "HiveSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "HiveSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Hive Server source."
    },
    "HttpDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HttpFile"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HttpDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "A file in an HTTP web server."
    },
    "HttpDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "additionalHeaders": {
          "type": "object",
          "properties": {},
          "description": "The headers for the HTTP Request. e.g. request-header-name-1:request-header-value-1\r\n...\r\nrequest-header-name-n:request-header-value-n Type: string (or Expression with resultType string)."
        },
        "compression": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetCompression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression method used on a dataset."
        },
        "format": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetStorageFormat"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The format definition of a storage."
        },
        "relativeUrl": {
          "type": "object",
          "properties": {},
          "description": "The relative URL based on the URL in the HttpLinkedService refers to an HTTP file Type: string (or Expression with resultType string)."
        },
        "requestBody": {
          "type": "object",
          "properties": {},
          "description": "The body for the HTTP request. Type: string (or Expression with resultType string)."
        },
        "requestMethod": {
          "type": "object",
          "properties": {},
          "description": "The HTTP method for the HTTP request. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Properties specific to this dataset type."
    },
    "HttpLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HttpServer"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HttpLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this linked service type."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for an HTTP source."
    },
    "HttpLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Anonymous",
                "Digest",
                "Windows",
                "ClientCertificate"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to be used to connect to the HTTP server."
        },
        "authHeaders": {
          "type": "object",
          "properties": {},
          "description": "The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object)."
        },
        "certThumbprint": {
          "type": "object",
          "properties": {},
          "description": "Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string)."
        },
        "embeddedCertData": {
          "type": "object",
          "properties": {},
          "description": "Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string)."
        },
        "enableServerCertificateValidation": {
          "type": "object",
          "properties": {},
          "description": "If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "url": {
          "type": "object",
          "properties": {},
          "description": "The base URL of the HTTP endpoint, e.g. https://www.microsoft.com. Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ],
      "description": "Properties specific to this linked service type."
    },
    "HttpReadSettings": {
      "type": "object",
      "properties": {
        "additionalHeaders": {
          "type": "object",
          "properties": {},
          "description": "The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string)."
        },
        "enablePartitionDiscovery": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether to enable partition discovery."
        },
        "partitionRootPath": {
          "type": "object",
          "properties": {},
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "requestBody": {
          "type": "object",
          "properties": {},
          "description": "The HTTP request body to the RESTful API if requestMethod is POST. Type: string (or Expression with resultType string)."
        },
        "requestMethod": {
          "type": "object",
          "properties": {},
          "description": "The HTTP method used to call the RESTful API. The default is GET. Type: string (or Expression with resultType string)."
        },
        "requestTimeout": {
          "type": "object",
          "properties": {},
          "description": "Specifies the timeout for a HTTP client to get HTTP response from HTTP server."
        },
        "type": {
          "type": "string",
          "enum": [
            "HttpReadSettings"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Sftp read settings."
    },
    "HttpServerLocation": {
      "type": "object",
      "properties": {
        "relativeUrl": {
          "type": "object",
          "properties": {},
          "description": "Specify the relativeUrl of http server. Type: string (or Expression with resultType string)"
        },
        "type": {
          "type": "string",
          "enum": [
            "HttpServerLocation"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The location of http server."
    },
    "HttpSource": {
      "type": "object",
      "properties": {
        "httpRequestTimeout": {
          "type": "object",
          "properties": {},
          "description": "Specifies the timeout for a HTTP client to get HTTP response from HTTP server. The default value is equivalent to System.Net.HttpWebRequest.Timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "type": {
          "type": "string",
          "enum": [
            "HttpSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for an HTTP file."
    },
    "HubspotLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Hubspot"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HubspotLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Hubspot Service linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Hubspot Service linked service."
    },
    "HubspotLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accessToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client ID associated with your Hubspot application."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "refreshToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        }
      },
      "required": [
        "clientId"
      ],
      "description": "Hubspot Service linked service properties."
    },
    "HubspotObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HubspotObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Hubspot Service dataset."
    },
    "HubspotSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "HubspotSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Hubspot Service source."
    },
    "IfConditionActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "IfCondition"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IfConditionActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "IfCondition activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "This activity evaluates a boolean expression and executes either the activities under the ifTrueActivities property or the ifFalseActivities property depending on the result of the expression."
    },
    "IfConditionActivityTypeProperties": {
      "type": "object",
      "properties": {
        "expression": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory expression definition."
        },
        "ifFalseActivities": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Activity"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of activities to execute if expression is evaluated to false. This is an optional property and if not provided, the activity will exit without any action."
        },
        "ifTrueActivities": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Activity"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of activities to execute if expression is evaluated to true. This is an optional property and if not provided, the activity will exit without any action."
        }
      },
      "required": [
        "expression"
      ],
      "description": "IfCondition activity properties."
    },
    "ImpalaDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the Impala. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Impala. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "Impala Dataset Properties"
    },
    "ImpalaLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Impala"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ImpalaLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Impala server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Impala server linked service."
    },
    "ImpalaLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "allowHostNameCNMismatch": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
        },
        "allowSelfSignedServerCert": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Anonymous",
                "SASLUsername",
                "UsernameAndPassword"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to use."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "The IP address or host name of the Impala server. (i.e. 192.168.222.160)"
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port that the Impala server uses to listen for client connections. The default value is 21050."
        },
        "trustedCertPath": {
          "type": "object",
          "properties": {},
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name used to access the Impala server. The default value is anonymous when using SASLUsername."
        },
        "useSystemTrustStore": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
        }
      },
      "required": [
        "authenticationType",
        "host"
      ],
      "description": "Impala server linked service properties."
    },
    "ImpalaObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ImpalaObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ImpalaDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Impala Dataset Properties"
        }
      },
      "required": [
        "type"
      ],
      "description": "Impala server dataset."
    },
    "ImpalaSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "ImpalaSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Impala server source."
    },
    "InformixLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Informix"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/InformixLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Informix linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Informix linked service."
    },
    "InformixLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "type": "object",
          "properties": {},
          "description": "Type of authentication used to connect to the Informix as ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string)."
        },
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "User name for Basic authentication. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "Informix linked service properties."
    },
    "InformixSink": {
      "type": "object",
      "properties": {
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "A query to execute before starting the copy. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "InformixSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Informix sink."
    },
    "InformixSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "InformixSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for Informix."
    },
    "InformixTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "InformixTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/InformixTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Informix table dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Informix table dataset."
    },
    "InformixTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The Informix table name. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Informix table dataset properties."
    },
    "IntegrationRuntime": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ManagedIntegrationRuntime"
        },
        {
          "$ref": "#/definitions/SelfHostedIntegrationRuntime"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "description": {
          "type": "string",
          "description": "Integration runtime description."
        }
      },
      "description": "Azure Data Factory nested object which serves as a compute resource for activities."
    },
    "IntegrationRuntimeComputeProperties": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "dataFlowProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeDataFlowProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Data flow properties for managed integration runtime."
        },
        "location": {
          "type": "string",
          "description": "The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities"
        },
        "maxParallelExecutionsPerNode": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Maximum parallel executions count per node for managed integration runtime."
        },
        "nodeSize": {
          "type": "string",
          "description": "The node size requirement to managed integration runtime."
        },
        "numberOfNodes": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The required number of nodes for managed integration runtime."
        },
        "vNetProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeVNetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "VNet properties for managed integration runtime."
        }
      },
      "description": "The compute resource properties for managed integration runtime."
    },
    "IntegrationRuntimeCustomerVirtualNetwork": {
      "type": "object",
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "The ID of subnet to which Azure-SSIS integration runtime will join."
        }
      },
      "description": "The definition and properties of virtual network to which Azure-SSIS integration runtime will join."
    },
    "IntegrationRuntimeCustomSetupScriptProperties": {
      "type": "object",
      "properties": {
        "blobContainerUri": {
          "type": "string",
          "description": "The URI of the Azure blob container that contains the custom setup script."
        },
        "sasToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecureString"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls."
        }
      },
      "description": "Custom setup script properties for a managed dedicated integration runtime."
    },
    "IntegrationRuntimeDataFlowProperties": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "cleanup": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Cluster will not be recycled and it will be used in next data flow activity run until TTL (time to live) is reached if this is set as false. Default is true."
        },
        "computeType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "General",
                "MemoryOptimized",
                "ComputeOptimized"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Compute type of the cluster which will execute data flow job."
        },
        "coreCount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272."
        },
        "timeToLive": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Time to live (in minutes) setting of the cluster which will execute data flow job."
        }
      },
      "description": "Data flow properties for managed integration runtime."
    },
    "IntegrationRuntimeDataProxyProperties": {
      "type": "object",
      "properties": {
        "connectVia": {
          "oneOf": [
            {
              "$ref": "#/definitions/EntityReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The entity reference."
        },
        "path": {
          "type": "string",
          "description": "The path to contain the staged data in the Blob storage."
        },
        "stagingLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/EntityReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The entity reference."
        }
      },
      "description": "Data proxy properties for a managed dedicated integration runtime."
    },
    "IntegrationRuntimeReference": {
      "type": "object",
      "properties": {
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An object mapping parameter names to argument values."
        },
        "referenceName": {
          "type": "string",
          "description": "Reference integration runtime name."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "IntegrationRuntimeReference"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Type of integration runtime."
        }
      },
      "required": [
        "referenceName",
        "type"
      ],
      "description": "Integration runtime reference type."
    },
    "IntegrationRuntimeSsisCatalogInfo": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "catalogAdminPassword": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecureString"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls."
        },
        "catalogAdminUserName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "description": "The administrator user name of catalog database."
        },
        "catalogPricingTier": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Standard",
                "Premium",
                "PremiumRS"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/."
        },
        "catalogServerEndpoint": {
          "type": "string",
          "description": "The catalog database server URL."
        },
        "dualStandbyPairName": {
          "type": "string",
          "description": "The dual standby pair name of Azure-SSIS Integration Runtimes to support SSISDB failover."
        }
      },
      "description": "Catalog information for managed dedicated integration runtime."
    },
    "IntegrationRuntimeSsisProperties": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "catalogInfo": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeSsisCatalogInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Catalog information for managed dedicated integration runtime."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "customSetupScriptProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeCustomSetupScriptProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Custom setup script properties for a managed dedicated integration runtime."
        },
        "dataProxyProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeDataProxyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Data proxy properties for a managed dedicated integration runtime."
        },
        "edition": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Standard",
                "Enterprise"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The edition for the SSIS Integration Runtime."
        },
        "expressCustomSetupProperties": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomSetupBase"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Custom setup without script properties for a SSIS integration runtime."
        },
        "licenseType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "BasePrice",
                "LicenseIncluded"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "License type for bringing your own license scenario."
        },
        "packageStores": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PackageStore"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Package stores for the SSIS Integration Runtime."
        }
      },
      "description": "SSIS properties for managed integration runtime."
    },
    "IntegrationRuntimeVNetProperties": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "publicIPs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource IDs of the public IP addresses that this integration runtime will use."
        },
        "subnet": {
          "type": "string",
          "description": "The name of the subnet this integration runtime will join."
        },
        "subnetId": {
          "type": "string",
          "description": "The ID of subnet, to which this Azure-SSIS integration runtime will be joined."
        },
        "vNetId": {
          "type": "string",
          "description": "The ID of the VNet that this integration runtime will join."
        }
      },
      "description": "VNet properties for managed integration runtime."
    },
    "JiraLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Jira"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JiraLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Jira Service linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Jira Service linked service."
    },
    "JiraLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "The IP address or host name of the Jira service. (e.g. jira.example.com)"
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name that you use to access Jira Service."
        }
      },
      "required": [
        "host",
        "username"
      ],
      "description": "Jira Service linked service properties."
    },
    "JiraObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JiraObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Jira Service dataset."
    },
    "JiraSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "JiraSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Jira Service source."
    },
    "JsonDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Json"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Json dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "Json dataset."
    },
    "JsonDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "compression": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetCompression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression method used on a dataset."
        },
        "encodingName": {
          "type": "object",
          "properties": {},
          "description": "The code page name of the preferred encoding. If not specified, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string)."
        },
        "location": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset location."
        }
      },
      "required": [
        "location"
      ],
      "description": "Json dataset properties."
    },
    "JsonFormat": {
      "type": "object",
      "properties": {
        "encodingName": {
          "type": "object",
          "properties": {},
          "description": "The code page name of the preferred encoding. If not provided, the default value is 'utf-8', unless the byte order mark (BOM) denotes another Unicode encoding. The full list of supported values can be found in the 'Name' column of the table of encodings in the following reference: https://go.microsoft.com/fwlink/?linkid=861078. Type: string (or Expression with resultType string)."
        },
        "filePattern": {
          "type": "object",
          "properties": {},
          "description": "File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive."
        },
        "jsonNodeReference": {
          "type": "object",
          "properties": {},
          "description": "The JSONPath of the JSON array element to be flattened. Example: \"$.ArrayPath\". Type: string (or Expression with resultType string)."
        },
        "jsonPathDefinition": {
          "type": "object",
          "properties": {},
          "description": "The JSONPath definition for each column mapping with a customized column name to extract data from JSON file. For fields under root object, start with \"$\"; for fields inside the array chosen by jsonNodeReference property, start from the array element. Example: {\"Column1\": \"$.Column1Path\", \"Column2\": \"Column2PathInArray\"}. Type: object (or Expression with resultType object)."
        },
        "nestingSeparator": {
          "type": "object",
          "properties": {},
          "description": "The character used to separate nesting levels. Default value is '.' (dot). Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "JsonFormat"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The data stored in JSON format."
    },
    "JsonReadSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "compressionProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CompressionReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Compression read settings."
        },
        "type": {
          "type": "string",
          "enum": [
            "JsonReadSettings"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Json read settings."
    },
    "JsonSink": {
      "type": "object",
      "properties": {
        "formatSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonWriteSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Json write settings."
        },
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreWriteSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector write settings."
        },
        "type": {
          "type": "string",
          "enum": [
            "JsonSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Json sink."
    },
    "JsonSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "formatSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Json read settings."
        },
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector read setting."
        },
        "type": {
          "type": "string",
          "enum": [
            "JsonSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Json source."
    },
    "JsonWriteSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "filePattern": {
          "type": "object",
          "properties": {},
          "description": "File pattern of JSON. This setting controls the way a collection of JSON objects will be treated. The default value is 'setOfObjects'. It is case-sensitive."
        }
      },
      "description": "Json write settings."
    },
    "LicensedComponentSetupTypeProperties": {
      "type": "object",
      "properties": {
        "componentName": {
          "type": "string",
          "description": "The name of the 3rd party component."
        },
        "licenseKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        }
      },
      "required": [
        "componentName"
      ],
      "description": "Installation of licensed component setup type properties."
    },
    "LinkedIntegrationRuntimeKeyAuthorization": {
      "type": "object",
      "properties": {
        "authorizationType": {
          "type": "string",
          "enum": [
            "Key"
          ]
        },
        "key": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecureString"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls."
        }
      },
      "required": [
        "authorizationType",
        "key"
      ],
      "description": "The key authorization type integration runtime."
    },
    "LinkedIntegrationRuntimeRbacAuthorization": {
      "type": "object",
      "properties": {
        "authorizationType": {
          "type": "string",
          "enum": [
            "RBAC"
          ]
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "resourceId": {
          "type": "string",
          "description": "The resource identifier of the integration runtime to be shared."
        }
      },
      "required": [
        "authorizationType",
        "resourceId"
      ],
      "description": "The role based access control (RBAC) authorization type integration runtime."
    },
    "LinkedIntegrationRuntimeType": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/LinkedIntegrationRuntimeKeyAuthorization"
        },
        {
          "$ref": "#/definitions/LinkedIntegrationRuntimeRbacAuthorization"
        }
      ],
      "properties": {},
      "description": "The base definition of a linked integration runtime."
    },
    "LinkedService": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/AzureStorageLinkedService"
        },
        {
          "$ref": "#/definitions/AzureBlobStorageLinkedService"
        },
        {
          "$ref": "#/definitions/AzureTableStorageLinkedService"
        },
        {
          "$ref": "#/definitions/AzureSqlDWLinkedService"
        },
        {
          "$ref": "#/definitions/SqlServerLinkedService"
        },
        {
          "$ref": "#/definitions/AmazonRdsForSqlServerLinkedService"
        },
        {
          "$ref": "#/definitions/AzureSqlDatabaseLinkedService"
        },
        {
          "$ref": "#/definitions/AzureSqlMILinkedService"
        },
        {
          "$ref": "#/definitions/AzureBatchLinkedService"
        },
        {
          "$ref": "#/definitions/AzureKeyVaultLinkedService"
        },
        {
          "$ref": "#/definitions/CosmosDbLinkedService"
        },
        {
          "$ref": "#/definitions/DynamicsLinkedService"
        },
        {
          "$ref": "#/definitions/DynamicsCrmLinkedService"
        },
        {
          "$ref": "#/definitions/CommonDataServiceForAppsLinkedService"
        },
        {
          "$ref": "#/definitions/HDInsightLinkedService"
        },
        {
          "$ref": "#/definitions/FileServerLinkedService"
        },
        {
          "$ref": "#/definitions/AzureFileStorageLinkedService"
        },
        {
          "$ref": "#/definitions/AmazonS3CompatibleLinkedService"
        },
        {
          "$ref": "#/definitions/OracleCloudStorageLinkedService"
        },
        {
          "$ref": "#/definitions/GoogleCloudStorageLinkedService"
        },
        {
          "$ref": "#/definitions/OracleLinkedService"
        },
        {
          "$ref": "#/definitions/AmazonRdsForOracleLinkedService"
        },
        {
          "$ref": "#/definitions/AzureMySqlLinkedService"
        },
        {
          "$ref": "#/definitions/MySqlLinkedService"
        },
        {
          "$ref": "#/definitions/PostgreSqlLinkedService"
        },
        {
          "$ref": "#/definitions/SybaseLinkedService"
        },
        {
          "$ref": "#/definitions/Db2LinkedService"
        },
        {
          "$ref": "#/definitions/TeradataLinkedService"
        },
        {
          "$ref": "#/definitions/AzureMLLinkedService"
        },
        {
          "$ref": "#/definitions/AzureMLServiceLinkedService"
        },
        {
          "$ref": "#/definitions/OdbcLinkedService"
        },
        {
          "$ref": "#/definitions/InformixLinkedService"
        },
        {
          "$ref": "#/definitions/MicrosoftAccessLinkedService"
        },
        {
          "$ref": "#/definitions/HdfsLinkedService"
        },
        {
          "$ref": "#/definitions/ODataLinkedService"
        },
        {
          "$ref": "#/definitions/WebLinkedService"
        },
        {
          "$ref": "#/definitions/CassandraLinkedService"
        },
        {
          "$ref": "#/definitions/MongoDbLinkedService"
        },
        {
          "$ref": "#/definitions/MongoDbAtlasLinkedService"
        },
        {
          "$ref": "#/definitions/MongoDbV2LinkedService"
        },
        {
          "$ref": "#/definitions/CosmosDbMongoDbApiLinkedService"
        },
        {
          "$ref": "#/definitions/AzureDataLakeStoreLinkedService"
        },
        {
          "$ref": "#/definitions/AzureBlobFSLinkedService"
        },
        {
          "$ref": "#/definitions/Office365LinkedService"
        },
        {
          "$ref": "#/definitions/SalesforceLinkedService"
        },
        {
          "$ref": "#/definitions/SalesforceServiceCloudLinkedService"
        },
        {
          "$ref": "#/definitions/SapCloudForCustomerLinkedService"
        },
        {
          "$ref": "#/definitions/SapEccLinkedService"
        },
        {
          "$ref": "#/definitions/SapOpenHubLinkedService"
        },
        {
          "$ref": "#/definitions/SapOdpLinkedService"
        },
        {
          "$ref": "#/definitions/RestServiceLinkedService"
        },
        {
          "$ref": "#/definitions/TeamDeskLinkedService"
        },
        {
          "$ref": "#/definitions/QuickbaseLinkedService"
        },
        {
          "$ref": "#/definitions/SmartsheetLinkedService"
        },
        {
          "$ref": "#/definitions/ZendeskLinkedService"
        },
        {
          "$ref": "#/definitions/DataworldLinkedService"
        },
        {
          "$ref": "#/definitions/AppFiguresLinkedService"
        },
        {
          "$ref": "#/definitions/AsanaLinkedService"
        },
        {
          "$ref": "#/definitions/TwilioLinkedService"
        },
        {
          "$ref": "#/definitions/AmazonS3LinkedService"
        },
        {
          "$ref": "#/definitions/AmazonRedshiftLinkedService"
        },
        {
          "$ref": "#/definitions/CustomDataSourceLinkedService"
        },
        {
          "$ref": "#/definitions/AzureSearchLinkedService"
        },
        {
          "$ref": "#/definitions/HttpLinkedService"
        },
        {
          "$ref": "#/definitions/FtpServerLinkedService"
        },
        {
          "$ref": "#/definitions/SftpServerLinkedService"
        },
        {
          "$ref": "#/definitions/SapBWLinkedService"
        },
        {
          "$ref": "#/definitions/SapHanaLinkedService"
        },
        {
          "$ref": "#/definitions/AmazonMWSLinkedService"
        },
        {
          "$ref": "#/definitions/AzurePostgreSqlLinkedService"
        },
        {
          "$ref": "#/definitions/ConcurLinkedService"
        },
        {
          "$ref": "#/definitions/CouchbaseLinkedService"
        },
        {
          "$ref": "#/definitions/DrillLinkedService"
        },
        {
          "$ref": "#/definitions/EloquaLinkedService"
        },
        {
          "$ref": "#/definitions/GoogleBigQueryLinkedService"
        },
        {
          "$ref": "#/definitions/GreenplumLinkedService"
        },
        {
          "$ref": "#/definitions/HBaseLinkedService"
        },
        {
          "$ref": "#/definitions/HiveLinkedService"
        },
        {
          "$ref": "#/definitions/HubspotLinkedService"
        },
        {
          "$ref": "#/definitions/ImpalaLinkedService"
        },
        {
          "$ref": "#/definitions/JiraLinkedService"
        },
        {
          "$ref": "#/definitions/MagentoLinkedService"
        },
        {
          "$ref": "#/definitions/MariaDBLinkedService"
        },
        {
          "$ref": "#/definitions/AzureMariaDBLinkedService"
        },
        {
          "$ref": "#/definitions/MarketoLinkedService"
        },
        {
          "$ref": "#/definitions/PaypalLinkedService"
        },
        {
          "$ref": "#/definitions/PhoenixLinkedService"
        },
        {
          "$ref": "#/definitions/PrestoLinkedService"
        },
        {
          "$ref": "#/definitions/QuickBooksLinkedService"
        },
        {
          "$ref": "#/definitions/ServiceNowLinkedService"
        },
        {
          "$ref": "#/definitions/ShopifyLinkedService"
        },
        {
          "$ref": "#/definitions/SparkLinkedService"
        },
        {
          "$ref": "#/definitions/SquareLinkedService"
        },
        {
          "$ref": "#/definitions/XeroLinkedService"
        },
        {
          "$ref": "#/definitions/ZohoLinkedService"
        },
        {
          "$ref": "#/definitions/VerticaLinkedService"
        },
        {
          "$ref": "#/definitions/NetezzaLinkedService"
        },
        {
          "$ref": "#/definitions/SalesforceMarketingCloudLinkedService"
        },
        {
          "$ref": "#/definitions/HDInsightOnDemandLinkedService"
        },
        {
          "$ref": "#/definitions/AzureDataLakeAnalyticsLinkedService"
        },
        {
          "$ref": "#/definitions/AzureDatabricksLinkedService"
        },
        {
          "$ref": "#/definitions/AzureDatabricksDeltaLakeLinkedService"
        },
        {
          "$ref": "#/definitions/ResponsysLinkedService"
        },
        {
          "$ref": "#/definitions/DynamicsAXLinkedService"
        },
        {
          "$ref": "#/definitions/OracleServiceCloudLinkedService"
        },
        {
          "$ref": "#/definitions/GoogleAdWordsLinkedService"
        },
        {
          "$ref": "#/definitions/SapTableLinkedService"
        },
        {
          "$ref": "#/definitions/AzureDataExplorerLinkedService"
        },
        {
          "$ref": "#/definitions/AzureFunctionLinkedService"
        },
        {
          "$ref": "#/definitions/SnowflakeLinkedService"
        },
        {
          "$ref": "#/definitions/SharePointOnlineListLinkedService"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "annotations": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of tags that can be used for describing the linked service."
        },
        "connectVia": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Integration runtime reference type."
        },
        "description": {
          "type": "string",
          "description": "Linked service description."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ParameterSpecification"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Definition of all parameters for an entity."
        }
      },
      "description": "The nested object which contains the information and credential which can be used to connect with related store or compute resource."
    },
    "LinkedServiceReference": {
      "type": "object",
      "properties": {
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An object mapping parameter names to argument values."
        },
        "referenceName": {
          "type": "string",
          "description": "Reference LinkedService name."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "LinkedServiceReference"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        }
      },
      "required": [
        "referenceName",
        "type"
      ],
      "description": "Linked service reference type."
    },
    "LogLocationSettings": {
      "type": "object",
      "properties": {
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "path": {
          "type": "object",
          "properties": {},
          "description": "The path to storage for storing detailed logs of activity execution. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "linkedServiceName"
      ],
      "description": "Log location settings."
    },
    "LogSettings": {
      "type": "object",
      "properties": {
        "copyActivityLogSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/CopyActivityLogSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Settings for copy activity log."
        },
        "enableCopyActivityLog": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to enable copy activity log. Type: boolean (or Expression with resultType boolean)."
        },
        "logLocationSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/LogLocationSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Log location settings."
        }
      },
      "required": [
        "logLocationSettings"
      ],
      "description": "Log settings."
    },
    "LogStorageSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "enableReliableLogging": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to enable reliable logging. Type: boolean (or Expression with resultType boolean)."
        },
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "logLevel": {
          "type": "object",
          "properties": {},
          "description": "Gets or sets the log level, support: Info, Warning. Type: string (or Expression with resultType string)."
        },
        "path": {
          "type": "object",
          "properties": {},
          "description": "The path to storage for storing detailed logs of activity execution. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "linkedServiceName"
      ],
      "description": "(Deprecated. Please use LogSettings) Log storage settings."
    },
    "LookupActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Lookup"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LookupActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Lookup activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Lookup activity."
    },
    "LookupActivityTypeProperties": {
      "type": "object",
      "properties": {
        "dataset": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset reference type."
        },
        "firstRowOnly": {
          "type": "object",
          "properties": {},
          "description": "Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "source": {
          "oneOf": [
            {
              "$ref": "#/definitions/CopySource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A copy activity source."
        }
      },
      "required": [
        "dataset",
        "source"
      ],
      "description": "Lookup activity properties."
    },
    "MagentoLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Magento"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MagentoLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Magento server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Magento server linked service."
    },
    "MagentoLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accessToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "The URL of the Magento instance. (i.e. 192.168.222.110/magento3)"
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        }
      },
      "required": [
        "host"
      ],
      "description": "Magento server linked service properties."
    },
    "MagentoObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MagentoObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Magento server dataset."
    },
    "MagentoSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "MagentoSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Magento server source."
    },
    "ManagedIntegrationRuntime": {
      "type": "object",
      "properties": {
        "managedVirtualNetwork": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedVirtualNetworkReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Managed Virtual Network reference type."
        },
        "type": {
          "type": "string",
          "enum": [
            "Managed"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedIntegrationRuntimeTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Managed integration runtime type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Managed integration runtime, including managed elastic and managed dedicated integration runtimes."
    },
    "ManagedIntegrationRuntimeTypeProperties": {
      "type": "object",
      "properties": {
        "computeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeComputeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compute resource properties for managed integration runtime."
        },
        "customerVirtualNetwork": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeCustomerVirtualNetwork"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The definition and properties of virtual network to which Azure-SSIS integration runtime will join."
        },
        "ssisProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeSsisProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS properties for managed integration runtime."
        }
      },
      "description": "Managed integration runtime type properties."
    },
    "ManagedPrivateEndpoint": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "connectionState": {
          "oneOf": [
            {
              "$ref": "#/definitions/ConnectionStateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The connection state of a managed private endpoint"
        },
        "fqdns": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Fully qualified domain names"
        },
        "groupId": {
          "type": "string",
          "description": "The groupId to which the managed private endpoint is created"
        },
        "privateLinkResourceId": {
          "type": "string",
          "description": "The ARM resource ID of the resource to which the managed private endpoint is created"
        }
      },
      "description": "Properties of a managed private endpoint"
    },
    "ManagedVirtualNetwork": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        }
      },
      "description": "A managed Virtual Network associated with the Azure Data Factory"
    },
    "ManagedVirtualNetworkReference": {
      "type": "object",
      "properties": {
        "referenceName": {
          "type": "string",
          "description": "Reference ManagedVirtualNetwork name."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "ManagedVirtualNetworkReference"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Managed Virtual Network reference type."
        }
      },
      "required": [
        "referenceName",
        "type"
      ],
      "description": "Managed Virtual Network reference type."
    },
    "MappingDataFlow": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MappingDataFlow"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MappingDataFlowTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Mapping data flow type properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "Mapping data flow."
    },
    "MappingDataFlowTypeProperties": {
      "type": "object",
      "properties": {
        "script": {
          "type": "string",
          "description": "DataFlow script."
        },
        "scriptLines": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Data flow script lines."
        },
        "sinks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataFlowSink"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of sinks in data flow."
        },
        "sources": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataFlowSource"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of sources in data flow."
        },
        "transformations": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transformation"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of transformations in data flow."
        }
      },
      "description": "Mapping data flow type properties."
    },
    "MariaDBLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MariaDB"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MariaDBLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "MariaDB server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "MariaDB server linked service."
    },
    "MariaDBLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "pwd": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        }
      },
      "description": "MariaDB server linked service properties."
    },
    "MariaDBSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "MariaDBSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity MariaDB server source."
    },
    "MariaDBTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MariaDBTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "MariaDB server dataset."
    },
    "MarketoLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Marketo"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MarketoLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Marketo server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Marketo server linked service."
    },
    "MarketoLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client Id of your Marketo service."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "endpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)"
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        }
      },
      "required": [
        "clientId",
        "endpoint"
      ],
      "description": "Marketo server linked service properties."
    },
    "MarketoObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MarketoObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Marketo server dataset."
    },
    "MarketoSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "MarketoSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Marketo server source."
    },
    "MetadataItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "object",
          "properties": {},
          "description": "Metadata item key name. Type: string (or Expression with resultType string)."
        },
        "value": {
          "type": "object",
          "properties": {},
          "description": "Metadata item value. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Specify the name and value of custom metadata item."
    },
    "MicrosoftAccessLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MicrosoftAccess"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MicrosoftAccessLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Microsoft Access linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Microsoft Access linked service."
    },
    "MicrosoftAccessLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "type": "object",
          "properties": {},
          "description": "Type of authentication used to connect to the Microsoft Access as ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string)."
        },
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "User name for Basic authentication. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "Microsoft Access linked service properties."
    },
    "MicrosoftAccessSink": {
      "type": "object",
      "properties": {
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "A query to execute before starting the copy. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "MicrosoftAccessSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Microsoft Access sink."
    },
    "MicrosoftAccessSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "MicrosoftAccessSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for Microsoft Access."
    },
    "MicrosoftAccessTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MicrosoftAccessTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MicrosoftAccessTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Microsoft Access table dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Microsoft Access table dataset."
    },
    "MicrosoftAccessTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The Microsoft Access table name. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Microsoft Access table dataset properties."
    },
    "MongoDbAtlasCollectionDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MongoDbAtlasCollection"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDbAtlasCollectionDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "MongoDB Atlas database dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The MongoDB Atlas database dataset."
    },
    "MongoDbAtlasCollectionDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "collection": {
          "type": "object",
          "properties": {},
          "description": "The collection name of the MongoDB Atlas database. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "collection"
      ],
      "description": "MongoDB Atlas database dataset properties."
    },
    "MongoDbAtlasLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MongoDbAtlas"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDbAtlasLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "MongoDB Atlas linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for MongoDB Atlas data source."
    },
    "MongoDbAtlasLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The MongoDB Atlas connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "database": {
          "type": "object",
          "properties": {},
          "description": "The name of the MongoDB Atlas database that you want to access. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString",
        "database"
      ],
      "description": "MongoDB Atlas linked service properties."
    },
    "MongoDbAtlasSink": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MongoDbAtlasSink"
          ]
        },
        "writeBehavior": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the document with same key to be overwritten (upsert) rather than throw exception (insert). The default value is \"insert\". Type: string (or Expression with resultType string). Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity MongoDB Atlas sink."
    },
    "MongoDbAtlasSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "batchSize": {
          "type": "object",
          "properties": {},
          "description": "Specifies the number of documents to return in each batch of the response from MongoDB Atlas instance. In most cases, modifying the batch size will not affect the user or the application. This property's main purpose is to avoid hit the limitation of response size. Type: integer (or Expression with resultType integer)."
        },
        "cursorMethods": {
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDbCursorMethodsProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Cursor methods for Mongodb query"
        },
        "filter": {
          "type": "object",
          "properties": {},
          "description": "Specifies selection filter using query operators. To return all documents in a collection, omit this parameter or pass an empty document ({}). Type: string (or Expression with resultType string)."
        },
        "queryTimeout": {
          "type": "object",
          "properties": {},
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "type": {
          "type": "string",
          "enum": [
            "MongoDbAtlasSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for a MongoDB Atlas database."
    },
    "MongoDbCollectionDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MongoDbCollection"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDbCollectionDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "MongoDB database dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The MongoDB database dataset."
    },
    "MongoDbCollectionDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "collectionName": {
          "type": "object",
          "properties": {},
          "description": "The table name of the MongoDB database. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "collectionName"
      ],
      "description": "MongoDB database dataset properties."
    },
    "MongoDbCursorMethodsProperties": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "limit": {
          "type": "object",
          "properties": {},
          "description": "Specifies the maximum number of documents the server returns. limit() is analogous to the LIMIT statement in a SQL database. Type: integer (or Expression with resultType integer)."
        },
        "project": {
          "type": "object",
          "properties": {},
          "description": "Specifies the fields to return in the documents that match the query filter. To return all fields in the matching documents, omit this parameter. Type: string (or Expression with resultType string)."
        },
        "skip": {
          "type": "object",
          "properties": {},
          "description": "Specifies the how many documents skipped and where MongoDB begins returning results. This approach may be useful in implementing paginated results. Type: integer (or Expression with resultType integer)."
        },
        "sort": {
          "type": "object",
          "properties": {},
          "description": "Specifies the order in which the query returns matching documents. Type: string (or Expression with resultType string). Type: string (or Expression with resultType string)."
        }
      },
      "description": "Cursor methods for Mongodb query"
    },
    "MongoDbLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MongoDb"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDbLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "MongoDB linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for MongoDb data source."
    },
    "MongoDbLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "allowSelfSignedServerCert": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Anonymous"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to be used to connect to the MongoDB database."
        },
        "authSource": {
          "type": "object",
          "properties": {},
          "description": "Database to verify the username and password. Type: string (or Expression with resultType string)."
        },
        "databaseName": {
          "type": "object",
          "properties": {},
          "description": "The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string)."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "server": {
          "type": "object",
          "properties": {},
          "description": "The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "databaseName",
        "server"
      ],
      "description": "MongoDB linked service properties."
    },
    "MongoDbSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Should be a SQL-92 query expression. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "MongoDbSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for a MongoDB database."
    },
    "MongoDbV2CollectionDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MongoDbV2Collection"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDbV2CollectionDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "MongoDB database dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The MongoDB database dataset."
    },
    "MongoDbV2CollectionDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "collection": {
          "type": "object",
          "properties": {},
          "description": "The collection name of the MongoDB database. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "collection"
      ],
      "description": "MongoDB database dataset properties."
    },
    "MongoDbV2LinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MongoDbV2"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDbV2LinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "MongoDB linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for MongoDB data source."
    },
    "MongoDbV2LinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The MongoDB connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "database": {
          "type": "object",
          "properties": {},
          "description": "The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString",
        "database"
      ],
      "description": "MongoDB linked service properties."
    },
    "MongoDbV2Sink": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MongoDbV2Sink"
          ]
        },
        "writeBehavior": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the document with same key to be overwritten (upsert) rather than throw exception (insert). The default value is \"insert\". Type: string (or Expression with resultType string). Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity MongoDB sink."
    },
    "MongoDbV2Source": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "batchSize": {
          "type": "object",
          "properties": {},
          "description": "Specifies the number of documents to return in each batch of the response from MongoDB instance. In most cases, modifying the batch size will not affect the user or the application. This property's main purpose is to avoid hit the limitation of response size. Type: integer (or Expression with resultType integer)."
        },
        "cursorMethods": {
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDbCursorMethodsProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Cursor methods for Mongodb query"
        },
        "filter": {
          "type": "object",
          "properties": {},
          "description": "Specifies selection filter using query operators. To return all documents in a collection, omit this parameter or pass an empty document ({}). Type: string (or Expression with resultType string)."
        },
        "queryTimeout": {
          "type": "object",
          "properties": {},
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "type": {
          "type": "string",
          "enum": [
            "MongoDbV2Source"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for a MongoDB database."
    },
    "MultiplePipelineTrigger": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ScheduleTrigger"
        },
        {
          "$ref": "#/definitions/BlobTrigger"
        },
        {
          "$ref": "#/definitions/BlobEventsTrigger"
        },
        {
          "$ref": "#/definitions/CustomEventsTrigger"
        }
      ],
      "properties": {
        "pipelines": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TriggerPipelineReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Pipelines that need to be started."
        },
        "type": {
          "type": "string",
          "enum": [
            "MultiplePipelineTrigger"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Base class for all triggers that support one to many model for trigger to pipeline."
    },
    "MySqlLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MySql"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MySqlLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "MySQL linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for MySQL data source."
    },
    "MySqlLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "MySQL linked service properties."
    },
    "MySqlSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "MySqlSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for MySQL databases."
    },
    "MySqlTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MySqlTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MySqlTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "MySql table dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The MySQL table dataset."
    },
    "MySqlTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The MySQL table name. Type: string (or Expression with resultType string)."
        }
      },
      "description": "MySql table dataset properties."
    },
    "NetezzaLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Netezza"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/NetezzaLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Netezza linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Netezza linked service."
    },
    "NetezzaLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "pwd": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        }
      },
      "description": "Netezza linked service properties."
    },
    "NetezzaPartitionSettings": {
      "type": "object",
      "properties": {
        "partitionColumnName": {
          "type": "object",
          "properties": {},
          "description": "The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionLowerBound": {
          "type": "object",
          "properties": {},
          "description": "The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionUpperBound": {
          "type": "object",
          "properties": {},
          "description": "The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        }
      },
      "description": "The settings that will be leveraged for Netezza source partitioning."
    },
    "NetezzaSource": {
      "type": "object",
      "properties": {
        "partitionOption": {
          "type": "object",
          "properties": {},
          "description": "The partition mechanism that will be used for Netezza read in parallel. Possible values include: \"None\", \"DataSlice\", \"DynamicRange\"."
        },
        "partitionSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/NetezzaPartitionSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The settings that will be leveraged for Netezza source partitioning."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "NetezzaSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Netezza source."
    },
    "NetezzaTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "NetezzaTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/NetezzaTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Netezza dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "Netezza dataset."
    },
    "NetezzaTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the Netezza. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Netezza. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "Netezza dataset properties."
    },
    "ODataLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "OData"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ODataLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "OData linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Open Data Protocol (OData) linked service."
    },
    "ODataLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "aadResourceId": {
          "type": "object",
          "properties": {},
          "description": "Specify the resource you are requesting authorization to use Directory. Type: string (or Expression with resultType string)."
        },
        "aadServicePrincipalCredentialType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "ServicePrincipalKey",
                "ServicePrincipalCert"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specify the credential type (key or cert) is used for service principal."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Anonymous",
                "Windows",
                "AadServicePrincipal",
                "ManagedServiceIdentity"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Type of authentication used to connect to the OData service."
        },
        "authHeaders": {
          "type": "object",
          "properties": {},
          "description": "The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object)."
        },
        "azureCloudType": {
          "type": "object",
          "properties": {},
          "description": "Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "servicePrincipalEmbeddedCert": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "servicePrincipalEmbeddedCertPassword": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "Specify the application id of your application registered in Azure Active Directory. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "Specify the tenant information (domain name or tenant ID) under which your application resides. Type: string (or Expression with resultType string)."
        },
        "url": {
          "type": "object",
          "properties": {},
          "description": "The URL of the OData service endpoint. Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "User name of the OData service. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ],
      "description": "OData linked service properties."
    },
    "ODataResourceDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ODataResource"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ODataResourceDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "OData dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Open Data Protocol (OData) resource dataset."
    },
    "ODataResourceDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {},
          "description": "The OData resource path. Type: string (or Expression with resultType string)."
        }
      },
      "description": "OData dataset properties."
    },
    "ODataSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "httpRequestTimeout": {
          "type": "object",
          "properties": {},
          "description": "The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "OData query. For example, \"$top=1\". Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "ODataSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for OData source."
    },
    "OdbcLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Odbc"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/OdbcLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "ODBC linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Open Database Connectivity (ODBC) linked service."
    },
    "OdbcLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "type": "object",
          "properties": {},
          "description": "Type of authentication used to connect to the ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string)."
        },
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "User name for Basic authentication. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "ODBC linked service properties."
    },
    "OdbcSink": {
      "type": "object",
      "properties": {
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "A query to execute before starting the copy. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "OdbcSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity ODBC sink."
    },
    "OdbcSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "OdbcSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for ODBC databases."
    },
    "OdbcTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "OdbcTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/OdbcTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "ODBC table dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The ODBC table dataset."
    },
    "OdbcTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The ODBC table name. Type: string (or Expression with resultType string)."
        }
      },
      "description": "ODBC table dataset properties."
    },
    "Office365Dataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Office365Table"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Office365DatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Office365 dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The Office365 account."
    },
    "Office365DatasetTypeProperties": {
      "type": "object",
      "properties": {
        "predicate": {
          "type": "object",
          "properties": {},
          "description": "A predicate expression that can be used to filter the specific rows to extract from Office 365. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "Name of the dataset to extract from Office 365. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "tableName"
      ],
      "description": "Office365 dataset properties."
    },
    "Office365LinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Office365"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Office365LinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Office365 linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Office365 linked service."
    },
    "Office365LinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "office365TenantId": {
          "type": "object",
          "properties": {},
          "description": "Azure tenant ID to which the Office 365 account belongs. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "Specify the application's client ID. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "servicePrincipalTenantId": {
          "type": "object",
          "properties": {},
          "description": "Specify the tenant information under which your Azure AD web application resides. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "office365TenantId",
        "servicePrincipalId",
        "servicePrincipalKey",
        "servicePrincipalTenantId"
      ],
      "description": "Office365 linked service properties."
    },
    "Office365Source": {
      "type": "object",
      "properties": {
        "allowedGroups": {
          "type": "object",
          "properties": {},
          "description": "The groups containing all the users. Type: array of strings (or Expression with resultType array of strings)."
        },
        "dateFilterColumn": {
          "type": "object",
          "properties": {},
          "description": "The Column to apply the <paramref name=\"StartTime\"/> and <paramref name=\"EndTime\"/>. Type: string (or Expression with resultType string)."
        },
        "endTime": {
          "type": "object",
          "properties": {},
          "description": "End time of the requested range for this dataset. Type: string (or Expression with resultType string)."
        },
        "outputColumns": {
          "type": "object",
          "properties": {},
          "description": "The columns to be read out from the Office 365 table. Type: array of objects (or Expression with resultType array of objects). Example: [ { \"name\": \"Id\" }, { \"name\": \"CreatedDateTime\" } ]"
        },
        "startTime": {
          "type": "object",
          "properties": {},
          "description": "Start time of the requested range for this dataset. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "Office365Source"
          ]
        },
        "userScopeFilterUri": {
          "type": "object",
          "properties": {},
          "description": "The user scope uri. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for an Office 365 service."
    },
    "OracleCloudStorageLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "OracleCloudStorage"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/OracleCloudStorageLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Oracle Cloud Storage linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Oracle Cloud Storage."
    },
    "OracleCloudStorageLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accessKeyId": {
          "type": "object",
          "properties": {},
          "description": "The access key identifier of the Oracle Cloud Storage Identity and Access Management (IAM) user. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "secretAccessKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "serviceUrl": {
          "type": "object",
          "properties": {},
          "description": "This value specifies the endpoint to access with the Oracle Cloud Storage Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Oracle Cloud Storage linked service properties."
    },
    "OracleCloudStorageLocation": {
      "type": "object",
      "properties": {
        "bucketName": {
          "type": "object",
          "properties": {},
          "description": "Specify the bucketName of Oracle Cloud Storage. Type: string (or Expression with resultType string)"
        },
        "type": {
          "type": "string",
          "enum": [
            "OracleCloudStorageLocation"
          ]
        },
        "version": {
          "type": "object",
          "properties": {},
          "description": "Specify the version of Oracle Cloud Storage. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "The location of Oracle Cloud Storage dataset."
    },
    "OracleCloudStorageReadSettings": {
      "type": "object",
      "properties": {
        "deleteFilesAfterCompletion": {
          "type": "object",
          "properties": {},
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "enablePartitionDiscovery": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether to enable partition discovery."
        },
        "fileListPath": {
          "type": "object",
          "properties": {},
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "properties": {},
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "properties": {},
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "partitionRootPath": {
          "type": "object",
          "properties": {},
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "prefix": {
          "type": "object",
          "properties": {},
          "description": "The prefix filter for the Oracle Cloud Storage object name. Type: string (or Expression with resultType string)."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "OracleCloudStorageReadSettings"
          ]
        },
        "wildcardFileName": {
          "type": "object",
          "properties": {},
          "description": "Oracle Cloud Storage wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "properties": {},
          "description": "Oracle Cloud Storage wildcardFolderPath. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "Oracle Cloud Storage read settings."
    },
    "OracleLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Oracle"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/OracleLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Oracle database linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Oracle database."
    },
    "OracleLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "Oracle database linked service properties."
    },
    "OraclePartitionSettings": {
      "type": "object",
      "properties": {
        "partitionColumnName": {
          "type": "object",
          "properties": {},
          "description": "The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionLowerBound": {
          "type": "object",
          "properties": {},
          "description": "The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionNames": {
          "type": "object",
          "properties": {},
          "description": "Names of the physical partitions of Oracle table. "
        },
        "partitionUpperBound": {
          "type": "object",
          "properties": {},
          "description": "The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        }
      },
      "description": "The settings that will be leveraged for Oracle source partitioning."
    },
    "OracleServiceCloudLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "OracleServiceCloud"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/OracleServiceCloudLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Oracle Service Cloud linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Oracle Service Cloud linked service."
    },
    "OracleServiceCloudLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "The URL of the Oracle Service Cloud instance."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name that you use to access Oracle Service Cloud server."
        }
      },
      "required": [
        "host",
        "password",
        "username"
      ],
      "description": "Oracle Service Cloud linked service properties."
    },
    "OracleServiceCloudObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "OracleServiceCloudObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Oracle Service Cloud dataset."
    },
    "OracleServiceCloudSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "OracleServiceCloudSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Oracle Service Cloud source."
    },
    "OracleSink": {
      "type": "object",
      "properties": {
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "OracleSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Oracle sink."
    },
    "OracleSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "oracleReaderQuery": {
          "type": "object",
          "properties": {},
          "description": "Oracle reader query. Type: string (or Expression with resultType string)."
        },
        "partitionOption": {
          "type": "object",
          "properties": {},
          "description": "The partition mechanism that will be used for Oracle read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\"."
        },
        "partitionSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/OraclePartitionSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The settings that will be leveraged for Oracle source partitioning."
        },
        "queryTimeout": {
          "type": "object",
          "properties": {},
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "type": {
          "type": "string",
          "enum": [
            "OracleSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Oracle source."
    },
    "OracleTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "OracleTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/OracleTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "On-premises Oracle dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The on-premises Oracle database dataset."
    },
    "OracleTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the on-premises Oracle database. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the on-premises Oracle database. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "On-premises Oracle dataset properties."
    },
    "OrcDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Orc"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/OrcDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "ORC dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "ORC dataset."
    },
    "OrcDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "location": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset location."
        },
        "orcCompressionCodec": {
          "type": "object",
          "properties": {},
          "description": "The data orcCompressionCodec. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "location"
      ],
      "description": "ORC dataset properties."
    },
    "OrcFormat": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "OrcFormat"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The data stored in Optimized Row Columnar (ORC) format."
    },
    "OrcSink": {
      "type": "object",
      "properties": {
        "formatSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/OrcWriteSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Orc write settings."
        },
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreWriteSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector write settings."
        },
        "type": {
          "type": "string",
          "enum": [
            "OrcSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity ORC sink."
    },
    "OrcSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector read setting."
        },
        "type": {
          "type": "string",
          "enum": [
            "OrcSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity ORC source."
    },
    "OrcWriteSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "fileNamePrefix": {
          "type": "object",
          "properties": {},
          "description": "Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string)."
        },
        "maxRowsPerFile": {
          "type": "object",
          "properties": {},
          "description": "Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer)."
        }
      },
      "description": "Orc write settings."
    },
    "PackageStore": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the package store"
        },
        "packageStoreLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/EntityReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The entity reference."
        }
      },
      "required": [
        "name",
        "packageStoreLinkedService"
      ],
      "description": "Package store for the SSIS integration runtime."
    },
    "ParameterSpecification": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "object",
          "properties": {},
          "description": "Default value of parameter."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Object",
                "String",
                "Int",
                "Float",
                "Bool",
                "Array",
                "SecureString"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Parameter type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Definition of a single parameter for an entity."
    },
    "ParquetDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Parquet"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ParquetDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Parquet dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "Parquet dataset."
    },
    "ParquetDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "compressionCodec": {
          "type": "object",
          "properties": {},
          "description": "The data compressionCodec. Type: string (or Expression with resultType string)."
        },
        "location": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset location."
        }
      },
      "required": [
        "location"
      ],
      "description": "Parquet dataset properties."
    },
    "ParquetFormat": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ParquetFormat"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The data stored in Parquet format."
    },
    "ParquetSink": {
      "type": "object",
      "properties": {
        "formatSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/ParquetWriteSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Parquet write settings."
        },
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreWriteSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector write settings."
        },
        "type": {
          "type": "string",
          "enum": [
            "ParquetSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Parquet sink."
    },
    "ParquetSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector read setting."
        },
        "type": {
          "type": "string",
          "enum": [
            "ParquetSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Parquet source."
    },
    "ParquetWriteSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "fileNamePrefix": {
          "type": "object",
          "properties": {},
          "description": "Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string)."
        },
        "maxRowsPerFile": {
          "type": "object",
          "properties": {},
          "description": "Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer)."
        }
      },
      "description": "Parquet write settings."
    },
    "PaypalLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Paypal"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PaypalLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Paypal Service linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Paypal Service linked service."
    },
    "PaypalLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client ID associated with your PayPal application."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "The URL of the PayPal instance. (i.e. api.sandbox.paypal.com)"
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        }
      },
      "required": [
        "clientId",
        "host"
      ],
      "description": "Paypal Service linked service properties."
    },
    "PaypalObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PaypalObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Paypal Service dataset."
    },
    "PaypalSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "PaypalSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Paypal Service source."
    },
    "PhoenixDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the Phoenix. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Phoenix. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "Phoenix Dataset Properties"
    },
    "PhoenixLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Phoenix"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PhoenixLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Phoenix server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Phoenix server linked service."
    },
    "PhoenixLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "allowHostNameCNMismatch": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
        },
        "allowSelfSignedServerCert": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Anonymous",
                "UsernameAndPassword",
                "WindowsAzureHDInsightService"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication mechanism used to connect to the Phoenix server."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)"
        },
        "httpPath": {
          "type": "object",
          "properties": {},
          "description": "The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765."
        },
        "trustedCertPath": {
          "type": "object",
          "properties": {},
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name used to connect to the Phoenix server."
        },
        "useSystemTrustStore": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
        }
      },
      "required": [
        "authenticationType",
        "host"
      ],
      "description": "Phoenix server linked service properties."
    },
    "PhoenixObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PhoenixObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PhoenixDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Phoenix Dataset Properties"
        }
      },
      "required": [
        "type"
      ],
      "description": "Phoenix server dataset."
    },
    "PhoenixSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "PhoenixSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Phoenix server source."
    },
    "Pipeline": {
      "type": "object",
      "properties": {
        "activities": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Activity"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of activities in pipeline."
        },
        "annotations": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of tags that can be used for describing the Pipeline."
        },
        "concurrency": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The max number of concurrent runs for the pipeline."
        },
        "description": {
          "type": "string",
          "description": "The description of the pipeline."
        },
        "folder": {
          "oneOf": [
            {
              "$ref": "#/definitions/PipelineFolder"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ParameterSpecification"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Definition of all parameters for an entity."
        },
        "policy": {
          "oneOf": [
            {
              "$ref": "#/definitions/PipelinePolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Pipeline Policy."
        },
        "runDimensions": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dimensions emitted by Pipeline."
        },
        "variables": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/VariableSpecification"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Definition of variable for a Pipeline."
        }
      },
      "description": "A data factory pipeline."
    },
    "PipelineElapsedTimeMetricPolicy": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "object",
          "properties": {},
          "description": "TimeSpan value, after which an Azure Monitoring Metric is fired."
        }
      },
      "description": "Pipeline ElapsedTime Metric Policy."
    },
    "PipelineFolder": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the folder that this Pipeline is in."
        }
      },
      "description": "The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level."
    },
    "PipelinePolicy": {
      "type": "object",
      "properties": {
        "elapsedTimeMetric": {
          "oneOf": [
            {
              "$ref": "#/definitions/PipelineElapsedTimeMetricPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Pipeline ElapsedTime Metric Policy."
        }
      },
      "description": "Pipeline Policy."
    },
    "PipelineReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Reference name."
        },
        "referenceName": {
          "type": "string",
          "description": "Reference pipeline name."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "PipelineReference"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Pipeline reference type."
        }
      },
      "required": [
        "referenceName",
        "type"
      ],
      "description": "Pipeline reference type."
    },
    "PolybaseSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "rejectSampleValue": {
          "type": "object",
          "properties": {},
          "description": "Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "rejectType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "value",
                "percentage"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Reject type."
        },
        "rejectValue": {
          "type": "object",
          "properties": {},
          "description": "Specifies the value or the percentage of rows that can be rejected before the query fails. Type: number (or Expression with resultType number), minimum: 0."
        },
        "useTypeDefault": {
          "type": "object",
          "properties": {},
          "description": "Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "description": "PolyBase settings."
    },
    "PostgreSqlLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PostgreSql"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PostgreSqlLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "PostgreSQL linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for PostgreSQL data source."
    },
    "PostgreSqlLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "PostgreSQL linked service properties."
    },
    "PostgreSqlSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "PostgreSqlSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for PostgreSQL databases."
    },
    "PostgreSqlTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PostgreSqlTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PostgreSqlTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "PostgreSQL table dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The PostgreSQL table dataset."
    },
    "PostgreSqlTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The PostgreSQL schema name. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The PostgreSQL table name. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "PostgreSQL table dataset properties."
    },
    "PowerQuerySink": {
      "type": "object",
      "properties": {
        "dataset": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset reference type."
        },
        "description": {
          "type": "string",
          "description": "Transformation description."
        },
        "flowlet": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataFlowReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Data flow reference type."
        },
        "linkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "name": {
          "type": "string",
          "description": "Transformation name."
        },
        "rejectedDataLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "schemaLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "script": {
          "type": "string",
          "description": "sink script."
        }
      },
      "required": [
        "name"
      ],
      "description": "Power query sink."
    },
    "PowerQuerySinkMapping": {
      "type": "object",
      "properties": {
        "dataflowSinks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PowerQuerySink"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of sinks mapped to Power Query mashup query."
        },
        "queryName": {
          "type": "string",
          "description": "Name of the query in Power Query mashup document."
        }
      },
      "description": "Map Power Query mashup query to sink dataset(s)."
    },
    "PowerQuerySource": {
      "type": "object",
      "properties": {
        "dataset": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset reference type."
        },
        "description": {
          "type": "string",
          "description": "Transformation description."
        },
        "flowlet": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataFlowReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Data flow reference type."
        },
        "linkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "name": {
          "type": "string",
          "description": "Transformation name."
        },
        "schemaLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "script": {
          "type": "string",
          "description": "source script."
        }
      },
      "required": [
        "name"
      ],
      "description": "Power query source."
    },
    "PowerQueryTypeProperties": {
      "type": "object",
      "properties": {
        "documentLocale": {
          "type": "string",
          "description": "Locale of the Power query mashup document."
        },
        "script": {
          "type": "string",
          "description": "Power query mashup script."
        },
        "sources": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PowerQuerySource"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of sources in Power Query."
        }
      },
      "description": "Power Query data flow type properties."
    },
    "PrestoDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the Presto. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Presto. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "Presto Dataset Properties"
    },
    "PrestoLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Presto"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrestoLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Presto server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Presto server linked service."
    },
    "PrestoLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "allowHostNameCNMismatch": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
        },
        "allowSelfSignedServerCert": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Anonymous",
                "LDAP"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication mechanism used to connect to the Presto server."
        },
        "catalog": {
          "type": "object",
          "properties": {},
          "description": "The catalog context for all request against the server."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "The IP address or host name of the Presto server. (i.e. 192.168.222.160)"
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port that the Presto server uses to listen for client connections. The default value is 8080."
        },
        "serverVersion": {
          "type": "object",
          "properties": {},
          "description": "The version of the Presto server. (i.e. 0.148-t)"
        },
        "timeZoneID": {
          "type": "object",
          "properties": {},
          "description": "The local time zone used by the connection. Valid values for this option are specified in the IANA Time Zone Database. The default value is the system time zone."
        },
        "trustedCertPath": {
          "type": "object",
          "properties": {},
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name used to connect to the Presto server."
        },
        "useSystemTrustStore": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
        }
      },
      "required": [
        "authenticationType",
        "catalog",
        "host",
        "serverVersion"
      ],
      "description": "Presto server linked service properties."
    },
    "PrestoObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PrestoObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrestoDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Presto Dataset Properties"
        }
      },
      "required": [
        "type"
      ],
      "description": "Presto server dataset."
    },
    "PrestoSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "PrestoSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Presto server source."
    },
    "PrivateEndpoint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource Id for private endpoint"
        }
      },
      "description": "Private endpoint which a connection belongs to."
    },
    "PrivateLinkConnectionApprovalRequest": {
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Private endpoint which a connection belongs to."
        },
        "privateLinkServiceConnectionState": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The state of a private link connection"
        }
      },
      "description": "A request to approve or reject a private endpoint connection"
    },
    "PrivateLinkConnectionState": {
      "type": "object",
      "properties": {
        "actionsRequired": {
          "type": "string",
          "description": "ActionsRequired for a private link connection"
        },
        "description": {
          "type": "string",
          "description": "Description of a private link connection"
        },
        "status": {
          "type": "string",
          "description": "Status of a private link connection"
        }
      },
      "description": "The state of a private link connection"
    },
    "PurviewConfiguration": {
      "type": "object",
      "properties": {
        "purviewResourceId": {
          "type": "string",
          "description": "Purview resource id."
        }
      },
      "description": "Purview configuration."
    },
    "QuickbaseLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Quickbase"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/QuickbaseLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Quickbase linked service type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Quickbase."
    },
    "QuickbaseLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "url": {
          "type": "object",
          "properties": {},
          "description": "The url to connect Quickbase source. Type: string (or Expression with resultType string)."
        },
        "userToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        }
      },
      "required": [
        "url",
        "userToken"
      ],
      "description": "Quickbase linked service type properties."
    },
    "QuickBooksLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "QuickBooks"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/QuickBooksLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "QuickBooks server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "QuickBooks server linked service."
    },
    "QuickBooksLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accessToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "accessTokenSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "companyId": {
          "type": "object",
          "properties": {},
          "description": "The company ID of the QuickBooks company to authorize."
        },
        "connectionProperties": {
          "type": "object",
          "properties": {},
          "description": "Properties used to connect to QuickBooks. It is mutually exclusive with any other properties in the linked service. Type: object."
        },
        "consumerKey": {
          "type": "object",
          "properties": {},
          "description": "The consumer key for OAuth 1.0 authentication."
        },
        "consumerSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "endpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)"
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        }
      },
      "description": "QuickBooks server linked service properties."
    },
    "QuickBooksObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "QuickBooksObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "QuickBooks server dataset."
    },
    "QuickBooksSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "QuickBooksSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity QuickBooks server source."
    },
    "RecurrenceSchedule": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "hours": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The hours."
        },
        "minutes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The minutes."
        },
        "monthDays": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The month days."
        },
        "monthlyOccurrences": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecurrenceScheduleOccurrence"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The monthly occurrences."
        },
        "weekDays": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Sunday",
                  "Monday",
                  "Tuesday",
                  "Wednesday",
                  "Thursday",
                  "Friday",
                  "Saturday"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The days of the week."
        }
      },
      "description": "The recurrence schedule."
    },
    "RecurrenceScheduleOccurrence": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "day": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The day of the week."
        },
        "occurrence": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The occurrence."
        }
      },
      "description": "The recurrence schedule occurrence."
    },
    "RedirectIncompatibleRowSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "linkedServiceName": {
          "type": "object",
          "properties": {},
          "description": "Name of the Azure Storage, Storage SAS, or Azure Data Lake Store linked service used for redirecting incompatible row. Must be specified if redirectIncompatibleRowSettings is specified. Type: string (or Expression with resultType string)."
        },
        "path": {
          "type": "object",
          "properties": {},
          "description": "The path for storing the redirect incompatible row data. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "linkedServiceName"
      ],
      "description": "Redirect incompatible row settings"
    },
    "RedshiftUnloadSettings": {
      "type": "object",
      "properties": {
        "bucketName": {
          "type": "object",
          "properties": {},
          "description": "The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string)."
        },
        "s3LinkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        }
      },
      "required": [
        "bucketName",
        "s3LinkedServiceName"
      ],
      "description": "The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3."
    },
    "RelationalSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "RelationalSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for various relational databases."
    },
    "RelationalTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "RelationalTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/RelationalTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Relational table dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The relational table dataset."
    },
    "RelationalTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The relational table name. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Relational table dataset properties."
    },
    "RerunTumblingWindowTrigger": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "RerunTumblingWindowTrigger"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/RerunTumblingWindowTriggerTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Rerun Trigger properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Trigger that schedules pipeline reruns for all fixed time interval windows from a requested start time to requested end time."
    },
    "RerunTumblingWindowTriggerTypeProperties": {
      "type": "object",
      "properties": {
        "parentTrigger": {
          "type": "object",
          "properties": {},
          "description": "The parent trigger reference."
        },
        "requestedEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time for the time period for which restatement is initiated. Only UTC time is currently supported."
        },
        "requestedStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time for the time period for which restatement is initiated. Only UTC time is currently supported."
        },
        "rerunConcurrency": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The max number of parallel time windows (ready for execution) for which a rerun is triggered."
        }
      },
      "required": [
        "parentTrigger",
        "requestedEndTime",
        "requestedStartTime",
        "rerunConcurrency"
      ],
      "description": "Rerun Trigger properties."
    },
    "ResponsysLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Responsys"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ResponsysLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Responsys linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Responsys linked service."
    },
    "ResponsysLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client ID associated with the Responsys application. Type: string (or Expression with resultType string)."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "endpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Responsys server."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "clientId",
        "endpoint"
      ],
      "description": "Responsys linked service properties."
    },
    "ResponsysObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ResponsysObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Responsys dataset."
    },
    "ResponsysSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "ResponsysSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Responsys source."
    },
    "RestResourceDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "RestResource"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/RestResourceDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "A Rest service dataset."
    },
    "RestResourceDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "additionalHeaders": {
          "type": "object",
          "properties": {},
          "description": "The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string)."
        },
        "paginationRules": {
          "type": "object",
          "properties": {},
          "description": "The pagination rules to compose next page requests. Type: string (or Expression with resultType string)."
        },
        "relativeUrl": {
          "type": "object",
          "properties": {},
          "description": "The relative URL to the resource that the RESTful API provides. Type: string (or Expression with resultType string)."
        },
        "requestBody": {
          "type": "object",
          "properties": {},
          "description": "The HTTP request body to the RESTful API if requestMethod is POST. Type: string (or Expression with resultType string)."
        },
        "requestMethod": {
          "type": "object",
          "properties": {},
          "description": "The HTTP method used to call the RESTful API. The default is GET. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Properties specific to this dataset type."
    },
    "RestServiceLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "RestService"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/RestServiceLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Rest Service linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Rest Service linked service."
    },
    "RestServiceLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "aadResourceId": {
          "type": "object",
          "properties": {},
          "description": "The resource you are requesting authorization to use."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Anonymous",
                "Basic",
                "AadServicePrincipal",
                "ManagedServiceIdentity",
                "OAuth2ClientCredential"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Type of authentication used to connect to the REST service."
        },
        "authHeaders": {
          "type": "object",
          "properties": {},
          "description": "The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object)."
        },
        "azureCloudType": {
          "type": "object",
          "properties": {},
          "description": "Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string)."
        },
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client ID associated with your application. Type: string (or Expression with resultType string)."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "enableServerCertificateValidation": {
          "type": "object",
          "properties": {},
          "description": "Whether to validate server side SSL certificate when connecting to the endpoint.The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The target service or resource to which the access will be requested. Type: string (or Expression with resultType string)."
        },
        "scope": {
          "type": "object",
          "properties": {},
          "description": "The scope of the access required. It describes what kind of access will be requested. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The application's client ID used in AadServicePrincipal authentication type."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The tenant information (domain name or tenant ID) used in AadServicePrincipal authentication type under which your application resides."
        },
        "tokenEndpoint": {
          "type": "object",
          "properties": {},
          "description": "The token endpoint of the authorization server to acquire access token. Type: string (or Expression with resultType string)."
        },
        "url": {
          "type": "object",
          "properties": {},
          "description": "The base URL of the REST service."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "The user name used in Basic authentication type."
        }
      },
      "required": [
        "authenticationType",
        "url"
      ],
      "description": "Rest Service linked service properties."
    },
    "RestSink": {
      "type": "object",
      "properties": {
        "additionalHeaders": {
          "type": "object",
          "properties": {},
          "description": "The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string)."
        },
        "httpCompressionType": {
          "type": "object",
          "properties": {},
          "description": "Http Compression Type to Send data in compressed format with Optimal Compression Level, Default is None. And The Only Supported option is Gzip. "
        },
        "httpRequestTimeout": {
          "type": "object",
          "properties": {},
          "description": "The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:01:40. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "requestInterval": {
          "type": "object",
          "properties": {},
          "description": "The time to await before sending next request, in milliseconds "
        },
        "requestMethod": {
          "type": "object",
          "properties": {},
          "description": "The HTTP method used to call the RESTful API. The default is POST. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "RestSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Rest service Sink."
    },
    "RestSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "additionalHeaders": {
          "type": "object",
          "properties": {},
          "description": "The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string)."
        },
        "httpRequestTimeout": {
          "type": "object",
          "properties": {},
          "description": "The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:01:40. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "paginationRules": {
          "type": "object",
          "properties": {},
          "description": "The pagination rules to compose next page requests. Type: string (or Expression with resultType string)."
        },
        "requestBody": {
          "type": "object",
          "properties": {},
          "description": "The HTTP request body to the RESTful API if requestMethod is POST. Type: string (or Expression with resultType string)."
        },
        "requestInterval": {
          "type": "object",
          "properties": {},
          "description": "The time to await before sending next page request. "
        },
        "requestMethod": {
          "type": "object",
          "properties": {},
          "description": "The HTTP method used to call the RESTful API. The default is GET. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "RestSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Rest service source."
    },
    "RetryPolicy": {
      "type": "object",
      "properties": {
        "count": {
          "type": "object",
          "properties": {},
          "description": "Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "intervalInSeconds": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 30,
              "maximum": 86400
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Interval between retries in seconds. Default is 30."
        }
      },
      "description": "Execution policy for an activity."
    },
    "SalesforceLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Salesforce"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SalesforceLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Salesforce linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Salesforce."
    },
    "SalesforceLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "object",
          "properties": {},
          "description": "The Salesforce API version used in ADF. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "environmentUrl": {
          "type": "object",
          "properties": {},
          "description": "The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "securityToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Salesforce linked service properties."
    },
    "SalesforceMarketingCloudLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SalesforceMarketingCloud"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SalesforceMarketingCloudLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Salesforce Marketing Cloud linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Salesforce Marketing Cloud linked service."
    },
    "SalesforceMarketingCloudLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client ID associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string)."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "connectionProperties": {
          "type": "object",
          "properties": {},
          "description": "Properties used to connect to Salesforce Marketing Cloud. It is mutually exclusive with any other properties in the linked service. Type: object."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "description": "Salesforce Marketing Cloud linked service properties."
    },
    "SalesforceMarketingCloudObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SalesforceMarketingCloudObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Salesforce Marketing Cloud dataset."
    },
    "SalesforceMarketingCloudSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SalesforceMarketingCloudSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Salesforce Marketing Cloud source."
    },
    "SalesforceObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SalesforceObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SalesforceObjectDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Salesforce object dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Salesforce object dataset."
    },
    "SalesforceObjectDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "objectApiName": {
          "type": "object",
          "properties": {},
          "description": "The Salesforce object API name. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Salesforce object dataset properties."
    },
    "SalesforceServiceCloudLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SalesforceServiceCloud"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SalesforceServiceCloudLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Salesforce Service Cloud linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Salesforce Service Cloud."
    },
    "SalesforceServiceCloudLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "object",
          "properties": {},
          "description": "The Salesforce API version used in ADF. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "environmentUrl": {
          "type": "object",
          "properties": {},
          "description": "The URL of Salesforce Service Cloud instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string)."
        },
        "extendedProperties": {
          "type": "object",
          "properties": {},
          "description": "Extended properties appended to the connection string. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "securityToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Salesforce Service Cloud linked service properties."
    },
    "SalesforceServiceCloudObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SalesforceServiceCloudObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SalesforceServiceCloudObjectDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Salesforce Service Cloud object dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Salesforce Service Cloud object dataset."
    },
    "SalesforceServiceCloudObjectDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "objectApiName": {
          "type": "object",
          "properties": {},
          "description": "The Salesforce Service Cloud object API name. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Salesforce Service Cloud object dataset properties."
    },
    "SalesforceServiceCloudSink": {
      "type": "object",
      "properties": {
        "externalIdFieldName": {
          "type": "object",
          "properties": {},
          "description": "The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string)."
        },
        "ignoreNullValues": {
          "type": "object",
          "properties": {},
          "description": "The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SalesforceServiceCloudSink"
          ]
        },
        "writeBehavior": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Insert",
                "Upsert"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The write behavior for the operation. Default is Insert."
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Salesforce Service Cloud sink."
    },
    "SalesforceServiceCloudSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "readBehavior": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Query",
                "QueryAll"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The read behavior for the operation. Default is Query."
        },
        "type": {
          "type": "string",
          "enum": [
            "SalesforceServiceCloudSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Salesforce Service Cloud source."
    },
    "SalesforceSink": {
      "type": "object",
      "properties": {
        "externalIdFieldName": {
          "type": "object",
          "properties": {},
          "description": "The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string)."
        },
        "ignoreNullValues": {
          "type": "object",
          "properties": {},
          "description": "The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SalesforceSink"
          ]
        },
        "writeBehavior": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Insert",
                "Upsert"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The write behavior for the operation. Default is Insert."
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Salesforce sink."
    },
    "SalesforceSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "readBehavior": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Query",
                "QueryAll"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The read behavior for the operation. Default is Query."
        },
        "type": {
          "type": "string",
          "enum": [
            "SalesforceSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Salesforce source."
    },
    "SapBwCubeDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SapBwCube"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The SAP BW cube dataset."
    },
    "SapBWLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SapBW"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapBWLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this linked service type."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "SAP Business Warehouse Linked Service."
    },
    "SapBWLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "Client ID of the client on the BW system. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "server": {
          "type": "object",
          "properties": {},
          "description": "Host name of the SAP BW instance. Type: string (or Expression with resultType string)."
        },
        "systemNumber": {
          "type": "object",
          "properties": {},
          "description": "System number of the BW system. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "Username to access the SAP BW server. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "clientId",
        "server",
        "systemNumber"
      ],
      "description": "Properties specific to this linked service type."
    },
    "SapBwSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "MDX query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapBwSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for SapBW server via MDX."
    },
    "SapCloudForCustomerLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SapCloudForCustomer"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapCloudForCustomerLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SAP Cloud for Customer linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for SAP Cloud for Customer."
    },
    "SapCloudForCustomerLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "url": {
          "type": "object",
          "properties": {},
          "description": "The URL of SAP Cloud for Customer OData API. For example, '[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]'. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The username for Basic authentication. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ],
      "description": "SAP Cloud for Customer linked service properties."
    },
    "SapCloudForCustomerResourceDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SapCloudForCustomerResource"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapCloudForCustomerResourceDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sap Cloud For Customer OData resource dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The path of the SAP Cloud for Customer OData entity."
    },
    "SapCloudForCustomerResourceDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {},
          "description": "The path of the SAP Cloud for Customer OData entity. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "path"
      ],
      "description": "Sap Cloud For Customer OData resource dataset properties."
    },
    "SapCloudForCustomerSink": {
      "type": "object",
      "properties": {
        "httpRequestTimeout": {
          "type": "object",
          "properties": {},
          "description": "The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapCloudForCustomerSink"
          ]
        },
        "writeBehavior": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Insert",
                "Update"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The write behavior for the operation. Default is 'Insert'."
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity SAP Cloud for Customer sink."
    },
    "SapCloudForCustomerSource": {
      "type": "object",
      "properties": {
        "httpRequestTimeout": {
          "type": "object",
          "properties": {},
          "description": "The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "SAP Cloud for Customer OData query. For example, \"$top=1\". Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapCloudForCustomerSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for SAP Cloud for Customer source."
    },
    "SapEccLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SapEcc"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapEccLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SAP ECC linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for SAP ERP Central Component(SAP ECC)."
    },
    "SapEccLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "encryptedCredential": {
          "type": "string",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "url": {
          "type": "string",
          "description": "The URL of SAP ECC OData API. For example, '[https://hostname:port/sap/opu/odata/sap/servicename/]'. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "string",
          "description": "The username for Basic authentication. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ],
      "description": "SAP ECC linked service properties."
    },
    "SapEccResourceDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SapEccResource"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapEccResourceDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sap ECC OData resource dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The path of the SAP ECC OData entity."
    },
    "SapEccResourceDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {},
          "description": "The path of the SAP ECC OData entity. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "path"
      ],
      "description": "Sap ECC OData resource dataset properties."
    },
    "SapEccSource": {
      "type": "object",
      "properties": {
        "httpRequestTimeout": {
          "type": "object",
          "properties": {},
          "description": "The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "SAP ECC OData query. For example, \"$top=1\". Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapEccSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for SAP ECC source."
    },
    "SapHanaLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SapHana"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapHanaLinkedServiceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this linked service type."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "SAP HANA Linked Service."
    },
    "SapHanaLinkedServiceProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Windows"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to be used to connect to the SAP HANA server."
        },
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "SAP HANA ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "server": {
          "type": "object",
          "properties": {},
          "description": "Host name of the SAP HANA server. Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "Username to access the SAP HANA server. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Properties specific to this linked service type."
    },
    "SapHanaPartitionSettings": {
      "type": "object",
      "properties": {
        "partitionColumnName": {
          "type": "object",
          "properties": {},
          "description": "The name of the column that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        }
      },
      "description": "The settings that will be leveraged for SAP HANA source partitioning."
    },
    "SapHanaSource": {
      "type": "object",
      "properties": {
        "packetSize": {
          "type": "object",
          "properties": {},
          "description": "The packet size of data read from SAP HANA. Type: integer(or Expression with resultType integer)."
        },
        "partitionOption": {
          "type": "object",
          "properties": {},
          "description": "The partition mechanism that will be used for SAP HANA read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"SapHanaDynamicRange\". "
        },
        "partitionSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapHanaPartitionSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The settings that will be leveraged for SAP HANA source partitioning."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "SAP HANA Sql query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapHanaSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for SAP HANA source."
    },
    "SapHanaTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SapHanaTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapHanaTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SAP HANA Table properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "SAP HANA Table properties."
    },
    "SapHanaTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of SAP HANA. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of SAP HANA. Type: string (or Expression with resultType string)."
        }
      },
      "description": "SAP HANA Table properties."
    },
    "SapOdpLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SapOdp"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapOdpLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this linked service type."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "SAP ODP Linked Service."
    },
    "SapOdpLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "Client ID of the client on the SAP system where the table is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "language": {
          "type": "object",
          "properties": {},
          "description": "Language of the SAP system where the table is located. The default value is EN. Type: string (or Expression with resultType string)."
        },
        "logonGroup": {
          "type": "object",
          "properties": {},
          "description": "The Logon Group for the SAP System. Type: string (or Expression with resultType string)."
        },
        "messageServer": {
          "type": "object",
          "properties": {},
          "description": "The hostname of the SAP Message Server. Type: string (or Expression with resultType string)."
        },
        "messageServerService": {
          "type": "object",
          "properties": {},
          "description": "The service name or port number of the Message Server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "server": {
          "type": "object",
          "properties": {},
          "description": "Host name of the SAP instance where the table is located. Type: string (or Expression with resultType string)."
        },
        "sncLibraryPath": {
          "type": "object",
          "properties": {},
          "description": "External security product's library to access the SAP server where the table is located. Type: string (or Expression with resultType string)."
        },
        "sncMode": {
          "type": "object",
          "properties": {},
          "description": "SNC activation indicator to access the SAP server where the table is located. Must be either 0 (off) or 1 (on). Type: string (or Expression with resultType string)."
        },
        "sncMyName": {
          "type": "object",
          "properties": {},
          "description": "Initiator's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string)."
        },
        "sncPartnerName": {
          "type": "object",
          "properties": {},
          "description": "Communication partner's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string)."
        },
        "sncQop": {
          "type": "object",
          "properties": {},
          "description": "SNC Quality of Protection. Allowed value include: 1, 2, 3, 8, 9. Type: string (or Expression with resultType string)."
        },
        "subscriberName": {
          "type": "object",
          "properties": {},
          "description": "The subscriber name. Type: string (or Expression with resultType string)."
        },
        "systemId": {
          "type": "object",
          "properties": {},
          "description": "SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string)."
        },
        "systemNumber": {
          "type": "object",
          "properties": {},
          "description": "System number of the SAP system where the table is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "Username to access the SAP server where the table is located. Type: string (or Expression with resultType string)."
        },
        "x509CertificatePath": {
          "type": "object",
          "properties": {},
          "description": "SNC X509 certificate file path. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Properties specific to this linked service type."
    },
    "SapOdpResourceDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SapOdpResource"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapOdpResourceDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SAP ODP Resource properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "SAP ODP Resource properties."
    },
    "SapOdpResourceDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "context": {
          "type": "object",
          "properties": {},
          "description": "The context of the SAP ODP Object. Type: string (or Expression with resultType string)."
        },
        "objectName": {
          "type": "object",
          "properties": {},
          "description": "The name of the SAP ODP Object. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "context",
        "objectName"
      ],
      "description": "SAP ODP Resource properties."
    },
    "SapOdpSource": {
      "type": "object",
      "properties": {
        "extractionMode": {
          "type": "object",
          "properties": {},
          "description": "The extraction mode. Allowed value include: Full, Delta and Recovery. The default value is Full. Type: string (or Expression with resultType string)."
        },
        "projection": {
          "type": "object",
          "properties": {},
          "description": "Specifies the columns to be selected from source data. Type: array of objects(projection) (or Expression with resultType array of objects)."
        },
        "selection": {
          "type": "object",
          "properties": {},
          "description": "Specifies the selection conditions from source data. Type: array of objects(selection) (or Expression with resultType array of objects)."
        },
        "subscriberProcess": {
          "type": "object",
          "properties": {},
          "description": "The subscriber process to manage the delta process. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapOdpSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for SAP ODP source."
    },
    "SapOpenHubLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SapOpenHub"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapOpenHubLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to SAP Business Warehouse Open Hub Destination linked service type."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "SAP Business Warehouse Open Hub Destination Linked Service."
    },
    "SapOpenHubLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "Client ID of the client on the BW system where the open hub destination is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "language": {
          "type": "object",
          "properties": {},
          "description": "Language of the BW system where the open hub destination is located. The default value is EN. Type: string (or Expression with resultType string)."
        },
        "logonGroup": {
          "type": "object",
          "properties": {},
          "description": "The Logon Group for the SAP System. Type: string (or Expression with resultType string)."
        },
        "messageServer": {
          "type": "object",
          "properties": {},
          "description": "The hostname of the SAP Message Server. Type: string (or Expression with resultType string)."
        },
        "messageServerService": {
          "type": "object",
          "properties": {},
          "description": "The service name or port number of the Message Server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "server": {
          "type": "object",
          "properties": {},
          "description": "Host name of the SAP BW instance where the open hub destination is located. Type: string (or Expression with resultType string)."
        },
        "systemId": {
          "type": "object",
          "properties": {},
          "description": "SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string)."
        },
        "systemNumber": {
          "type": "object",
          "properties": {},
          "description": "System number of the BW system where the open hub destination is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "Username to access the SAP BW server where the open hub destination is located. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Properties specific to SAP Business Warehouse Open Hub Destination linked service type."
    },
    "SapOpenHubSource": {
      "type": "object",
      "properties": {
        "baseRequestId": {
          "type": "object",
          "properties": {},
          "description": "The ID of request for delta loading. Once it is set, only data with requestId larger than the value of this property will be retrieved. The default value is 0. Type: integer (or Expression with resultType integer )."
        },
        "customRfcReadTableFunctionModule": {
          "type": "object",
          "properties": {},
          "description": "Specifies the custom RFC function module that will be used to read data from SAP Table. Type: string (or Expression with resultType string)."
        },
        "excludeLastRequest": {
          "type": "object",
          "properties": {},
          "description": "Whether to exclude the records of the last request. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "sapDataColumnDelimiter": {
          "type": "object",
          "properties": {},
          "description": "The single character that will be used as delimiter passed to SAP RFC as well as splitting the output data retrieved. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapOpenHubSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for SAP Business Warehouse Open Hub Destination source."
    },
    "SapOpenHubTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SapOpenHubTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapOpenHubTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sap Business Warehouse Open Hub Destination Table properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Sap Business Warehouse Open Hub Destination Table properties."
    },
    "SapOpenHubTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "baseRequestId": {
          "type": "object",
          "properties": {},
          "description": "The ID of request for delta loading. Once it is set, only data with requestId larger than the value of this property will be retrieved. The default value is 0. Type: integer (or Expression with resultType integer )."
        },
        "excludeLastRequest": {
          "type": "object",
          "properties": {},
          "description": "Whether to exclude the records of the last request. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "openHubDestinationName": {
          "type": "object",
          "properties": {},
          "description": "The name of the Open Hub Destination with destination type as Database Table. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "openHubDestinationName"
      ],
      "description": "Sap Business Warehouse Open Hub Destination Table properties."
    },
    "SapTableLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SapTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapTableLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this linked service type."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "SAP Table Linked Service."
    },
    "SapTableLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "Client ID of the client on the SAP system where the table is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "language": {
          "type": "object",
          "properties": {},
          "description": "Language of the SAP system where the table is located. The default value is EN. Type: string (or Expression with resultType string)."
        },
        "logonGroup": {
          "type": "object",
          "properties": {},
          "description": "The Logon Group for the SAP System. Type: string (or Expression with resultType string)."
        },
        "messageServer": {
          "type": "object",
          "properties": {},
          "description": "The hostname of the SAP Message Server. Type: string (or Expression with resultType string)."
        },
        "messageServerService": {
          "type": "object",
          "properties": {},
          "description": "The service name or port number of the Message Server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "server": {
          "type": "object",
          "properties": {},
          "description": "Host name of the SAP instance where the table is located. Type: string (or Expression with resultType string)."
        },
        "sncLibraryPath": {
          "type": "object",
          "properties": {},
          "description": "External security product's library to access the SAP server where the table is located. Type: string (or Expression with resultType string)."
        },
        "sncMode": {
          "type": "object",
          "properties": {},
          "description": "SNC activation indicator to access the SAP server where the table is located. Must be either 0 (off) or 1 (on). Type: string (or Expression with resultType string)."
        },
        "sncMyName": {
          "type": "object",
          "properties": {},
          "description": "Initiator's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string)."
        },
        "sncPartnerName": {
          "type": "object",
          "properties": {},
          "description": "Communication partner's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string)."
        },
        "sncQop": {
          "type": "object",
          "properties": {},
          "description": "SNC Quality of Protection. Allowed value include: 1, 2, 3, 8, 9. Type: string (or Expression with resultType string)."
        },
        "systemId": {
          "type": "object",
          "properties": {},
          "description": "SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string)."
        },
        "systemNumber": {
          "type": "object",
          "properties": {},
          "description": "System number of the SAP system where the table is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "Username to access the SAP server where the table is located. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Properties specific to this linked service type."
    },
    "SapTablePartitionSettings": {
      "type": "object",
      "properties": {
        "maxPartitionsNumber": {
          "type": "object",
          "properties": {},
          "description": "The maximum value of partitions the table will be split into. Type: integer (or Expression with resultType string)."
        },
        "partitionColumnName": {
          "type": "object",
          "properties": {},
          "description": "The name of the column that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionLowerBound": {
          "type": "object",
          "properties": {},
          "description": "The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionUpperBound": {
          "type": "object",
          "properties": {},
          "description": "The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        }
      },
      "description": "The settings that will be leveraged for SAP table source partitioning."
    },
    "SapTableResourceDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SapTableResource"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapTableResourceDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SAP Table Resource properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "SAP Table Resource properties."
    },
    "SapTableResourceDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The name of the SAP Table. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "tableName"
      ],
      "description": "SAP Table Resource properties."
    },
    "SapTableSource": {
      "type": "object",
      "properties": {
        "batchSize": {
          "type": "object",
          "properties": {},
          "description": "Specifies the maximum number of rows that will be retrieved at a time when retrieving data from SAP Table. Type: integer (or Expression with resultType integer)."
        },
        "customRfcReadTableFunctionModule": {
          "type": "object",
          "properties": {},
          "description": "Specifies the custom RFC function module that will be used to read data from SAP Table. Type: string (or Expression with resultType string)."
        },
        "partitionOption": {
          "type": "object",
          "properties": {},
          "description": "The partition mechanism that will be used for SAP table read in parallel. Possible values include: \"None\", \"PartitionOnInt\", \"PartitionOnCalendarYear\", \"PartitionOnCalendarMonth\", \"PartitionOnCalendarDate\", \"PartitionOnTime\"."
        },
        "partitionSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapTablePartitionSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The settings that will be leveraged for SAP table source partitioning."
        },
        "rfcTableFields": {
          "type": "object",
          "properties": {},
          "description": "The fields of the SAP table that will be retrieved. For example, column0, column1. Type: string (or Expression with resultType string)."
        },
        "rfcTableOptions": {
          "type": "object",
          "properties": {},
          "description": "The options for the filtering of the SAP Table. For example, COLUMN0 EQ SOME VALUE. Type: string (or Expression with resultType string)."
        },
        "rowCount": {
          "type": "object",
          "properties": {},
          "description": "The number of rows to be retrieved. Type: integer(or Expression with resultType integer)."
        },
        "rowSkips": {
          "type": "object",
          "properties": {},
          "description": "The number of rows that will be skipped. Type: integer (or Expression with resultType integer)."
        },
        "sapDataColumnDelimiter": {
          "type": "object",
          "properties": {},
          "description": "The single character that will be used as delimiter passed to SAP RFC as well as splitting the output data retrieved. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapTableSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for SAP Table source."
    },
    "ScheduleTrigger": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ScheduleTrigger"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ScheduleTriggerTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Schedule Trigger properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Trigger that creates pipeline runs periodically, on schedule."
    },
    "ScheduleTriggerRecurrence": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time."
        },
        "frequency": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "NotSpecified",
                "Minute",
                "Hour",
                "Day",
                "Week",
                "Month",
                "Year"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The frequency."
        },
        "interval": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The interval."
        },
        "schedule": {
          "oneOf": [
            {
              "$ref": "#/definitions/RecurrenceSchedule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The recurrence schedule."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone."
        }
      },
      "description": "The workflow trigger recurrence."
    },
    "ScheduleTriggerTypeProperties": {
      "type": "object",
      "properties": {
        "recurrence": {
          "oneOf": [
            {
              "$ref": "#/definitions/ScheduleTriggerRecurrence"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The workflow trigger recurrence."
        }
      },
      "required": [
        "recurrence"
      ],
      "description": "Schedule Trigger properties."
    },
    "ScriptAction": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The user provided name of the script action."
        },
        "parameters": {
          "type": "string",
          "description": "The parameters for the script action."
        },
        "roles": {
          "type": "object",
          "properties": {},
          "description": "The node types on which the script action should be executed."
        },
        "uri": {
          "type": "string",
          "description": "The URI for the script action."
        }
      },
      "required": [
        "name",
        "roles",
        "uri"
      ],
      "description": "Custom script action to run on HDI ondemand cluster once it's up."
    },
    "ScriptActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Script"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ScriptActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Script activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Script activity type."
    },
    "ScriptActivityParameter": {
      "type": "object",
      "properties": {
        "direction": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Input",
                "Output",
                "InputOutput"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The direction of the parameter."
        },
        "name": {
          "type": "object",
          "properties": {},
          "description": "The name of the parameter. Type: string (or Expression with resultType string)."
        },
        "size": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The size of the output direction parameter."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Boolean",
                "DateTime",
                "DateTimeOffset",
                "Decimal",
                "Double",
                "Guid",
                "Int16",
                "Int32",
                "Int64",
                "Single",
                "String",
                "Timespan"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of the parameter."
        },
        "value": {
          "type": "object",
          "properties": {},
          "description": "The value of the parameter."
        }
      },
      "description": "Parameters of a script block."
    },
    "ScriptActivityScriptBlock": {
      "type": "object",
      "properties": {
        "parameters": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScriptActivityParameter"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Array of script parameters. Type: array."
        },
        "text": {
          "type": "object",
          "properties": {},
          "description": "The query text. Type: string (or Expression with resultType string)."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Query",
                "NonQuery"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of the query. Type: string."
        }
      },
      "required": [
        "text",
        "type"
      ],
      "description": "Script block of scripts."
    },
    "ScriptActivityTypeProperties": {
      "type": "object",
      "properties": {
        "logSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/ScriptActivityTypePropertiesLogSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Log settings of script activity."
        },
        "scripts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScriptActivityScriptBlock"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Array of script blocks. Type: array."
        }
      },
      "description": "Script activity properties."
    },
    "ScriptActivityTypePropertiesLogSettings": {
      "type": "object",
      "properties": {
        "logDestination": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "ActivityOutput",
                "ExternalStore"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The destination of logs. Type: string."
        },
        "logLocationSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/LogLocationSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Log location settings."
        }
      },
      "required": [
        "logDestination"
      ],
      "description": "Log settings of script activity."
    },
    "SecretBase": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/SecureString"
        },
        {
          "$ref": "#/definitions/AzureKeyVaultSecretReference"
        }
      ],
      "properties": {},
      "description": "The base definition of a secret type."
    },
    "SecureString": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SecureString"
          ]
        },
        "value": {
          "type": "string",
          "description": "Value of secure string."
        }
      },
      "required": [
        "type",
        "value"
      ],
      "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls."
    },
    "SelfDependencyTumblingWindowTriggerReference": {
      "type": "object",
      "properties": {
        "offset": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "-((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))",
              "minLength": 8,
              "maxLength": 15
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Timespan applied to the start time of a tumbling window when evaluating dependency."
        },
        "size": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))",
              "minLength": 8,
              "maxLength": 15
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The size of the window when evaluating the dependency. If undefined the frequency of the tumbling window will be used."
        },
        "type": {
          "type": "string",
          "enum": [
            "SelfDependencyTumblingWindowTriggerReference"
          ]
        }
      },
      "required": [
        "offset",
        "type"
      ],
      "description": "Self referenced tumbling window trigger dependency."
    },
    "SelfHostedIntegrationRuntime": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SelfHosted"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SelfHostedIntegrationRuntimeTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The self-hosted integration runtime properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "Self-hosted integration runtime."
    },
    "SelfHostedIntegrationRuntimeTypeProperties": {
      "type": "object",
      "properties": {
        "linkedInfo": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedIntegrationRuntimeType"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a linked integration runtime."
        }
      },
      "description": "The self-hosted integration runtime properties."
    },
    "ServiceNowLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ServiceNow"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ServiceNowLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "ServiceNow server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "ServiceNow server linked service."
    },
    "ServiceNowLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "OAuth2"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to use."
        },
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client id for OAuth2 authentication."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "endpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)"
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication."
        }
      },
      "required": [
        "authenticationType",
        "endpoint"
      ],
      "description": "ServiceNow server linked service properties."
    },
    "ServiceNowObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ServiceNowObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "ServiceNow server dataset."
    },
    "ServiceNowSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "ServiceNowSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity ServiceNow server source."
    },
    "SetVariableActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SetVariable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SetVariableActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SetVariable activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Set value for a Variable."
    },
    "SetVariableActivityTypeProperties": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "properties": {},
          "description": "Value to be set. Could be a static value or Expression"
        },
        "variableName": {
          "type": "string",
          "description": "Name of the variable whose value needs to be set."
        }
      },
      "description": "SetVariable activity properties."
    },
    "SftpLocation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SftpLocation"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The location of SFTP dataset."
    },
    "SftpReadSettings": {
      "type": "object",
      "properties": {
        "deleteFilesAfterCompletion": {
          "type": "object",
          "properties": {},
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "disableChunking": {
          "type": "object",
          "properties": {},
          "description": "If true, disable parallel reading within each file. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "enablePartitionDiscovery": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether to enable partition discovery."
        },
        "fileListPath": {
          "type": "object",
          "properties": {},
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "properties": {},
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "properties": {},
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "partitionRootPath": {
          "type": "object",
          "properties": {},
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SftpReadSettings"
          ]
        },
        "wildcardFileName": {
          "type": "object",
          "properties": {},
          "description": "Sftp wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "properties": {},
          "description": "Sftp wildcardFolderPath. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "Sftp read settings."
    },
    "SftpServerLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Sftp"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SftpServerLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this linked service type."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "A linked service for an SSH File Transfer Protocol (SFTP) server. "
    },
    "SftpServerLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "SshPublicKey",
                "MultiFactor"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to be used to connect to the FTP server."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "The SFTP server host name. Type: string (or Expression with resultType string)."
        },
        "hostKeyFingerprint": {
          "type": "object",
          "properties": {},
          "description": "The host key finger-print of the SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should be specified. Type: string (or Expression with resultType string)."
        },
        "passPhrase": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port number that the SFTP server uses to listen for client connections. Default value is 22. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "privateKeyContent": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "privateKeyPath": {
          "type": "object",
          "properties": {},
          "description": "The SSH private key file path for SshPublicKey authentication. Only valid for on-premises copy. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format. Type: string (or Expression with resultType string)."
        },
        "skipHostKeyValidation": {
          "type": "object",
          "properties": {},
          "description": "If true, skip the SSH host key validation. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "The username used to log on to the SFTP server. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ],
      "description": "Properties specific to this linked service type."
    },
    "SftpWriteSettings": {
      "type": "object",
      "properties": {
        "operationTimeout": {
          "type": "object",
          "properties": {},
          "description": "Specifies the timeout for writing each chunk to SFTP server. Default value: 01:00:00 (one hour). Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SftpWriteSettings"
          ]
        },
        "useTempFileRename": {
          "type": "object",
          "properties": {},
          "description": "Upload to temporary file(s) and rename. Disable this option if your SFTP server doesn't support rename operation. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "type"
      ],
      "description": "Sftp write settings."
    },
    "SharePointOnlineListDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "listName": {
          "type": "object",
          "properties": {},
          "description": "The name of the SharePoint Online list. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Sharepoint online list dataset properties."
    },
    "SharePointOnlineListLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SharePointOnlineList"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SharePointOnlineListLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SharePoint Online List linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "SharePoint Online List linked service."
    },
    "SharePointOnlineListLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The application (client) ID of your application registered in Azure Active Directory. Make sure to grant SharePoint site permission to this application. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "siteUrl": {
          "type": "object",
          "properties": {},
          "description": "The URL of the SharePoint Online site. For example, https://contoso.sharepoint.com/sites/siteName. Type: string (or Expression with resultType string)."
        },
        "tenantId": {
          "type": "object",
          "properties": {},
          "description": "The tenant ID under which your application resides. You can find it from Azure portal Active Directory overview page. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "servicePrincipalId",
        "servicePrincipalKey",
        "siteUrl",
        "tenantId"
      ],
      "description": "SharePoint Online List linked service properties."
    },
    "SharePointOnlineListResourceDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SharePointOnlineListResource"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SharePointOnlineListDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sharepoint online list dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The sharepoint online list resource dataset."
    },
    "SharePointOnlineListSource": {
      "type": "object",
      "properties": {
        "httpRequestTimeout": {
          "type": "object",
          "properties": {},
          "description": "The wait time to get a response from SharePoint Online. Default value is 5 minutes (00:05:00). Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "The OData query to filter the data in SharePoint Online list. For example, \"$top=1\". Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SharePointOnlineListSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for sharePoint online list source."
    },
    "ShopifyLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Shopify"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ShopifyLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Shopify Service linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Shopify Service linked service."
    },
    "ShopifyLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accessToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Shopify server. (i.e. mystore.myshopify.com)"
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        }
      },
      "required": [
        "host"
      ],
      "description": "Shopify Service linked service properties."
    },
    "ShopifyObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ShopifyObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Shopify Service dataset."
    },
    "ShopifySource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "ShopifySource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Shopify Service source."
    },
    "SkipErrorFile": {
      "type": "object",
      "properties": {
        "dataInconsistency": {
          "type": "object",
          "properties": {},
          "description": "Skip if source/sink file changed by other concurrent write. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "fileMissing": {
          "type": "object",
          "properties": {},
          "description": "Skip if file is deleted by other client during copy. Default is true. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "description": "Skip error file."
    },
    "SmartsheetLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Smartsheet"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SmartsheetLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Smartsheet linked service type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Smartsheet."
    },
    "SmartsheetLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "apiToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "apiToken"
      ],
      "description": "Smartsheet linked service type properties."
    },
    "SnowflakeDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SnowflakeTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SnowflakeDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Snowflake dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The snowflake dataset."
    },
    "SnowflakeDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the Snowflake database. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Snowflake database. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Snowflake dataset properties."
    },
    "SnowflakeExportCopyCommand": {
      "type": "object",
      "properties": {
        "additionalCopyOptions": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Additional copy options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: \"additionalCopyOptions\": { \"DATE_FORMAT\": \"MM/DD/YYYY\", \"TIME_FORMAT\": \"'HH24:MI:SS.FF'\" }"
        },
        "additionalFormatOptions": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Additional format options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: \"additionalFormatOptions\": { \"OVERWRITE\": \"TRUE\", \"MAX_FILE_SIZE\": \"'FALSE'\" }"
        },
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        }
      },
      "description": "Snowflake export command settings."
    },
    "SnowflakeImportCopyCommand": {
      "type": "object",
      "properties": {
        "additionalCopyOptions": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Additional copy options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: \"additionalCopyOptions\": { \"DATE_FORMAT\": \"MM/DD/YYYY\", \"TIME_FORMAT\": \"'HH24:MI:SS.FF'\" }"
        },
        "additionalFormatOptions": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Additional format options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: \"additionalFormatOptions\": { \"FORCE\": \"TRUE\", \"LOAD_UNCERTAIN_FILES\": \"'FALSE'\" }"
        },
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        }
      },
      "description": "Snowflake import command settings."
    },
    "SnowflakeLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Snowflake"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SnowflakeLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Snowflake linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Snowflake linked service."
    },
    "SnowflakeLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string of snowflake. Type: string, SecureString."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "Snowflake linked service properties."
    },
    "SnowflakeSink": {
      "type": "object",
      "properties": {
        "importSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SnowflakeImportCopyCommand"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Snowflake import command settings."
        },
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SnowflakeSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity snowflake sink."
    },
    "SnowflakeSource": {
      "type": "object",
      "properties": {
        "exportSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SnowflakeExportCopyCommand"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Snowflake export command settings."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "Snowflake Sql query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SnowflakeSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity snowflake source."
    },
    "SparkDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the Spark. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Spark. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "Spark Properties"
    },
    "SparkLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Spark"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SparkLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Spark Server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Spark Server linked service."
    },
    "SparkLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "allowHostNameCNMismatch": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
        },
        "allowSelfSignedServerCert": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Anonymous",
                "Username",
                "UsernameAndPassword",
                "WindowsAzureHDInsightService"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication method used to access the Spark server."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "IP address or host name of the Spark server"
        },
        "httpPath": {
          "type": "object",
          "properties": {},
          "description": "The partial URL corresponding to the Spark server."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port that the Spark server uses to listen for client connections."
        },
        "serverType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SharkServer",
                "SharkServer2",
                "SparkThriftServer"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of Spark server."
        },
        "thriftTransportProtocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Binary",
                "SASL",
                "HTTP "
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The transport protocol to use in the Thrift layer."
        },
        "trustedCertPath": {
          "type": "object",
          "properties": {},
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name that you use to access Spark Server."
        },
        "useSystemTrustStore": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
        }
      },
      "required": [
        "authenticationType",
        "host",
        "port"
      ],
      "description": "Spark Server linked service properties."
    },
    "SparkObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SparkObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SparkDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Spark Properties"
        }
      },
      "required": [
        "type"
      ],
      "description": "Spark Server dataset."
    },
    "SparkSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SparkSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Spark Server source."
    },
    "SqlAlwaysEncryptedProperties": {
      "type": "object",
      "properties": {
        "alwaysEncryptedAkvAuthType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "ServicePrincipal",
                "ManagedIdentity",
                "UserAssignedManagedIdentity"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sql always encrypted AKV authentication type. Type: string (or Expression with resultType string)."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The client ID of the application in Azure Active Directory used for Azure Key Vault authentication. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        }
      },
      "required": [
        "alwaysEncryptedAkvAuthType"
      ],
      "description": "Sql always encrypted properties."
    },
    "SqlDWSink": {
      "type": "object",
      "properties": {
        "allowCopyCommand": {
          "type": "object",
          "properties": {},
          "description": "Indicates to use Copy Command to copy data into SQL Data Warehouse. Type: boolean (or Expression with resultType boolean)."
        },
        "allowPolyBase": {
          "type": "object",
          "properties": {},
          "description": "Indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean)."
        },
        "copyCommandSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/DWCopyCommandSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "DW Copy Command settings."
        },
        "polyBaseSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/PolybaseSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "PolyBase settings."
        },
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "sqlWriterUseTableLock": {
          "type": "object",
          "properties": {},
          "description": "Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean)."
        },
        "tableOption": {
          "type": "object",
          "properties": {},
          "description": "The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SqlDWSink"
          ]
        },
        "upsertSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlDWUpsertSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sql DW upsert option settings"
        },
        "writeBehavior": {
          "type": "object",
          "properties": {},
          "description": "Write behavior when copying data into azure SQL DW. Type: SqlDWWriteBehaviorEnum (or Expression with resultType SqlDWWriteBehaviorEnum)"
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity SQL Data Warehouse sink."
    },
    "SqlDWSource": {
      "type": "object",
      "properties": {
        "partitionOption": {
          "type": "object",
          "properties": {},
          "description": "The partition mechanism that will be used for Sql read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\"."
        },
        "partitionSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlPartitionSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The settings that will be leveraged for Sql source partitioning."
        },
        "sqlReaderQuery": {
          "type": "object",
          "properties": {},
          "description": "SQL Data Warehouse reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "properties": {},
          "description": "Name of the stored procedure for a SQL Data Warehouse source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "type": "object",
          "properties": {},
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\". Type: object (or Expression with resultType object), itemType: StoredProcedureParameter."
        },
        "type": {
          "type": "string",
          "enum": [
            "SqlDWSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity SQL Data Warehouse source."
    },
    "SqlDWUpsertSettings": {
      "type": "object",
      "properties": {
        "interimSchemaName": {
          "type": "object",
          "properties": {},
          "description": "Schema name for interim table. Type: string (or Expression with resultType string)."
        },
        "keys": {
          "type": "object",
          "properties": {},
          "description": "Key column names for unique row identification. Type: array of strings (or Expression with resultType array of strings)."
        }
      },
      "description": "Sql DW upsert option settings"
    },
    "SqlMISink": {
      "type": "object",
      "properties": {
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "sqlWriterStoredProcedureName": {
          "type": "object",
          "properties": {},
          "description": "SQL writer stored procedure name. Type: string (or Expression with resultType string)."
        },
        "sqlWriterTableType": {
          "type": "object",
          "properties": {},
          "description": "SQL writer table type. Type: string (or Expression with resultType string)."
        },
        "sqlWriterUseTableLock": {
          "type": "object",
          "properties": {},
          "description": "Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean)."
        },
        "storedProcedureParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/StoredProcedureParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SQL stored procedure parameters."
        },
        "storedProcedureTableTypeParameterName": {
          "type": "object",
          "properties": {},
          "description": "The stored procedure parameter name of the table type. Type: string (or Expression with resultType string)."
        },
        "tableOption": {
          "type": "object",
          "properties": {},
          "description": "The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SqlMISink"
          ]
        },
        "upsertSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlUpsertSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sql upsert option settings"
        },
        "writeBehavior": {
          "type": "object",
          "properties": {},
          "description": "White behavior when copying data into azure SQL MI. Type: SqlWriteBehaviorEnum (or Expression with resultType SqlWriteBehaviorEnum)"
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure SQL Managed Instance sink."
    },
    "SqlMISource": {
      "type": "object",
      "properties": {
        "partitionOption": {
          "type": "object",
          "properties": {},
          "description": "The partition mechanism that will be used for Sql read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\"."
        },
        "partitionSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlPartitionSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The settings that will be leveraged for Sql source partitioning."
        },
        "produceAdditionalTypes": {
          "type": "object",
          "properties": {},
          "description": "Which additional types to produce."
        },
        "sqlReaderQuery": {
          "type": "object",
          "properties": {},
          "description": "SQL reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "properties": {},
          "description": "Name of the stored procedure for a Azure SQL Managed Instance source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/StoredProcedureParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\"."
        },
        "type": {
          "type": "string",
          "enum": [
            "SqlMISource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure SQL Managed Instance source."
    },
    "SqlPartitionSettings": {
      "type": "object",
      "properties": {
        "partitionColumnName": {
          "type": "object",
          "properties": {},
          "description": "The name of the column in integer or datetime type that will be used for proceeding partitioning. If not specified, the primary key of the table is auto-detected and used as the partition column. Type: string (or Expression with resultType string)."
        },
        "partitionLowerBound": {
          "type": "object",
          "properties": {},
          "description": "The minimum value of the partition column for partition range splitting. This value is used to decide the partition stride, not for filtering the rows in table. All rows in the table or query result will be partitioned and copied. Type: string (or Expression with resultType string)."
        },
        "partitionUpperBound": {
          "type": "object",
          "properties": {},
          "description": "The maximum value of the partition column for partition range splitting. This value is used to decide the partition stride, not for filtering the rows in table. All rows in the table or query result will be partitioned and copied. Type: string (or Expression with resultType string)."
        }
      },
      "description": "The settings that will be leveraged for Sql source partitioning."
    },
    "SqlServerLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SqlServer"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlServerLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SQL Server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "SQL Server linked service."
    },
    "SqlServerLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "alwaysEncryptedSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlAlwaysEncryptedProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sql always encrypted properties."
        },
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "The on-premises Windows authentication user name. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "SQL Server linked service properties."
    },
    "SqlServerSink": {
      "type": "object",
      "properties": {
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "sqlWriterStoredProcedureName": {
          "type": "object",
          "properties": {},
          "description": "SQL writer stored procedure name. Type: string (or Expression with resultType string)."
        },
        "sqlWriterTableType": {
          "type": "object",
          "properties": {},
          "description": "SQL writer table type. Type: string (or Expression with resultType string)."
        },
        "sqlWriterUseTableLock": {
          "type": "object",
          "properties": {},
          "description": "Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean)."
        },
        "storedProcedureParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/StoredProcedureParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SQL stored procedure parameters."
        },
        "storedProcedureTableTypeParameterName": {
          "type": "object",
          "properties": {},
          "description": "The stored procedure parameter name of the table type. Type: string (or Expression with resultType string)."
        },
        "tableOption": {
          "type": "object",
          "properties": {},
          "description": "The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SqlServerSink"
          ]
        },
        "upsertSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlUpsertSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sql upsert option settings"
        },
        "writeBehavior": {
          "type": "object",
          "properties": {},
          "description": "Write behavior when copying data into sql server. Type: SqlWriteBehaviorEnum (or Expression with resultType SqlWriteBehaviorEnum)"
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity SQL server sink."
    },
    "SqlServerSource": {
      "type": "object",
      "properties": {
        "partitionOption": {
          "type": "object",
          "properties": {},
          "description": "The partition mechanism that will be used for Sql read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\"."
        },
        "partitionSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlPartitionSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The settings that will be leveraged for Sql source partitioning."
        },
        "produceAdditionalTypes": {
          "type": "object",
          "properties": {},
          "description": "Which additional types to produce."
        },
        "sqlReaderQuery": {
          "type": "object",
          "properties": {},
          "description": "SQL reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "properties": {},
          "description": "Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/StoredProcedureParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\"."
        },
        "type": {
          "type": "string",
          "enum": [
            "SqlServerSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity SQL server source."
    },
    "SqlServerStoredProcedureActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SqlServerStoredProcedure"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlServerStoredProcedureActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SQL stored procedure activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "SQL stored procedure activity type."
    },
    "SqlServerStoredProcedureActivityTypeProperties": {
      "type": "object",
      "properties": {
        "storedProcedureName": {
          "type": "object",
          "properties": {},
          "description": "Stored procedure name. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "type": "object",
          "properties": {},
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\"."
        }
      },
      "required": [
        "storedProcedureName"
      ],
      "description": "SQL stored procedure activity properties."
    },
    "SqlServerTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SqlServerTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlServerTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "On-premises SQL Server dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The on-premises SQL Server dataset."
    },
    "SqlServerTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the SQL Server dataset. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the SQL Server dataset. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "On-premises SQL Server dataset properties."
    },
    "SqlSink": {
      "type": "object",
      "properties": {
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "sqlWriterStoredProcedureName": {
          "type": "object",
          "properties": {},
          "description": "SQL writer stored procedure name. Type: string (or Expression with resultType string)."
        },
        "sqlWriterTableType": {
          "type": "object",
          "properties": {},
          "description": "SQL writer table type. Type: string (or Expression with resultType string)."
        },
        "sqlWriterUseTableLock": {
          "type": "object",
          "properties": {},
          "description": "Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean)."
        },
        "storedProcedureParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/StoredProcedureParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SQL stored procedure parameters."
        },
        "storedProcedureTableTypeParameterName": {
          "type": "object",
          "properties": {},
          "description": "The stored procedure parameter name of the table type. Type: string (or Expression with resultType string)."
        },
        "tableOption": {
          "type": "object",
          "properties": {},
          "description": "The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SqlSink"
          ]
        },
        "upsertSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlUpsertSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sql upsert option settings"
        },
        "writeBehavior": {
          "type": "object",
          "properties": {},
          "description": "Write behavior when copying data into sql. Type: SqlWriteBehaviorEnum (or Expression with resultType SqlWriteBehaviorEnum)"
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity SQL sink."
    },
    "SqlSource": {
      "type": "object",
      "properties": {
        "isolationLevel": {
          "type": "object",
          "properties": {},
          "description": "Specifies the transaction locking behavior for the SQL source. Allowed values: ReadCommitted/ReadUncommitted/RepeatableRead/Serializable/Snapshot. The default value is ReadCommitted. Type: string (or Expression with resultType string)."
        },
        "partitionOption": {
          "type": "object",
          "properties": {},
          "description": "The partition mechanism that will be used for Sql read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\"."
        },
        "partitionSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlPartitionSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The settings that will be leveraged for Sql source partitioning."
        },
        "sqlReaderQuery": {
          "type": "object",
          "properties": {},
          "description": "SQL reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "properties": {},
          "description": "Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/StoredProcedureParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\"."
        },
        "type": {
          "type": "string",
          "enum": [
            "SqlSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity SQL source."
    },
    "SqlUpsertSettings": {
      "type": "object",
      "properties": {
        "interimSchemaName": {
          "type": "object",
          "properties": {},
          "description": "Schema name for interim table. Type: string (or Expression with resultType string)."
        },
        "keys": {
          "type": "object",
          "properties": {},
          "description": "Key column names for unique row identification. Type: array of strings (or Expression with resultType array of strings)."
        },
        "useTempDB": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use temp db for upsert interim table. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "description": "Sql upsert option settings"
    },
    "SquareLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Square"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SquareLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Square Service linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Square Service linked service."
    },
    "SquareLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client ID associated with your Square application."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "connectionProperties": {
          "type": "object",
          "properties": {},
          "description": "Properties used to connect to Square. It is mutually exclusive with any other properties in the linked service. Type: object."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "The URL of the Square instance. (i.e. mystore.mysquare.com)"
        },
        "redirectUri": {
          "type": "object",
          "properties": {},
          "description": "The redirect URL assigned in the Square application dashboard. (i.e. http://localhost:2500)"
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        }
      },
      "description": "Square Service linked service properties."
    },
    "SquareObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SquareObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Square Service dataset."
    },
    "SquareSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SquareSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Square Service source."
    },
    "SSISAccessCredential": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "object",
          "properties": {},
          "description": "Domain for windows authentication."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "UseName for windows authentication."
        }
      },
      "required": [
        "domain",
        "password",
        "userName"
      ],
      "description": "SSIS access credential."
    },
    "SSISChildPackage": {
      "type": "object",
      "properties": {
        "packageContent": {
          "type": "object",
          "properties": {},
          "description": "Content for embedded child package. Type: string (or Expression with resultType string)."
        },
        "packageLastModifiedDate": {
          "type": "string",
          "description": "Last modified date for embedded child package."
        },
        "packageName": {
          "type": "string",
          "description": "Name for embedded child package."
        },
        "packagePath": {
          "type": "object",
          "properties": {},
          "description": "Path for embedded child package. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "packageContent",
        "packagePath"
      ],
      "description": "SSIS embedded child package."
    },
    "SSISExecutionCredential": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "object",
          "properties": {},
          "description": "Domain for windows authentication."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecureString"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "UseName for windows authentication."
        }
      },
      "required": [
        "domain",
        "password",
        "userName"
      ],
      "description": "SSIS package execution credential."
    },
    "SSISExecutionParameter": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "properties": {},
          "description": "SSIS package execution parameter value. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "value"
      ],
      "description": "SSIS execution parameter."
    },
    "SSISLogLocation": {
      "type": "object",
      "properties": {
        "logPath": {
          "type": "object",
          "properties": {},
          "description": "The SSIS package execution log path. Type: string (or Expression with resultType string)."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "File"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of SSIS log location."
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SSISLogLocationTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS package execution log location properties."
        }
      },
      "required": [
        "logPath",
        "type",
        "typeProperties"
      ],
      "description": "SSIS package execution log location"
    },
    "SSISLogLocationTypeProperties": {
      "type": "object",
      "properties": {
        "accessCredential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SSISAccessCredential"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS access credential."
        },
        "logRefreshInterval": {
          "type": "object",
          "properties": {},
          "description": "Specifies the interval to refresh log. The default interval is 5 minutes. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      },
      "description": "SSIS package execution log location properties."
    },
    "SSISPackageLocation": {
      "type": "object",
      "properties": {
        "packagePath": {
          "type": "object",
          "properties": {},
          "description": "The SSIS package path. Type: string (or Expression with resultType string)."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SSISDB",
                "File",
                "InlinePackage",
                "PackageStore"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of SSIS package location."
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SSISPackageLocationTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS package location properties."
        }
      },
      "description": "SSIS package location."
    },
    "SSISPackageLocationTypeProperties": {
      "type": "object",
      "properties": {
        "accessCredential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SSISAccessCredential"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS access credential."
        },
        "childPackages": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SSISChildPackage"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The embedded child package list."
        },
        "configurationAccessCredential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SSISAccessCredential"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS access credential."
        },
        "configurationPath": {
          "type": "object",
          "properties": {},
          "description": "The configuration file of the package execution. Type: string (or Expression with resultType string)."
        },
        "packageContent": {
          "type": "object",
          "properties": {},
          "description": "The embedded package content. Type: string (or Expression with resultType string)."
        },
        "packageLastModifiedDate": {
          "type": "string",
          "description": "The embedded package last modified date."
        },
        "packageName": {
          "type": "string",
          "description": "The package name."
        },
        "packagePassword": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        }
      },
      "description": "SSIS package location properties."
    },
    "SSISPropertyOverride": {
      "type": "object",
      "properties": {
        "isSensitive": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether SSIS package property override value is sensitive data. Value will be encrypted in SSISDB if it is true"
        },
        "value": {
          "type": "object",
          "properties": {},
          "description": "SSIS package property override value. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "value"
      ],
      "description": "SSIS property override."
    },
    "StagingSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "enableCompression": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use compression when copying data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "path": {
          "type": "object",
          "properties": {},
          "description": "The path to storage for storing the interim data. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "linkedServiceName"
      ],
      "description": "Staging settings."
    },
    "StoredProcedureParameter": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "String",
                "Int",
                "Int64",
                "Decimal",
                "Guid",
                "Boolean",
                "Date"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Stored procedure parameter type."
        },
        "value": {
          "type": "object",
          "properties": {},
          "description": "Stored procedure parameter value. Type: string (or Expression with resultType string)."
        }
      },
      "description": "SQL stored procedure parameter."
    },
    "StoreReadSettings": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/AzureBlobStorageReadSettings"
        },
        {
          "$ref": "#/definitions/AzureBlobFSReadSettings"
        },
        {
          "$ref": "#/definitions/AzureDataLakeStoreReadSettings"
        },
        {
          "$ref": "#/definitions/AmazonS3ReadSettings"
        },
        {
          "$ref": "#/definitions/FileServerReadSettings"
        },
        {
          "$ref": "#/definitions/AzureFileStorageReadSettings"
        },
        {
          "$ref": "#/definitions/AmazonS3CompatibleReadSettings"
        },
        {
          "$ref": "#/definitions/OracleCloudStorageReadSettings"
        },
        {
          "$ref": "#/definitions/GoogleCloudStorageReadSettings"
        },
        {
          "$ref": "#/definitions/FtpReadSettings"
        },
        {
          "$ref": "#/definitions/SftpReadSettings"
        },
        {
          "$ref": "#/definitions/HttpReadSettings"
        },
        {
          "$ref": "#/definitions/HdfsReadSettings"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "disableMetricsCollection": {
          "type": "object",
          "properties": {},
          "description": "If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "maxConcurrentConnections": {
          "type": "object",
          "properties": {},
          "description": "The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer)."
        }
      },
      "description": "Connector read setting."
    },
    "StoreWriteSettings": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/SftpWriteSettings"
        },
        {
          "$ref": "#/definitions/AzureBlobStorageWriteSettings"
        },
        {
          "$ref": "#/definitions/AzureBlobFSWriteSettings"
        },
        {
          "$ref": "#/definitions/AzureDataLakeStoreWriteSettings"
        },
        {
          "$ref": "#/definitions/FileServerWriteSettings"
        },
        {
          "$ref": "#/definitions/AzureFileStorageWriteSettings"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "copyBehavior": {
          "type": "object",
          "properties": {},
          "description": "The type of copy behavior for copy sink."
        },
        "disableMetricsCollection": {
          "type": "object",
          "properties": {},
          "description": "If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "maxConcurrentConnections": {
          "type": "object",
          "properties": {},
          "description": "The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer)."
        }
      },
      "description": "Connector write settings."
    },
    "SwitchActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Switch"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SwitchActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Switch activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "This activity evaluates an expression and executes activities under the cases property that correspond to the expression evaluation expected in the equals property."
    },
    "SwitchActivityTypeProperties": {
      "type": "object",
      "properties": {
        "cases": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SwitchCase"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of cases that correspond to expected values of the 'on' property. This is an optional property and if not provided, the activity will execute activities provided in defaultActivities."
        },
        "defaultActivities": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Activity"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of activities to execute if no case condition is satisfied. This is an optional property and if not provided, the activity will exit without any action."
        },
        "on": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory expression definition."
        }
      },
      "required": [
        "on"
      ],
      "description": "Switch activity properties."
    },
    "SwitchCase": {
      "type": "object",
      "properties": {
        "activities": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Activity"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of activities to execute for satisfied case condition."
        },
        "value": {
          "type": "string",
          "description": "Expected value that satisfies the expression result of the 'on' property."
        }
      },
      "description": "Switch cases with have a value and corresponding activities."
    },
    "SybaseLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Sybase"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SybaseLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sybase linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Sybase data source."
    },
    "SybaseLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Windows"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "AuthenticationType to be used for connection."
        },
        "database": {
          "type": "object",
          "properties": {},
          "description": "Database name for connection. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "schema": {
          "type": "object",
          "properties": {},
          "description": "Schema name for connection. Type: string (or Expression with resultType string)."
        },
        "server": {
          "type": "object",
          "properties": {},
          "description": "Server name for connection. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "database",
        "server"
      ],
      "description": "Sybase linked service properties."
    },
    "SybaseSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SybaseSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for Sybase databases."
    },
    "SybaseTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SybaseTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SybaseTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sybase table dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Sybase table dataset."
    },
    "SybaseTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The Sybase table name. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Sybase table dataset properties."
    },
    "TabularSource": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/AzureTableSource"
        },
        {
          "$ref": "#/definitions/InformixSource"
        },
        {
          "$ref": "#/definitions/Db2Source"
        },
        {
          "$ref": "#/definitions/OdbcSource"
        },
        {
          "$ref": "#/definitions/MySqlSource"
        },
        {
          "$ref": "#/definitions/PostgreSqlSource"
        },
        {
          "$ref": "#/definitions/SybaseSource"
        },
        {
          "$ref": "#/definitions/SapBwSource"
        },
        {
          "$ref": "#/definitions/SalesforceSource"
        },
        {
          "$ref": "#/definitions/SapCloudForCustomerSource"
        },
        {
          "$ref": "#/definitions/SapEccSource"
        },
        {
          "$ref": "#/definitions/SapHanaSource"
        },
        {
          "$ref": "#/definitions/SapOpenHubSource"
        },
        {
          "$ref": "#/definitions/SapOdpSource"
        },
        {
          "$ref": "#/definitions/SapTableSource"
        },
        {
          "$ref": "#/definitions/SqlSource"
        },
        {
          "$ref": "#/definitions/SqlServerSource"
        },
        {
          "$ref": "#/definitions/AmazonRdsForSqlServerSource"
        },
        {
          "$ref": "#/definitions/AzureSqlSource"
        },
        {
          "$ref": "#/definitions/SqlMISource"
        },
        {
          "$ref": "#/definitions/SqlDWSource"
        },
        {
          "$ref": "#/definitions/AzureMySqlSource"
        },
        {
          "$ref": "#/definitions/TeradataSource"
        },
        {
          "$ref": "#/definitions/CassandraSource"
        },
        {
          "$ref": "#/definitions/AmazonMWSSource"
        },
        {
          "$ref": "#/definitions/AzurePostgreSqlSource"
        },
        {
          "$ref": "#/definitions/ConcurSource"
        },
        {
          "$ref": "#/definitions/CouchbaseSource"
        },
        {
          "$ref": "#/definitions/DrillSource"
        },
        {
          "$ref": "#/definitions/EloquaSource"
        },
        {
          "$ref": "#/definitions/GoogleBigQuerySource"
        },
        {
          "$ref": "#/definitions/GreenplumSource"
        },
        {
          "$ref": "#/definitions/HBaseSource"
        },
        {
          "$ref": "#/definitions/HiveSource"
        },
        {
          "$ref": "#/definitions/HubspotSource"
        },
        {
          "$ref": "#/definitions/ImpalaSource"
        },
        {
          "$ref": "#/definitions/JiraSource"
        },
        {
          "$ref": "#/definitions/MagentoSource"
        },
        {
          "$ref": "#/definitions/MariaDBSource"
        },
        {
          "$ref": "#/definitions/AzureMariaDBSource"
        },
        {
          "$ref": "#/definitions/MarketoSource"
        },
        {
          "$ref": "#/definitions/PaypalSource"
        },
        {
          "$ref": "#/definitions/PhoenixSource"
        },
        {
          "$ref": "#/definitions/PrestoSource"
        },
        {
          "$ref": "#/definitions/QuickBooksSource"
        },
        {
          "$ref": "#/definitions/ServiceNowSource"
        },
        {
          "$ref": "#/definitions/ShopifySource"
        },
        {
          "$ref": "#/definitions/SparkSource"
        },
        {
          "$ref": "#/definitions/SquareSource"
        },
        {
          "$ref": "#/definitions/XeroSource"
        },
        {
          "$ref": "#/definitions/ZohoSource"
        },
        {
          "$ref": "#/definitions/NetezzaSource"
        },
        {
          "$ref": "#/definitions/VerticaSource"
        },
        {
          "$ref": "#/definitions/SalesforceMarketingCloudSource"
        },
        {
          "$ref": "#/definitions/ResponsysSource"
        },
        {
          "$ref": "#/definitions/DynamicsAXSource"
        },
        {
          "$ref": "#/definitions/OracleServiceCloudSource"
        },
        {
          "$ref": "#/definitions/GoogleAdWordsSource"
        },
        {
          "$ref": "#/definitions/AmazonRedshiftSource"
        }
      ],
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "queryTimeout": {
          "type": "object",
          "properties": {},
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "type": {
          "type": "string",
          "enum": [
            "TabularSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Copy activity sources of tabular type."
    },
    "TarGZipReadSettings": {
      "type": "object",
      "properties": {
        "preserveCompressionFileNameAsFolder": {
          "type": "object",
          "properties": {},
          "description": "Preserve the compression file name as folder path. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "TarGZipReadSettings"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The TarGZip compression read settings."
    },
    "TarReadSettings": {
      "type": "object",
      "properties": {
        "preserveCompressionFileNameAsFolder": {
          "type": "object",
          "properties": {},
          "description": "Preserve the compression file name as folder path. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "TarReadSettings"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The Tar compression read settings."
    },
    "TeamDeskLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TeamDesk"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TeamDeskLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "TeamDesk linked service type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for TeamDesk."
    },
    "TeamDeskLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "apiToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Token"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to use."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "url": {
          "type": "object",
          "properties": {},
          "description": "The url to connect TeamDesk source. Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "The username of the TeamDesk source. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "authenticationType",
        "url"
      ],
      "description": "TeamDesk linked service type properties."
    },
    "TeradataLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Teradata"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TeradataLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Teradata linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Teradata data source."
    },
    "TeradataLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Windows"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "AuthenticationType to be used for connection."
        },
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "Teradata ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "server": {
          "type": "object",
          "properties": {},
          "description": "Server name for connection. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Teradata linked service properties."
    },
    "TeradataPartitionSettings": {
      "type": "object",
      "properties": {
        "partitionColumnName": {
          "type": "object",
          "properties": {},
          "description": "The name of the column that will be used for proceeding range or hash partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionLowerBound": {
          "type": "object",
          "properties": {},
          "description": "The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionUpperBound": {
          "type": "object",
          "properties": {},
          "description": "The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        }
      },
      "description": "The settings that will be leveraged for teradata source partitioning."
    },
    "TeradataSource": {
      "type": "object",
      "properties": {
        "partitionOption": {
          "type": "object",
          "properties": {},
          "description": "The partition mechanism that will be used for teradata read in parallel. Possible values include: \"None\", \"Hash\", \"DynamicRange\"."
        },
        "partitionSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/TeradataPartitionSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The settings that will be leveraged for teradata source partitioning."
        },
        "query": {
          "type": "object",
          "properties": {},
          "description": "Teradata query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "TeradataSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Teradata source."
    },
    "TeradataTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TeradataTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TeradataTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Teradata dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "The Teradata database dataset."
    },
    "TeradataTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "database": {
          "type": "object",
          "properties": {},
          "description": "The database name of Teradata. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of Teradata. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Teradata dataset properties."
    },
    "TextFormat": {
      "type": "object",
      "properties": {
        "columnDelimiter": {
          "type": "object",
          "properties": {},
          "description": "The column delimiter. Type: string (or Expression with resultType string)."
        },
        "encodingName": {
          "type": "object",
          "properties": {},
          "description": "The code page name of the preferred encoding. If miss, the default value is ΓÇ£utf-8ΓÇ¥, unless BOM denotes another Unicode encoding. Refer to the ΓÇ£NameΓÇ¥ column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string)."
        },
        "escapeChar": {
          "type": "object",
          "properties": {},
          "description": "The escape character. Type: string (or Expression with resultType string)."
        },
        "firstRowAsHeader": {
          "type": "object",
          "properties": {},
          "description": "When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "nullValue": {
          "type": "object",
          "properties": {},
          "description": "The null value string. Type: string (or Expression with resultType string)."
        },
        "quoteChar": {
          "type": "object",
          "properties": {},
          "description": "The quote character. Type: string (or Expression with resultType string)."
        },
        "rowDelimiter": {
          "type": "object",
          "properties": {},
          "description": "The row delimiter. Type: string (or Expression with resultType string)."
        },
        "skipLineCount": {
          "type": "object",
          "properties": {},
          "description": "The number of lines/rows to be skipped when parsing text files. The default value is 0. Type: integer (or Expression with resultType integer)."
        },
        "treatEmptyAsNull": {
          "type": "object",
          "properties": {},
          "description": "Treat empty column values in the text file as null. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "TextFormat"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The data stored in text format."
    },
    "Transformation": {
      "type": "object",
      "properties": {
        "dataset": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset reference type."
        },
        "description": {
          "type": "string",
          "description": "Transformation description."
        },
        "flowlet": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataFlowReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Data flow reference type."
        },
        "linkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "name": {
          "type": "string",
          "description": "Transformation name."
        }
      },
      "required": [
        "name"
      ],
      "description": "A data flow transformation."
    },
    "Trigger": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/MultiplePipelineTrigger"
        },
        {
          "$ref": "#/definitions/TumblingWindowTrigger"
        },
        {
          "$ref": "#/definitions/RerunTumblingWindowTrigger"
        },
        {
          "$ref": "#/definitions/ChainingTrigger"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "annotations": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of tags that can be used for describing the trigger."
        },
        "description": {
          "type": "string",
          "description": "Trigger description."
        }
      },
      "description": "Azure data factory nested object which contains information about creating pipeline run"
    },
    "TriggerDependencyReference": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/TumblingWindowTriggerDependencyReference"
        }
      ],
      "properties": {
        "referenceTrigger": {
          "oneOf": [
            {
              "$ref": "#/definitions/TriggerReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Trigger reference type."
        },
        "type": {
          "type": "string",
          "enum": [
            "TriggerDependencyReference"
          ]
        }
      },
      "required": [
        "referenceTrigger",
        "type"
      ],
      "description": "Trigger referenced dependency."
    },
    "TriggerPipelineReference": {
      "type": "object",
      "properties": {
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An object mapping parameter names to argument values."
        },
        "pipelineReference": {
          "oneOf": [
            {
              "$ref": "#/definitions/PipelineReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Pipeline reference type."
        }
      },
      "description": "Pipeline that needs to be triggered with the given parameters."
    },
    "TriggerReference": {
      "type": "object",
      "properties": {
        "referenceName": {
          "type": "string",
          "description": "Reference trigger name."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "TriggerReference"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Trigger reference type."
        }
      },
      "required": [
        "referenceName",
        "type"
      ],
      "description": "Trigger reference type."
    },
    "TumblingWindowTrigger": {
      "type": "object",
      "properties": {
        "pipeline": {
          "oneOf": [
            {
              "$ref": "#/definitions/TriggerPipelineReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Pipeline that needs to be triggered with the given parameters."
        },
        "type": {
          "type": "string",
          "enum": [
            "TumblingWindowTrigger"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TumblingWindowTriggerTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Tumbling Window Trigger properties."
        }
      },
      "required": [
        "pipeline",
        "type",
        "typeProperties"
      ],
      "description": "Trigger that schedules pipeline runs for all fixed time interval windows from a start time without gaps and also supports backfill scenarios (when start time is in the past)."
    },
    "TumblingWindowTriggerDependencyReference": {
      "type": "object",
      "properties": {
        "offset": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "-?((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))",
              "minLength": 8,
              "maxLength": 15
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Timespan applied to the start time of a tumbling window when evaluating dependency."
        },
        "size": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))",
              "minLength": 8,
              "maxLength": 15
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The size of the window when evaluating the dependency. If undefined the frequency of the tumbling window will be used."
        },
        "type": {
          "type": "string",
          "enum": [
            "TumblingWindowTriggerDependencyReference"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Referenced tumbling window trigger dependency."
    },
    "TumblingWindowTriggerTypeProperties": {
      "type": "object",
      "properties": {
        "delay": {
          "type": "object",
          "properties": {},
          "description": "Specifies how long the trigger waits past due time before triggering new run. It doesn't alter window start and end time. The default is 0. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "dependsOn": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DependencyReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Triggers that this trigger depends on. Only tumbling window triggers are supported."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported."
        },
        "frequency": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Minute",
                "Hour",
                "Month"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The frequency of the time windows."
        },
        "interval": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The interval of the time windows. The minimum interval allowed is 15 Minutes."
        },
        "maxConcurrency": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The max number of parallel time windows (ready for execution) for which a new run is triggered."
        },
        "retryPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/RetryPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Execution policy for an activity."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported."
        }
      },
      "required": [
        "frequency",
        "interval",
        "maxConcurrency",
        "startTime"
      ],
      "description": "Tumbling Window Trigger properties."
    },
    "TwilioLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Twilio"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TwilioLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Twilio linked service type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Twilio."
    },
    "TwilioLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "The Account SID of Twilio service."
        }
      },
      "required": [
        "password",
        "userName"
      ],
      "description": "Twilio linked service type properties."
    },
    "UntilActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Until"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/UntilActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Until activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "This activity executes inner activities until the specified boolean expression results to true or timeout is reached, whichever is earlier."
    },
    "UntilActivityTypeProperties": {
      "type": "object",
      "properties": {
        "activities": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Activity"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of activities to execute."
        },
        "expression": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory expression definition."
        },
        "timeout": {
          "type": "object",
          "properties": {},
          "description": "Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9])). Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      },
      "required": [
        "activities",
        "expression"
      ],
      "description": "Until activity properties."
    },
    "UserProperty": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "User property name."
        },
        "value": {
          "type": "object",
          "properties": {},
          "description": "User property value. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "name",
        "value"
      ],
      "description": "User property."
    },
    "ValidationActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Validation"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ValidationActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Validation activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "This activity verifies that an external resource exists."
    },
    "ValidationActivityTypeProperties": {
      "type": "object",
      "properties": {
        "childItems": {
          "type": "object",
          "properties": {},
          "description": "Can be used if dataset points to a folder. If set to true, the folder must have at least one file. If set to false, the folder must be empty. Type: boolean (or Expression with resultType boolean)."
        },
        "dataset": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset reference type."
        },
        "minimumSize": {
          "type": "object",
          "properties": {},
          "description": "Can be used if dataset points to a file. The file must be greater than or equal in size to the value specified. Type: integer (or Expression with resultType integer)."
        },
        "sleep": {
          "type": "object",
          "properties": {},
          "description": "A delay in seconds between validation attempts. If no value is specified, 10 seconds will be used as the default. Type: integer (or Expression with resultType integer)."
        },
        "timeout": {
          "type": "object",
          "properties": {},
          "description": "Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      },
      "required": [
        "dataset"
      ],
      "description": "Validation activity properties."
    },
    "VariableSpecification": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "object",
          "properties": {},
          "description": "Default value of variable."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "String",
                "Bool",
                "Array"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Variable type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Definition of a single variable for a Pipeline."
    },
    "VerticaDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {},
          "description": "The schema name of the Vertica. Type: string (or Expression with resultType string)."
        },
        "table": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Vertica. Type: string (or Expression with resultType string)."
        },
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "This property will be retired. Please consider using schema + table properties instead."
        }
      },
      "description": "Vertica Properties"
    },
    "VerticaLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Vertica"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/VerticaLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Vertica linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Vertica linked service."
    },
    "VerticaLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "pwd": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault secret reference."
        }
      },
      "description": "Vertica linked service properties."
    },
    "VerticaSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "VerticaSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Vertica source."
    },
    "VerticaTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "VerticaTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/VerticaDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Vertica Properties"
        }
      },
      "required": [
        "type"
      ],
      "description": "Vertica dataset."
    },
    "WaitActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Wait"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/WaitActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Wait activity properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "This activity suspends pipeline execution for the specified interval."
    },
    "WaitActivityTypeProperties": {
      "type": "object",
      "properties": {
        "waitTimeInSeconds": {
          "type": "object",
          "properties": {},
          "description": "Duration in seconds."
        }
      },
      "required": [
        "waitTimeInSeconds"
      ],
      "description": "Wait activity properties."
    },
    "WebActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "WebActivity"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/WebActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Web activity type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Web activity."
    },
    "WebActivityAuthentication": {
      "type": "object",
      "properties": {
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/CredentialReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credential reference type."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "pfx": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "Resource for which Azure Auth token will be requested when using MSI Authentication. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "description": "Web activity authentication (Basic/ClientCertificate/MSI/ServicePrincipal)"
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "Web activity authentication user name for basic authentication or ClientID when used for ServicePrincipal. Type: string (or Expression with resultType string)."
        },
        "userTenant": {
          "type": "object",
          "properties": {},
          "description": "TenantId for which Azure Auth token will be requested when using ServicePrincipal Authentication. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Web activity authentication properties."
    },
    "WebActivityTypeProperties": {
      "type": "object",
      "properties": {
        "authentication": {
          "oneOf": [
            {
              "$ref": "#/definitions/WebActivityAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Web activity authentication properties."
        },
        "body": {
          "type": "object",
          "properties": {},
          "description": "Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string)."
        },
        "connectVia": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Integration runtime reference type."
        },
        "datasets": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatasetReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of datasets passed to web endpoint."
        },
        "disableCertValidation": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "When set to true, Certificate validation will be disabled."
        },
        "headers": {
          "type": "object",
          "properties": {},
          "description": "Represents the headers that will be sent to the request. For example, to set the language and type on a request: \"headers\" : { \"Accept-Language\": \"en-us\", \"Content-Type\": \"application/json\" }. Type: string (or Expression with resultType string)."
        },
        "linkedServices": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedServiceReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of linked services passed to web endpoint."
        },
        "method": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "GET",
                "POST",
                "PUT",
                "DELETE"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Rest API method for target endpoint."
        },
        "url": {
          "type": "object",
          "properties": {},
          "description": "Web activity target endpoint and path. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "method",
        "url"
      ],
      "description": "Web activity type properties."
    },
    "WebAnonymousAuthentication": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "type": "string",
          "enum": [
            "Anonymous"
          ]
        }
      },
      "required": [
        "authenticationType"
      ],
      "description": "A WebLinkedService that uses anonymous authentication to communicate with an HTTP endpoint."
    },
    "WebBasicAuthentication": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "type": "string",
          "enum": [
            "Basic"
          ]
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "User name for Basic authentication. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "authenticationType",
        "password",
        "username"
      ],
      "description": "A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint."
    },
    "WebClientCertificateAuthentication": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "type": "string",
          "enum": [
            "ClientCertificate"
          ]
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "pfx": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        }
      },
      "required": [
        "authenticationType",
        "password",
        "pfx"
      ],
      "description": "A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client."
    },
    "WebHookActivity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "WebHook"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/WebHookActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "WebHook activity type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "WebHook activity."
    },
    "WebHookActivityTypeProperties": {
      "type": "object",
      "properties": {
        "authentication": {
          "oneOf": [
            {
              "$ref": "#/definitions/WebActivityAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Web activity authentication properties."
        },
        "body": {
          "type": "object",
          "properties": {},
          "description": "Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string)."
        },
        "headers": {
          "type": "object",
          "properties": {},
          "description": "Represents the headers that will be sent to the request. For example, to set the language and type on a request: \"headers\" : { \"Accept-Language\": \"en-us\", \"Content-Type\": \"application/json\" }. Type: string (or Expression with resultType string)."
        },
        "method": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "POST"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Rest API method for target endpoint."
        },
        "reportStatusOnCallBack": {
          "type": "object",
          "properties": {},
          "description": "When set to true, statusCode, output and error in callback request body will be consumed by activity. The activity can be marked as failed by setting statusCode >= 400 in callback request. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "timeout": {
          "type": "string",
          "description": "The timeout within which the webhook should be called back. If there is no value specified, it defaults to 10 minutes. Type: string. Pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "url": {
          "type": "object",
          "properties": {},
          "description": "WebHook activity target endpoint and path. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "method",
        "url"
      ],
      "description": "WebHook activity type properties."
    },
    "WebLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Web"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/WebLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base definition of WebLinkedServiceTypeProperties, this typeProperties is polymorphic based on authenticationType, so not flattened in SDK models."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Web linked service."
    },
    "WebLinkedServiceTypeProperties": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/WebAnonymousAuthentication"
        },
        {
          "$ref": "#/definitions/WebBasicAuthentication"
        },
        {
          "$ref": "#/definitions/WebClientCertificateAuthentication"
        }
      ],
      "properties": {
        "url": {
          "type": "object",
          "properties": {},
          "description": "The URL of the web service endpoint, e.g. https://www.microsoft.com . Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ],
      "description": "Base definition of WebLinkedServiceTypeProperties, this typeProperties is polymorphic based on authenticationType, so not flattened in SDK models."
    },
    "WebSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "type": {
          "type": "string",
          "enum": [
            "WebSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for web page table."
    },
    "WebTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "WebTable"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/WebTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Web table dataset properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "The dataset points to a HTML table in the web page."
    },
    "WebTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "index": {
          "type": "object",
          "properties": {},
          "description": "The zero-based index of the table in the web page. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "path": {
          "type": "object",
          "properties": {},
          "description": "The relative URL to the web page from the linked service URL. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "index"
      ],
      "description": "Web table dataset properties."
    },
    "WranglingDataFlow": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "WranglingDataFlow"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PowerQueryTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Power Query data flow type properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "Power Query data flow."
    },
    "XeroLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Xero"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/XeroLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Xero Service linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Xero Service linked service."
    },
    "XeroLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionProperties": {
          "type": "object",
          "properties": {},
          "description": "Properties used to connect to Xero. It is mutually exclusive with any other properties in the linked service. Type: object."
        },
        "consumerKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "host": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Xero server. (i.e. api.xero.com)"
        },
        "privateKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        }
      },
      "description": "Xero Service linked service properties."
    },
    "XeroObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "XeroObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Xero Service dataset."
    },
    "XeroSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "XeroSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Xero Service source."
    },
    "XmlDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Xml"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/XmlDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Xml dataset properties."
        }
      },
      "required": [
        "type"
      ],
      "description": "Xml dataset."
    },
    "XmlDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "compression": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetCompression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression method used on a dataset."
        },
        "encodingName": {
          "type": "object",
          "properties": {},
          "description": "The code page name of the preferred encoding. If not specified, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string)."
        },
        "location": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset location."
        },
        "nullValue": {
          "type": "object",
          "properties": {},
          "description": "The null value string. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "location"
      ],
      "description": "Xml dataset properties."
    },
    "XmlReadSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "compressionProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CompressionReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Compression read settings."
        },
        "detectDataType": {
          "type": "object",
          "properties": {},
          "description": "Indicates whether type detection is enabled when reading the xml files. Type: boolean (or Expression with resultType boolean)."
        },
        "namespacePrefixes": {
          "type": "object",
          "properties": {},
          "description": "Namespace uri to prefix mappings to override the prefixes in column names when namespace is enabled, if no prefix is defined for a namespace uri, the prefix of xml element/attribute name in the xml data file will be used. Example: \"{\"http://www.example.com/xml\":\"prefix\"}\" Type: object (or Expression with resultType object)."
        },
        "namespaces": {
          "type": "object",
          "properties": {},
          "description": "Indicates whether namespace is enabled when reading the xml files. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "XmlReadSettings"
          ]
        },
        "validationMode": {
          "type": "object",
          "properties": {},
          "description": "Indicates what validation method is used when reading the xml files. Allowed values: 'none', 'xsd', or 'dtd'. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ],
      "description": "Xml read settings."
    },
    "XmlSource": {
      "type": "object",
      "properties": {
        "additionalColumns": {
          "type": "object",
          "properties": {},
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        },
        "formatSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/XmlReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Xml read settings."
        },
        "storeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StoreReadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Connector read setting."
        },
        "type": {
          "type": "string",
          "enum": [
            "XmlSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Xml source."
    },
    "ZendeskLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Zendesk"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ZendeskLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Zendesk linked service type properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Linked service for Zendesk."
    },
    "ZendeskLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "apiToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Token"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to use."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "url": {
          "type": "object",
          "properties": {},
          "description": "The url to connect Zendesk source. Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "The username of the Zendesk source. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "authenticationType",
        "url"
      ],
      "description": "Zendesk linked service type properties."
    },
    "ZipDeflateReadSettings": {
      "type": "object",
      "properties": {
        "preserveZipFileNameAsFolder": {
          "type": "object",
          "properties": {},
          "description": "Preserve the zip file name as folder path. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "ZipDeflateReadSettings"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The ZipDeflate compression read settings."
    },
    "ZohoLinkedService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Zoho"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ZohoLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Zoho server linked service properties."
        }
      },
      "required": [
        "type",
        "typeProperties"
      ],
      "description": "Zoho server linked service."
    },
    "ZohoLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accessToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "connectionProperties": {
          "type": "object",
          "properties": {},
          "description": "Properties used to connect to Zoho. It is mutually exclusive with any other properties in the linked service. Type: object."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "endpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)"
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        }
      },
      "description": "Zoho server linked service properties."
    },
    "ZohoObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ZohoObject"
          ]
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GenericDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Zoho server dataset."
    },
    "ZohoSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "ZohoSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Zoho server source."
    }
  }
}
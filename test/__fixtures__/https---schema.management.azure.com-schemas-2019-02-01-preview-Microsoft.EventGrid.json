{
  "id": "https://schema.management.azure.com/schemas/2019-02-01-preview/Microsoft.EventGrid.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.EventGrid",
  "description": "Microsoft EventGrid Resource Types",
  "resourceDefinitions": {
    "domains": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-02-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Location of the resource"
        },
        "name": {
          "type": "string",
          "description": "Name of the domain"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DomainProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Domain"
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/domains_topics_childResource"
              }
            ]
          }
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Tags of the resource"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/domains"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/domains"
    },
    "domains_topics": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-02-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the domain topic"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/domains/topics"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.EventGrid/domains/topics"
    },
    "topics": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-02-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Location of the resource"
        },
        "name": {
          "type": "string",
          "description": "Name of the topic"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Topic"
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Tags of the resource"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/topics"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/topics"
    }
  },
  "unknown_resourceDefinitions": {
    "eventSubscriptions": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-02-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the event subscription. Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Event Subscription"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/eventSubscriptions"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/eventSubscriptions"
    }
  },
  "definitions": {
    "AdvancedFilter": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/NumberInAdvancedFilter"
        },
        {
          "$ref": "#/definitions/NumberNotInAdvancedFilter"
        },
        {
          "$ref": "#/definitions/NumberLessThanAdvancedFilter"
        },
        {
          "$ref": "#/definitions/NumberGreaterThanAdvancedFilter"
        },
        {
          "$ref": "#/definitions/NumberLessThanOrEqualsAdvancedFilter"
        },
        {
          "$ref": "#/definitions/NumberGreaterThanOrEqualsAdvancedFilter"
        },
        {
          "$ref": "#/definitions/BoolEqualsAdvancedFilter"
        },
        {
          "$ref": "#/definitions/StringInAdvancedFilter"
        },
        {
          "$ref": "#/definitions/StringNotInAdvancedFilter"
        },
        {
          "$ref": "#/definitions/StringBeginsWithAdvancedFilter"
        },
        {
          "$ref": "#/definitions/StringEndsWithAdvancedFilter"
        },
        {
          "$ref": "#/definitions/StringContainsAdvancedFilter"
        }
      ],
      "properties": {
        "key": {
          "type": "string",
          "description": "The field/property in the event based on which you want to filter."
        }
      },
      "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter."
    },
    "BoolEqualsAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "BoolEquals"
          ]
        },
        "value": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The boolean filter value."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "BoolEquals Advanced Filter."
    },
    "DeadLetterDestination": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/StorageBlobDeadLetterDestination"
        }
      ],
      "properties": {},
      "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class."
    },
    "DomainProperties": {
      "type": "object",
      "properties": {
        "inputSchema": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "EventGridSchema",
                "CustomEventSchema",
                "CloudEventV01Schema"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This determines the format that Event Grid should expect for incoming events published to the domain."
        },
        "inputSchemaMapping": {
          "oneOf": [
            {
              "$ref": "#/definitions/InputSchemaMapping"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'."
        }
      },
      "description": "Properties of the Domain"
    },
    "domains_topics_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-02-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the domain topic"
        },
        "type": {
          "type": "string",
          "enum": [
            "topics"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.EventGrid/domains/topics"
    },
    "EventHubEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "enum": [
            "EventHub"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventHubEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties for a event hub destination."
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the event hub destination for an event subscription"
    },
    "EventHubEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource Id that represents the endpoint of an Event Hub destination of an event subscription."
        }
      },
      "description": "The properties for a event hub destination."
    },
    "EventSubscriptionDestination": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/WebHookEventSubscriptionDestination"
        },
        {
          "$ref": "#/definitions/EventHubEventSubscriptionDestination"
        },
        {
          "$ref": "#/definitions/StorageQueueEventSubscriptionDestination"
        },
        {
          "$ref": "#/definitions/HybridConnectionEventSubscriptionDestination"
        },
        {
          "$ref": "#/definitions/ServiceBusQueueEventSubscriptionDestination"
        }
      ],
      "properties": {},
      "description": "Information about the destination for an event subscription"
    },
    "EventSubscriptionFilter": {
      "type": "object",
      "properties": {
        "advancedFilters": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdvancedFilter"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An array of advanced filters that are used for filtering event subscriptions."
        },
        "includedEventTypes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null."
        },
        "isSubjectCaseSensitive": {
          "oneOf": [
            {
              "type": "boolean",
              "default": false
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter \r\nshould be compared in a case sensitive manner."
        },
        "subjectBeginsWith": {
          "type": "string",
          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events. \r\nWildcard characters are not supported in this path."
        },
        "subjectEndsWith": {
          "type": "string",
          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path."
        }
      },
      "description": "Filter for the Event Subscription"
    },
    "EventSubscriptionProperties": {
      "type": "object",
      "properties": {
        "deadLetterDestination": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeadLetterDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class."
        },
        "destination": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information about the destination for an event subscription"
        },
        "eventDeliverySchema": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "EventGridSchema",
                "CloudEventV01Schema",
                "CustomInputSchema"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The event delivery schema for the event subscription."
        },
        "expirationTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration time of the event subscription."
        },
        "filter": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Filter for the Event Subscription"
        },
        "labels": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of user defined labels."
        },
        "retryPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/RetryPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information about the retry policy for an event subscription"
        }
      },
      "description": "Properties of the Event Subscription"
    },
    "HybridConnectionEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "enum": [
            "HybridConnection"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HybridConnectionEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties for a hybrid connection destination."
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the HybridConnection destination for an event subscription."
    },
    "HybridConnectionEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource ID of an hybrid connection that is the destination of an event subscription."
        }
      },
      "description": "The properties for a hybrid connection destination."
    },
    "InputSchemaMapping": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/JsonInputSchemaMapping"
        }
      ],
      "properties": {},
      "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'."
    },
    "JsonField": {
      "type": "object",
      "properties": {
        "sourceField": {
          "type": "string",
          "description": "Name of a field in the input event schema that's to be used as the source of a mapping."
        }
      },
      "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and 'eventtime' properties. This represents a field in the input event schema."
    },
    "JsonFieldWithDefault": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "string",
          "description": "The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload."
        },
        "sourceField": {
          "type": "string",
          "description": "Name of a field in the input event schema that's to be used as the source of a mapping."
        }
      },
      "description": "This is used to express the source of an input schema mapping for a single target field\r\nin the Event Grid Event schema. This is currently used in the mappings for the 'subject',\r\n'eventtype' and 'dataversion' properties. This represents a field in the input event schema\r\nalong with a default value to be used, and at least one of these two properties should be provided."
    },
    "JsonInputSchemaMapping": {
      "type": "object",
      "properties": {
        "inputSchemaMappingType": {
          "type": "string",
          "enum": [
            "Json"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonInputSchemaMappingProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema."
        }
      },
      "required": [
        "inputSchemaMappingType"
      ],
      "description": "This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input JSON schema to the Event Grid event schema."
    },
    "JsonInputSchemaMappingProperties": {
      "type": "object",
      "properties": {
        "dataVersion": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonFieldWithDefault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field\r\nin the Event Grid Event schema. This is currently used in the mappings for the 'subject',\r\n'eventtype' and 'dataversion' properties. This represents a field in the input event schema\r\nalong with a default value to be used, and at least one of these two properties should be provided."
        },
        "eventTime": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonField"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and 'eventtime' properties. This represents a field in the input event schema."
        },
        "eventType": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonFieldWithDefault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field\r\nin the Event Grid Event schema. This is currently used in the mappings for the 'subject',\r\n'eventtype' and 'dataversion' properties. This represents a field in the input event schema\r\nalong with a default value to be used, and at least one of these two properties should be provided."
        },
        "id": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonField"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and 'eventtime' properties. This represents a field in the input event schema."
        },
        "subject": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonFieldWithDefault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field\r\nin the Event Grid Event schema. This is currently used in the mappings for the 'subject',\r\n'eventtype' and 'dataversion' properties. This represents a field in the input event schema\r\nalong with a default value to be used, and at least one of these two properties should be provided."
        },
        "topic": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonField"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and 'eventtime' properties. This represents a field in the input event schema."
        }
      },
      "description": "This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema."
    },
    "NumberGreaterThanAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberGreaterThan"
          ]
        },
        "value": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The filter value."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberGreaterThan Advanced Filter."
    },
    "NumberGreaterThanOrEqualsAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberGreaterThanOrEquals"
          ]
        },
        "value": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The filter value."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberGreaterThanOrEquals Advanced Filter."
    },
    "NumberInAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberIn"
          ]
        },
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberIn Advanced Filter."
    },
    "NumberLessThanAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberLessThan"
          ]
        },
        "value": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The filter value."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberLessThan Advanced Filter."
    },
    "NumberLessThanOrEqualsAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberLessThanOrEquals"
          ]
        },
        "value": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The filter value."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberLessThanOrEquals Advanced Filter."
    },
    "NumberNotInAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberNotIn"
          ]
        },
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberNotIn Advanced Filter."
    },
    "RetryPolicy": {
      "type": "object",
      "properties": {
        "eventTimeToLiveInMinutes": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Time To Live (in minutes) for events."
        },
        "maxDeliveryAttempts": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Maximum number of delivery retry attempts for events."
        }
      },
      "description": "Information about the retry policy for an event subscription"
    },
    "ServiceBusQueueEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "enum": [
            "ServiceBusQueue"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ServiceBusQueueEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties that represent the Service Bus destination of an event subscription."
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the service bus destination for an event subscription"
    },
    "ServiceBusQueueEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource Id that represents the endpoint of the Service Bus destination of an event subscription."
        }
      },
      "description": "The properties that represent the Service Bus destination of an event subscription."
    },
    "StorageBlobDeadLetterDestination": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "enum": [
            "StorageBlob"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageBlobDeadLetterDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the storage blob based dead letter destination."
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the storage blob based dead letter destination."
    },
    "StorageBlobDeadLetterDestinationProperties": {
      "type": "object",
      "properties": {
        "blobContainerName": {
          "type": "string",
          "description": "The name of the Storage blob container that is the destination of the deadletter events"
        },
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource ID of the storage account that is the destination of the deadletter events"
        }
      },
      "description": "Properties of the storage blob based dead letter destination."
    },
    "StorageQueueEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "enum": [
            "StorageQueue"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageQueueEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties for a storage queue destination."
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the storage queue destination for an event subscription."
    },
    "StorageQueueEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "queueName": {
          "type": "string",
          "description": "The name of the Storage queue under a storage account that is the destination of an event subscription."
        },
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription."
        }
      },
      "description": "The properties for a storage queue destination."
    },
    "StringBeginsWithAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "StringBeginsWith"
          ]
        },
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "StringBeginsWith Advanced Filter."
    },
    "StringContainsAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "StringContains"
          ]
        },
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "StringContains Advanced Filter."
    },
    "StringEndsWithAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "StringEndsWith"
          ]
        },
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "StringEndsWith Advanced Filter."
    },
    "StringInAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "StringIn"
          ]
        },
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "StringIn Advanced Filter."
    },
    "StringNotInAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "StringNotIn"
          ]
        },
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "StringNotIn Advanced Filter."
    },
    "TopicProperties": {
      "type": "object",
      "properties": {
        "inputSchema": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "EventGridSchema",
                "CustomEventSchema",
                "CloudEventV01Schema"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This determines the format that Event Grid should expect for incoming events published to the topic."
        },
        "inputSchemaMapping": {
          "oneOf": [
            {
              "$ref": "#/definitions/InputSchemaMapping"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'."
        }
      },
      "description": "Properties of the Topic"
    },
    "WebHookEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "enum": [
            "WebHook"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/WebHookEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information about the webhook destination properties for an event subscription."
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the webhook destination for an event subscription"
    },
    "WebHookEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "endpointUrl": {
          "type": "string",
          "description": "The URL that represents the endpoint of the destination of an event subscription."
        }
      },
      "description": "Information about the webhook destination properties for an event subscription."
    }
  }
}
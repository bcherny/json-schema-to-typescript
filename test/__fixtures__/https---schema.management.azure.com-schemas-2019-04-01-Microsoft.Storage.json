{
  "id": "https://schema.management.azure.com/schemas/2019-04-01/Microsoft.Storage.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.Storage",
  "description": "Microsoft Storage Resource Types",
  "resourceDefinitions": {
    "storageAccounts": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Identity for the resource."
        },
        "kind": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Storage",
                "StorageV2",
                "BlobStorage",
                "FileStorage",
                "BlockBlobStorage"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required. Indicates the type of storage account."
        },
        "location": {
          "type": "string",
          "description": "Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed."
        },
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageAccountPropertiesCreateParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The parameters used to create the storage account."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_managementPolicies_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_blobServices_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_fileServices_childResource"
              }
            ]
          }
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The SKU of the storage account."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts"
          ]
        }
      },
      "required": [
        "apiVersion",
        "kind",
        "location",
        "name",
        "sku",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts"
    },
    "storageAccounts_blobServices": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^.*/default$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the blob Service within the specified storage account. Blob Service Name must be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlobServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a storage accountâ€™s Blob service."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_blobServices_containers_childResource"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices"
    },
    "storageAccounts_blobServices_containers": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a container."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices/containers"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers"
    },
    "storageAccounts_blobServices_containers_immutabilityPolicies": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^.*/default$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ImmutabilityPolicyProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of an ImmutabilityPolicy of a blob container."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies"
    },
    "storageAccounts_fileServices": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^.*/default$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the file Service within the specified storage account. File Service Name must be \"default\""
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FileServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of File services in storage account."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_fileServices_shares_childResource"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/fileServices"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/fileServices"
    },
    "storageAccounts_fileServices_shares": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "description": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FileShareProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of the file share."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/fileServices/shares"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/fileServices/shares"
    },
    "storageAccounts_managementPolicies": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^.*/default$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the Storage Account Management Policy. It should always be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Storage Account ManagementPolicy properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/managementPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/managementPolicies"
    }
  },
  "definitions": {
    "ActiveDirectoryProperties": {
      "type": "object",
      "properties": {
        "azureStorageSid": {
          "type": "string",
          "description": "Specifies the security identifier (SID) for Azure Storage."
        },
        "domainGuid": {
          "type": "string",
          "description": "Specifies the domain GUID."
        },
        "domainName": {
          "type": "string",
          "description": "Specifies the primary domain that the AD DNS server is authoritative for."
        },
        "domainSid": {
          "type": "string",
          "description": "Specifies the security identifier (SID)."
        },
        "forestName": {
          "type": "string",
          "description": "Specifies the Active Directory forest to get."
        },
        "netBiosDomainName": {
          "type": "string",
          "description": "Specifies the NetBIOS domain name."
        }
      },
      "required": [
        "azureStorageSid",
        "domainGuid",
        "domainName",
        "domainSid",
        "forestName",
        "netBiosDomainName"
      ],
      "description": "Settings properties for Active Directory (AD)."
    },
    "AzureFilesIdentityBasedAuthentication": {
      "type": "object",
      "properties": {
        "activeDirectoryProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ActiveDirectoryProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Settings properties for Active Directory (AD)."
        },
        "directoryServiceOptions": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "AADDS",
                "AD"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates the directory service used."
        }
      },
      "required": [
        "directoryServiceOptions"
      ],
      "description": "Settings for Azure Files identity based authentication."
    },
    "BlobServicePropertiesProperties": {
      "type": "object",
      "properties": {
        "automaticSnapshotPolicyEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Automatic Snapshot is enabled if set to true."
        },
        "changeFeed": {
          "oneOf": [
            {
              "$ref": "#/definitions/ChangeFeed"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The blob service properties for change feed events."
        },
        "cors": {
          "oneOf": [
            {
              "$ref": "#/definitions/CorsRules"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. "
        },
        "defaultServiceVersion": {
          "type": "string",
          "description": "DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming requestâ€™s version is not specified. Possible values include version 2008-10-27 and all more recent versions."
        },
        "deleteRetentionPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeleteRetentionPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The blob service properties for soft delete."
        }
      },
      "description": "The properties of a storage accountâ€™s Blob service."
    },
    "ChangeFeed": {
      "type": "object",
      "properties": {
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether change feed event logging is enabled for the Blob service."
        }
      },
      "description": "The blob service properties for change feed events."
    },
    "ContainerProperties": {
      "type": "object",
      "properties": {
        "metadata": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A name-value pair to associate with the container as metadata."
        },
        "publicAccess": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Container",
                "Blob",
                "None"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies whether data in the container may be accessed publicly and the level of access."
        }
      },
      "description": "The properties of a container."
    },
    "CorsRule": {
      "type": "object",
      "properties": {
        "allowedHeaders": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request."
        },
        "allowedMethods": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DELETE",
                  "GET",
                  "HEAD",
                  "MERGE",
                  "POST",
                  "OPTIONS",
                  "PUT"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin."
        },
        "allowedOrigins": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains"
        },
        "exposedHeaders": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required if CorsRule element is present. A list of response headers to expose to CORS clients."
        },
        "maxAgeInSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response."
        }
      },
      "required": [
        "allowedHeaders",
        "allowedMethods",
        "allowedOrigins",
        "exposedHeaders",
        "maxAgeInSeconds"
      ],
      "description": "Specifies a CORS rule for the Blob service."
    },
    "CorsRules": {
      "type": "object",
      "properties": {
        "corsRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CorsRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The List of CORS rules. You can include up to five CorsRule elements in the request. "
        }
      },
      "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. "
    },
    "CustomDomain": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source."
        },
        "useSubDomainName": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates."
        }
      },
      "required": [
        "name"
      ],
      "description": "The custom domain assigned to this storage account. This can be set via Update."
    },
    "DateAfterCreation": {
      "type": "object",
      "properties": {
        "daysAfterCreationGreaterThan": {
          "oneOf": [
            {
              "type": "number",
              "multipleOf": 1,
              "minimum": 0
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Value indicating the age in days after creation"
        }
      },
      "required": [
        "daysAfterCreationGreaterThan"
      ],
      "description": "Object to define the number of days after creation."
    },
    "DateAfterModification": {
      "type": "object",
      "properties": {
        "daysAfterModificationGreaterThan": {
          "oneOf": [
            {
              "type": "number",
              "multipleOf": 1,
              "minimum": 0
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Value indicating the age in days after last modification"
        }
      },
      "required": [
        "daysAfterModificationGreaterThan"
      ],
      "description": "Object to define the number of days after last modification."
    },
    "DeleteRetentionPolicy": {
      "type": "object",
      "properties": {
        "days": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 365
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates the number of days that the deleted blob should be retained. The minimum specified value can be 1 and the maximum value can be 365."
        },
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether DeleteRetentionPolicy is enabled for the Blob service."
        }
      },
      "description": "The blob service properties for soft delete."
    },
    "Encryption": {
      "type": "object",
      "properties": {
        "keySource": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Microsoft.Storage",
                "Microsoft.Keyvault"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault."
        },
        "keyvaultproperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of key vault."
        },
        "services": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionServices"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of services that support encryption."
        }
      },
      "required": [
        "keySource"
      ],
      "description": "The encryption settings on the storage account."
    },
    "EncryptionService": {
      "type": "object",
      "properties": {
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A boolean indicating whether or not the service encrypts the data as it is stored."
        }
      },
      "description": "A service that allows server-side encryption to be used."
    },
    "EncryptionServices": {
      "type": "object",
      "properties": {
        "blob": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A service that allows server-side encryption to be used."
        },
        "file": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A service that allows server-side encryption to be used."
        }
      },
      "description": "A list of services that support encryption."
    },
    "FileServicePropertiesProperties": {
      "type": "object",
      "properties": {
        "cors": {
          "oneOf": [
            {
              "$ref": "#/definitions/CorsRules"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. "
        }
      },
      "description": "The properties of File services in storage account."
    },
    "FileShareProperties": {
      "type": "object",
      "properties": {
        "metadata": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A name-value pair to associate with the share as metadata."
        },
        "shareQuota": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 5120
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120)."
        }
      },
      "description": "The properties of the file share."
    },
    "Identity": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SystemAssigned"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The identity type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Identity for the resource."
    },
    "ImmutabilityPolicyProperty": {
      "type": "object",
      "properties": {
        "immutabilityPeriodSinceCreationInDays": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The immutability period for the blobs in the container since the policy creation, in days."
        }
      },
      "required": [
        "immutabilityPeriodSinceCreationInDays"
      ],
      "description": "The properties of an ImmutabilityPolicy of a blob container."
    },
    "IPRule": {
      "type": "object",
      "properties": {
        "action": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Allow"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The action of IP ACL rule."
        },
        "value": {
          "type": "string",
          "description": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed."
        }
      },
      "required": [
        "value"
      ],
      "description": "IP rule with specific IP or IP range in CIDR format."
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyname": {
          "type": "string",
          "description": "The name of KeyVault key."
        },
        "keyvaulturi": {
          "type": "string",
          "description": "The Uri of KeyVault."
        },
        "keyversion": {
          "type": "string",
          "description": "The version of KeyVault key."
        }
      },
      "description": "Properties of key vault."
    },
    "ManagementPolicyAction": {
      "type": "object",
      "properties": {
        "baseBlob": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyBaseBlob"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Management policy action for base blob."
        },
        "snapshot": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicySnapShot"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Management policy action for snapshot."
        }
      },
      "description": "Actions are applied to the filtered blobs when the execution condition is met."
    },
    "ManagementPolicyBaseBlob": {
      "type": "object",
      "properties": {
        "delete": {
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterModification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Object to define the number of days after last modification."
        },
        "tierToArchive": {
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterModification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Object to define the number of days after last modification."
        },
        "tierToCool": {
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterModification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Object to define the number of days after last modification."
        }
      },
      "description": "Management policy action for base blob."
    },
    "ManagementPolicyDefinition": {
      "type": "object",
      "properties": {
        "actions": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyAction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Actions are applied to the filtered blobs when the execution condition is met."
        },
        "filters": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. "
        }
      },
      "required": [
        "actions"
      ],
      "description": "An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set."
    },
    "ManagementPolicyFilter": {
      "type": "object",
      "properties": {
        "blobTypes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An array of predefined enum values. Only blockBlob is supported."
        },
        "prefixMatch": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An array of strings for prefixes to be match."
        }
      },
      "required": [
        "blobTypes"
      ],
      "description": "Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. "
    },
    "ManagementPolicyProperties": {
      "type": "object",
      "properties": {
        "policy": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicySchema"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts."
        }
      },
      "required": [
        "policy"
      ],
      "description": "The Storage Account ManagementPolicy properties."
    },
    "ManagementPolicyRule": {
      "type": "object",
      "properties": {
        "definition": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set."
        },
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Rule is enabled if set to true."
        },
        "name": {
          "type": "string",
          "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Lifecycle"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The valid value is Lifecycle"
        }
      },
      "required": [
        "definition",
        "name",
        "type"
      ],
      "description": "An object that wraps the Lifecycle rule. Each rule is uniquely defined by name."
    },
    "ManagementPolicySchema": {
      "type": "object",
      "properties": {
        "rules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManagementPolicyRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts."
        }
      },
      "required": [
        "rules"
      ],
      "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts."
    },
    "ManagementPolicySnapShot": {
      "type": "object",
      "properties": {
        "delete": {
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Object to define the number of days after creation."
        }
      },
      "description": "Management policy action for snapshot."
    },
    "NetworkRuleSet": {
      "type": "object",
      "properties": {
        "bypass": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Logging",
                "Metrics",
                "AzureServices"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics."
        },
        "defaultAction": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Allow",
                "Deny"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the default action of allow or deny when no other rules match."
        },
        "ipRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IPRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sets the IP ACL rules"
        },
        "virtualNetworkRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VirtualNetworkRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sets the virtual network rules"
        }
      },
      "required": [
        "defaultAction"
      ],
      "description": "Network rule set"
    },
    "Restriction": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "QuotaId",
                "NotAvailableForSubscription"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The \"NotAvailableForSubscription\" is related to capacity at DC."
        }
      },
      "description": "The restriction because of which SKU cannot be used."
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GZRS",
                "Standard_RAGZRS"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType."
        },
        "restrictions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Restriction"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions."
        }
      },
      "required": [
        "name"
      ],
      "description": "The SKU of the storage account."
    },
    "StorageAccountPropertiesCreateParameters": {
      "type": "object",
      "properties": {
        "accessTier": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Hot",
                "Cool"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required for storage accounts where kind = BlobStorage. The access tier used for billing."
        },
        "allowBlobPublicAccess": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property."
        },
        "allowSharedKeyAccess": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true."
        },
        "azureFilesIdentityBasedAuthentication": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureFilesIdentityBasedAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Settings for Azure Files identity based authentication."
        },
        "customDomain": {
          "oneOf": [
            {
              "$ref": "#/definitions/CustomDomain"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The custom domain assigned to this storage account. This can be set via Update."
        },
        "encryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/Encryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The encryption settings on the storage account."
        },
        "isHnsEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Account HierarchicalNamespace enabled if sets to true."
        },
        "largeFileSharesState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Disabled",
                "Enabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled."
        },
        "minimumTlsVersion": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "TLS1_0",
                "TLS1_1",
                "TLS1_2"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property."
        },
        "networkAcls": {
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkRuleSet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Network rule set"
        },
        "supportsHttpsTrafficOnly": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01."
        }
      },
      "description": "The parameters used to create the storage account."
    },
    "storageAccounts_blobServices_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "name": {
          "type": "string",
          "enum": [
            "default"
          ],
          "description": "The name of the blob Service within the specified storage account. Blob Service Name must be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlobServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a storage accountâ€™s Blob service."
        },
        "type": {
          "type": "string",
          "enum": [
            "blobServices"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices"
    },
    "storageAccounts_blobServices_containers_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a container."
        },
        "type": {
          "type": "string",
          "enum": [
            "containers"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers"
    },
    "storageAccounts_blobServices_containers_immutabilityPolicies_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "name": {
          "type": "string",
          "enum": [
            "default"
          ],
          "description": "The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ImmutabilityPolicyProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of an ImmutabilityPolicy of a blob container."
        },
        "type": {
          "type": "string",
          "enum": [
            "immutabilityPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies"
    },
    "storageAccounts_fileServices_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "name": {
          "type": "string",
          "enum": [
            "default"
          ],
          "description": "The name of the file Service within the specified storage account. File Service Name must be \"default\""
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FileServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of File services in storage account."
        },
        "type": {
          "type": "string",
          "enum": [
            "fileServices"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/fileServices"
    },
    "storageAccounts_fileServices_shares_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "description": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FileShareProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of the file share."
        },
        "type": {
          "type": "string",
          "enum": [
            "shares"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/fileServices/shares"
    },
    "storageAccounts_managementPolicies_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "name": {
          "type": "string",
          "enum": [
            "default"
          ],
          "description": "The name of the Storage Account Management Policy. It should always be 'default'"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Storage Account ManagementPolicy properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "managementPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Storage/storageAccounts/managementPolicies"
    },
    "VirtualNetworkRule": {
      "type": "object",
      "properties": {
        "action": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Allow"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The action of virtual network rule."
        },
        "id": {
          "type": "string",
          "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}."
        },
        "state": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "provisioning",
                "deprovisioning",
                "succeeded",
                "failed",
                "networkSourceDeleted"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets the state of virtual network rule."
        }
      },
      "required": [
        "id"
      ],
      "description": "Virtual Network rule."
    }
  }
}